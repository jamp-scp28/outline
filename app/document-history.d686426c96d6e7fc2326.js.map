{"version":3,"sources":["webpack:///./app/components/List/CompositeItem.tsx","webpack:///./app/menus/RevisionMenu.tsx","webpack:///./app/components/EventListItem.tsx","webpack:///./app/components/PaginatedEventList.tsx","webpack:///./app/components/DocumentHistory.tsx"],"names":["CompositeItem","ref","to","rest","as","Item","React","observer","RevisionMenu","document","revisionId","className","showToast","useToasts","team","useCurrentTeam","menu","useMenuState","modal","t","useTranslation","history","useHistory","handleRestore","ev","preventDefault","collaborativeEditing","push","url","restore","type","handleCopy","window","location","origin","documentHistoryUrl","OverflowMenuButton","iconColor","aria-label","ContextMenu","MenuItem","onClick","MenuIconWrapper","Separator","CopyToClipboard","text","onCopy","BaseItem","CompositeListItem","ListItem","Subtitle","styled","span","ItemStyle","css","props","theme","textSecondary","Actions","EventListItem","meta","icon","event","latest","useLocation","can","usePolicy","id","opts","userName","actor","name","isRevision","handleTimeClick","current","focus","color","size","checked","modelId","console","warn","isActive","pathname","isDeleted","undefined","small","exact","title","Time","dateTime","createdAt","tooltipDelay","format","en_US","fr_FR","relative","addSuffix","image","Avatar","src","avatarUrl","subtitle","actions","update","PaginatedEventList","empty","heading","events","fetch","options","PaginatedList","items","renderItem","item","index","compositeProps","key","renderHeading","Heading","EMPTY_ARRAY","Position","Flex","sidebarWidth","Sidebar","background","divider","breakpoint","Title","Header","DocumentHistory","useStores","documents","match","useRouteMatch","getByUrl","params","documentSlug","eventsInDocument","inDocument","updatedAt","unshift","Event","documentId","updatedBy","column","Button","onCloseHistory","documentUrl","goBack","borderOnHover","neutral","Scrollable","topShadow","fetchPage","Empty"],"mappings":"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","file":"document-history.d686426c96d6e7fc2326.js","sourcesContent":["import * as React from \"react\";\nimport {\n  CompositeStateReturn,\n  CompositeItem as BaseCompositeItem,\n} from \"reakit/Composite\";\nimport Item, { Props as ItemProps } from \"./Item\";\n\nexport type Props = ItemProps & CompositeStateReturn;\n\nfunction CompositeItem(\n  { to, ...rest }: Props,\n  ref?: React.Ref<HTMLAnchorElement>\n) {\n  return <BaseCompositeItem as={Item} to={to} {...rest} ref={ref} />;\n}\n\nexport default React.forwardRef(CompositeItem);\n","import { observer } from \"mobx-react\";\nimport { RestoreIcon, LinkIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMenuState } from \"reakit/Menu\";\nimport Document from \"~/models/Document\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport MenuItem from \"~/components/ContextMenu/MenuItem\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Separator from \"~/components/ContextMenu/Separator\";\nimport CopyToClipboard from \"~/components/CopyToClipboard\";\nimport MenuIconWrapper from \"~/components/MenuIconWrapper\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useToasts from \"~/hooks/useToasts\";\nimport { documentHistoryUrl } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  document: Document;\n  revisionId: string;\n  className?: string;\n};\n\nfunction RevisionMenu({ document, revisionId, className }: Props) {\n  const { showToast } = useToasts();\n  const team = useCurrentTeam();\n  const menu = useMenuState({\n    modal: true,\n  });\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const handleRestore = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      if (team.collaborativeEditing) {\n        history.push(document.url, {\n          restore: true,\n          revisionId,\n        });\n      } else {\n        await document.restore({\n          revisionId,\n        });\n        showToast(t(\"Document restored\"), {\n          type: \"success\",\n        });\n        history.push(document.url);\n      }\n    },\n    [history, showToast, t, team.collaborativeEditing, document, revisionId]\n  );\n\n  const handleCopy = React.useCallback(() => {\n    showToast(t(\"Link copied\"), {\n      type: \"info\",\n    });\n  }, [showToast, t]);\n\n  const url = `${window.location.origin}${documentHistoryUrl(\n    document,\n    revisionId\n  )}`;\n\n  return (\n    <>\n      <OverflowMenuButton\n        className={className}\n        iconColor=\"currentColor\"\n        aria-label={t(\"Show menu\")}\n        {...menu}\n      />\n      <ContextMenu {...menu} aria-label={t(\"Revision options\")}>\n        <MenuItem {...menu} onClick={handleRestore}>\n          <MenuIconWrapper>\n            <RestoreIcon />\n          </MenuIconWrapper>\n          {t(\"Restore version\")}\n        </MenuItem>\n        <Separator />\n        <CopyToClipboard text={url} onCopy={handleCopy}>\n          <MenuItem {...menu}>\n            <MenuIconWrapper>\n              <LinkIcon />\n            </MenuIconWrapper>\n            {t(\"Copy link\")}\n          </MenuItem>\n        </CopyToClipboard>\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(RevisionMenu);\n","import {\n  TrashIcon,\n  ArchiveIcon,\n  EditIcon,\n  PublishIcon,\n  MoveIcon,\n  CheckboxIcon,\n} from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { CompositeStateReturn } from \"reakit/Composite\";\nimport styled, { css } from \"styled-components\";\nimport Document from \"~/models/Document\";\nimport Event from \"~/models/Event\";\nimport Avatar from \"~/components/Avatar\";\nimport CompositeItem, {\n  Props as ItemProps,\n} from \"~/components/List/CompositeItem\";\nimport Item, { Actions } from \"~/components/List/Item\";\nimport Time from \"~/components/Time\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport RevisionMenu from \"~/menus/RevisionMenu\";\nimport { documentHistoryUrl } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  document: Document;\n  event: Event;\n  latest?: boolean;\n} & CompositeStateReturn;\n\nconst EventListItem = ({ event, latest, document, ...rest }: Props) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const can = usePolicy(document.id);\n  const opts = {\n    userName: event.actor.name,\n  };\n  const isRevision = event.name === \"revisions.create\";\n  let meta, icon, to;\n\n  const ref = React.useRef<HTMLAnchorElement>(null);\n  // the time component tends to steal focus when clicked\n  // ...so forward the focus back to the parent item\n  const handleTimeClick = React.useCallback(() => {\n    ref.current?.focus();\n  }, [ref]);\n\n  switch (event.name) {\n    case \"revisions.create\":\n    case \"documents.latest_version\": {\n      if (latest) {\n        icon = <CheckboxIcon color=\"currentColor\" size={16} checked />;\n        meta = t(\"Latest version\");\n        to = documentHistoryUrl(document);\n        break;\n      } else {\n        icon = <EditIcon color=\"currentColor\" size={16} />;\n        meta = t(\"{{userName}} edited\", opts);\n        to = documentHistoryUrl(document, event.modelId || \"\");\n        break;\n      }\n    }\n\n    case \"documents.archive\":\n      icon = <ArchiveIcon color=\"currentColor\" size={16} />;\n      meta = t(\"{{userName}} archived\", opts);\n      break;\n\n    case \"documents.unarchive\":\n      meta = t(\"{{userName}} restored\", opts);\n      break;\n\n    case \"documents.delete\":\n      icon = <TrashIcon color=\"currentColor\" size={16} />;\n      meta = t(\"{{userName}} deleted\", opts);\n      break;\n\n    case \"documents.restore\":\n      meta = t(\"{{userName}} moved from trash\", opts);\n      break;\n\n    case \"documents.publish\":\n      icon = <PublishIcon color=\"currentColor\" size={16} />;\n      meta = t(\"{{userName}} published\", opts);\n      break;\n\n    case \"documents.move\":\n      icon = <MoveIcon color=\"currentColor\" size={16} />;\n      meta = t(\"{{userName}} moved\", opts);\n      break;\n\n    default:\n      console.warn(\"Unhandled event: \", event.name);\n  }\n\n  if (!meta) {\n    return null;\n  }\n\n  const isActive = location.pathname === to;\n\n  if (document.isDeleted) {\n    to = undefined;\n  }\n\n  return (\n    <BaseItem\n      small\n      exact\n      to={to}\n      title={\n        <Time\n          dateTime={event.createdAt}\n          tooltipDelay={500}\n          format={{\n            en_US: \"MMM do, h:mm a\",\n            fr_FR: \"'Le 'd MMMM 'à' H:mm\",\n          }}\n          relative={false}\n          addSuffix\n          onClick={handleTimeClick}\n        />\n      }\n      image={<Avatar src={event.actor?.avatarUrl} size={32} />}\n      subtitle={\n        <Subtitle>\n          {icon}\n          {meta}\n        </Subtitle>\n      }\n      actions={\n        isRevision && isActive && event.modelId && can.update ? (\n          <RevisionMenu document={document} revisionId={event.modelId} />\n        ) : undefined\n      }\n      ref={ref}\n      {...rest}\n    />\n  );\n};\n\nconst BaseItem = React.forwardRef(\n  ({ to, ...rest }: ItemProps, ref?: React.Ref<HTMLAnchorElement>) => {\n    if (to) {\n      return <CompositeListItem to={to} ref={ref} {...rest} />;\n    }\n\n    return <ListItem ref={ref} {...rest} />;\n  }\n);\n\nconst Subtitle = styled.span`\n  svg {\n    margin: -3px;\n    margin-right: 2px;\n  }\n`;\n\nconst ItemStyle = css`\n  border: 0;\n  position: relative;\n  margin: 8px;\n  padding: 8px;\n  border-radius: 8px;\n\n  img {\n    border-color: transparent;\n  }\n\n  &::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: -4px;\n    left: 23px;\n    width: 2px;\n    height: calc(100% + 8px);\n    background: ${(props) => props.theme.textSecondary};\n    opacity: 0.25;\n  }\n\n  &:nth-child(2)::before {\n    height: 50%;\n    top: auto;\n    bottom: -4px;\n  }\n\n  &:last-child::before {\n    height: 50%;\n  }\n\n  &:first-child:last-child::before {\n    display: none;\n  }\n\n  ${Actions} {\n    opacity: 0.5;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n`;\n\nconst ListItem = styled(Item)`\n  ${ItemStyle}\n`;\n\nconst CompositeListItem = styled(CompositeItem)`\n  ${ItemStyle}\n`;\n\nexport default EventListItem;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Document from \"~/models/Document\";\nimport Event from \"~/models/Event\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport EventListItem from \"./EventListItem\";\n\ntype Props = {\n  events: Event[];\n  document: Document;\n  fetch: (options: Record<string, any> | undefined) => Promise<Event[]>;\n  options?: Record<string, any>;\n  heading?: React.ReactNode;\n  empty?: React.ReactNode;\n};\nconst PaginatedEventList = React.memo<Props>(function PaginatedEventList({\n  empty,\n  heading,\n  events,\n  fetch,\n  options,\n  document,\n  ...rest\n}: Props) {\n  return (\n    <PaginatedList\n      items={events}\n      empty={empty}\n      heading={heading}\n      fetch={fetch}\n      options={options}\n      renderItem={(item: Event, index, compositeProps) => {\n        return (\n          <EventListItem\n            key={item.id}\n            event={item}\n            document={document}\n            latest={index === 0}\n            {...compositeProps}\n          />\n        );\n      }}\n      renderHeading={(name) => <Heading>{name}</Heading>}\n      {...rest}\n    />\n  );\n});\n\nconst Heading = styled(\"h3\")`\n  font-size: 14px;\n  padding: 0 12px;\n`;\n\nexport default PaginatedEventList;\n","import { observer } from \"mobx-react\";\nimport { CloseIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport Event from \"~/models/Event\";\nimport Button from \"~/components/Button\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport PaginatedEventList from \"~/components/PaginatedEventList\";\nimport Scrollable from \"~/components/Scrollable\";\nimport useStores from \"~/hooks/useStores\";\nimport { documentUrl } from \"~/utils/routeHelpers\";\n\nconst EMPTY_ARRAY: Event[] = [];\n\nfunction DocumentHistory() {\n  const { events, documents } = useStores();\n  const { t } = useTranslation();\n  const match = useRouteMatch<{ documentSlug: string }>();\n  const history = useHistory();\n  const document = documents.getByUrl(match.params.documentSlug);\n\n  const eventsInDocument = document\n    ? events.inDocument(document.id)\n    : EMPTY_ARRAY;\n\n  const onCloseHistory = () => {\n    if (document) {\n      history.push(documentUrl(document));\n    } else {\n      history.goBack();\n    }\n  };\n\n  const items = React.useMemo(() => {\n    if (\n      eventsInDocument[0] &&\n      document &&\n      eventsInDocument[0].createdAt !== document.updatedAt\n    ) {\n      eventsInDocument.unshift(\n        new Event(\n          {\n            name: \"documents.latest_version\",\n            documentId: document.id,\n            createdAt: document.updatedAt,\n            actor: document.updatedBy,\n          },\n          events\n        )\n      );\n    }\n\n    return eventsInDocument;\n  }, [eventsInDocument, events, document]);\n\n  return (\n    <Sidebar>\n      {document ? (\n        <Position column>\n          <Header>\n            <Title>{t(\"History\")}</Title>\n            <Button\n              icon={<CloseIcon />}\n              onClick={onCloseHistory}\n              borderOnHover\n              neutral\n            />\n          </Header>\n          <Scrollable topShadow>\n            <PaginatedEventList\n              aria-label={t(\"History\")}\n              fetch={events.fetchPage}\n              events={items}\n              options={{\n                documentId: document.id,\n              }}\n              document={document}\n              empty={<Empty>{t(\"Oh weird, there's nothing here\")}</Empty>}\n            />\n          </Scrollable>\n        </Position>\n      ) : null}\n    </Sidebar>\n  );\n}\n\nconst Position = styled(Flex)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  width: ${(props) => props.theme.sidebarWidth}px;\n`;\n\nconst Sidebar = styled(Flex)`\n  display: none;\n  position: relative;\n  flex-shrink: 0;\n  background: ${(props) => props.theme.background};\n  width: ${(props) => props.theme.sidebarWidth}px;\n  border-left: 1px solid ${(props) => props.theme.divider};\n  z-index: 1;\n\n  ${breakpoint(\"tablet\")`\n    display: flex;\n  `};\n`;\n\nconst Title = styled(Flex)`\n  font-size: 16px;\n  font-weight: 600;\n  text-align: center;\n  align-items: center;\n  justify-content: flex-start;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  width: 0;\n  flex-grow: 1;\n`;\n\nconst Header = styled(Flex)`\n  align-items: center;\n  position: relative;\n  padding: 12px;\n  color: ${(props) => props.theme.text};\n  flex-shrink: 0;\n`;\n\nexport default observer(DocumentHistory);\n"],"sourceRoot":""}