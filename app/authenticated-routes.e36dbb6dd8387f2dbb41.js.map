{"version":3,"sources":["webpack:///./app/components/InputSearchPage.tsx","webpack:///./app/components/Divider.ts","webpack:///./app/scenes/CollectionPermissions/AddGroupsToCollection.tsx","webpack:///./app/menus/MemberMenu.tsx","webpack:///./app/scenes/CollectionPermissions/components/MemberListItem.tsx","webpack:///./app/scenes/CollectionPermissions/AddPeopleToCollection.tsx","webpack:///./app/menus/CollectionGroupMemberMenu.tsx","webpack:///./app/scenes/CollectionPermissions/components/CollectionGroupMemberListItem.tsx","webpack:///./app/scenes/CollectionPermissions/index.tsx","webpack:///./app/scenes/Search/components/CollectionFilter.tsx","webpack:///./app/scenes/Archive.tsx","webpack:///./app/scenes/DocumentNew.tsx","webpack:///./app/scenes/Drafts.tsx","webpack:///./app/menus/NewTemplateMenu.tsx","webpack:///./app/scenes/Templates.tsx","webpack:///./app/scenes/Trash.tsx","webpack:///./app/scenes/ErrorSuspended.tsx","webpack:///./app/hooks/useSessions.ts","webpack:///./app/menus/OrganizationMenu.tsx","webpack:///./app/components/Sidebar/components/ArchiveLink.tsx","webpack:///./app/scenes/DocumentReparent.tsx","webpack:///./app/components/Sidebar/components/DropToImport.tsx","webpack:///./app/components/Sidebar/components/EditableTitle.tsx","webpack:///./app/components/Sidebar/components/Relative.tsx","webpack:///./app/components/Sidebar/components/StarredContext.ts","webpack:///./app/components/Sidebar/components/CollectionLink.tsx","webpack:///./app/components/Sidebar/components/DropCursor.tsx","webpack:///./app/components/Sidebar/components/Folder.tsx","webpack:///./app/components/Sidebar/components/DocumentLink.tsx","webpack:///./app/components/Sidebar/components/EmptyCollectionPlaceholder.tsx","webpack:///./app/components/Sidebar/components/CollectionLinkChildren.tsx","webpack:///./app/components/Sidebar/components/useCollectionDocuments.ts","webpack:///./app/components/Sidebar/components/DraggableCollectionLink.tsx","webpack:///./app/components/Sidebar/components/Header.tsx","webpack:///./app/hooks/usePersistedState.ts","webpack:///./app/components/Sidebar/components/PlaceholderCollections.tsx","webpack:///./app/components/Sidebar/components/SidebarAction.tsx","webpack:///./app/components/Sidebar/components/Collections.tsx","webpack:///./app/components/Sidebar/components/StarredLink.tsx","webpack:///./app/components/Sidebar/components/Starred.tsx","webpack:///./app/components/Sidebar/components/TrashLink.tsx","webpack:///./app/components/Sidebar/App.tsx","webpack:///./app/components/Sidebar/index.ts","webpack:///./app/components/Sidebar/components/Version.tsx","webpack:///./app/components/Sidebar/Settings.tsx","webpack:///./app/components/AuthenticatedLayout.tsx","webpack:///./app/routes/authenticated.tsx","webpack:///./app/actions/definitions/users.tsx","webpack:///./app/scenes/Settings/components/ImageUpload.tsx","webpack:///./app/components/TeamLogo.ts","webpack:///./app/utils/pageVisibility.ts","webpack:///./app/components/SocketProvider.tsx","webpack:///./app/hooks/useImportDocument.ts","webpack:///./app/components/Heading.ts","webpack:///./app/components/ButtonLink.tsx","webpack:///./app/scenes/GroupNew.tsx","webpack:///./app/scenes/Search/components/DateFilter.tsx","webpack:///./app/hooks/useQuery.ts","webpack:///./app/components/FilterOptions.tsx","webpack:///./app/scenes/CollectionExport.tsx","webpack:///./app/components/CollectionDeleteDialog.tsx","webpack:///./app/menus/CollectionMenu.tsx","webpack:///./app/menus/GroupMemberMenu.tsx","webpack:///./app/scenes/GroupMembers/components/GroupMemberListItem.tsx","webpack:///./app/scenes/GroupMembers/AddPeopleToGroup.tsx","webpack:///./app/scenes/GroupMembers/GroupMembers.tsx","webpack:///./app/scenes/GroupMembers/index.ts","webpack:///./app/components/InputSelectRole.tsx","webpack:///./app/scenes/Invite.tsx","webpack:///./app/menus/NewDocumentMenu.tsx","webpack:///./app/utils/compressImage.ts","webpack:///./app/components/GroupListItem.tsx","webpack:///./app/components/DefaultCollectionInputSelect.tsx","webpack:///./app/scenes/Settings/components/ImageInput.tsx","webpack:///./app/scenes/Settings/components/SettingRow.tsx","webpack:///./app/scenes/Settings/Details.tsx","webpack:///./app/components/Spinner.tsx","webpack:///./app/menus/FileOperationMenu.tsx","webpack:///./app/scenes/Settings/components/FileOperationListItem.tsx","webpack:///./app/scenes/Settings/Export.tsx","webpack:///./app/scenes/Settings/Features.tsx","webpack:///./app/scenes/GroupDelete.tsx","webpack:///./app/scenes/GroupEdit.tsx","webpack:///./app/menus/GroupMenu.tsx","webpack:///./app/scenes/Settings/Groups.tsx","webpack:///./app/scenes/Settings/components/DropToImport.tsx","webpack:///./app/scenes/Settings/components/HelpDisclosure.tsx","webpack:///./app/scenes/Settings/components/ImportNotionDialog.tsx","webpack:///./app/scenes/Settings/components/ImportOutlineDialog.tsx","webpack:///./app/scenes/Settings/Import.tsx","webpack:///./app/components/TableFromParams.tsx","webpack:///./app/menus/UserMenu.tsx","webpack:///./app/scenes/Settings/components/PeopleTable.tsx","webpack:///./app/scenes/Settings/components/UserStatusFilter.tsx","webpack:///./app/scenes/Settings/Members.tsx","webpack:///./app/scenes/Settings/Notifications.tsx","webpack:///./app/scenes/UserDelete.tsx","webpack:///./app/scenes/Settings/Profile.tsx","webpack:///./app/scenes/Settings/Security.tsx","webpack:///./app/menus/ShareMenu.tsx","webpack:///./app/scenes/Settings/components/SharesTable.tsx","webpack:///./app/scenes/Settings/Shares.tsx","webpack:///./app/components/List/index.ts","webpack:///./app/components/List/List.ts","webpack:///./app/components/SlackIcon.tsx","webpack:///./app/scenes/Settings/components/SlackButton.tsx","webpack:///./app/scenes/Settings/components/SlackListItem.tsx","webpack:///./app/scenes/Settings/Slack.tsx","webpack:///./app/scenes/APITokenNew.tsx","webpack:///./app/scenes/Settings/components/TokenRevokeDialog.tsx","webpack:///./app/scenes/Settings/components/TokenListItem.tsx","webpack:///./app/scenes/Settings/Tokens.tsx","webpack:///./app/components/ZapierIcon.tsx","webpack:///./app/scenes/Settings/Zapier.tsx","webpack:///./app/hooks/useAuthorizedSettingsConfig.ts"],"names":["InputMaxWidth","styled","Input","Outline","observer","InputSearchPage","onKeyDown","value","onChange","placeholder","label","collectionId","source","inputRef","React","theme","useTheme","history","useHistory","t","useTranslation","useBoolean","isFocused","setFocused","setUnfocused","focus","current","useKeyDown","ev","isModKey","preventDefault","handleKeyDown","key","push","searchPath","currentTarget","ref","innerRef","type","icon","color","inputBorderFocused","inputBorder","onFocus","onBlur","margin","labelHidden","Divider","hr","props","divider","AddGroupsToCollection","handleNewGroupModalOpen","newGroupModalOpen","handleNewGroupModalClose","handleFilter","query","target","debouncedFetch","groups","fetchPage","handleAddGroup","group","collectionGroupMemberships","create","collection","id","groupId","permission","toasts","showToast","groupName","name","err","console","error","render","this","policies","auth","user","team","can","abilities","Flex","column","createGroup","Text","ButtonLink","onClick","flex","PaginatedList","empty","Empty","items","notInCollection","fetch","undefined","renderItem","item","GroupListItem","showFacepile","renderActions","ButtonWrap","Button","neutral","Modal","title","onRequestClose","isOpen","GroupNew","onSubmit","observable","div","withTranslation","withStores","MemberMenu","onRemove","menu","useMenuState","modal","OverflowMenuButton","aria-label","ContextMenu","Template","dangerous","Select","InputSelect","textSecondary","MemberListItem","membership","onUpdate","onAdd","canEdit","PERMISSIONS","subtitle","lastActiveAt","Trans","Time","dateTime","isInvited","Badge","isAdmin","primary","image","Avatar","src","avatarUrl","size","actions","align","gap","options","disabled","ariaLabel","nude","AddPeopleToCollection","handleInviteModalOpen","inviteModalOpen","handleInviteModalClose","users","handleAddUser","memberships","userId","userName","teamName","autoFocus","Invite","CollectionGroupMemberMenu","onMembers","CollectionGroupMemberListItem","collectionGroupMembership","showAvatar","openMembersModal","PermissionExplainer","Actions","CollectionPermissions","useCurrentUser","useStores","useToasts","addGroupModalOpen","handleAddGroupModalOpen","handleAddGroupModalClose","addMemberModalOpen","handleAddMemberModalOpen","handleAddMemberModalClose","handleRemoveUser","delete","handleUpdateUser","handleRemoveGroup","handleUpdateGroup","handleChangePermission","save","fetchOptions","handleSharingChange","sharing","checked","collectionName","collectionGroups","inCollection","collectionUsers","isEmpty","length","teamSharingEnabled","InputSelectPermission","defaults","values","components","em","Switch","note","Labeled","get","CollectionFilter","collections","onSelect","collectionOptions","orderedData","map","activeKey","defaultLabel","selectedPrefix","Archive","documents","Scene","Heading","PaginatedDocumentList","archived","fetchArchived","heading","Subheading","sticky","showCollection","showTemplate","DocumentNew","location","useLocation","match","useRouteMatch","params","useEffect","queryString","parse","search","parentDocumentId","toString","templateId","template","text","document","replace","editDocumentUrl","state","goBack","createDocument","auto","CenteredContent","PlaceholderDocument","Drafts","handleQueryChange","URLSearchParams","handleFilterChange","pathname","stringify","skipEmptyString","componentDidUpdate","prevProps","isFiltered","dateFilter","NewDocumentMenu","Filters","DateFilter","fetchDrafts","drafts","showParentDocuments","CollectionName","NewTemplateMenu","useCurrentTeam","usePolicy","reduce","filtered","update","to","newDocumentPath","CollectionIcon","MenuButton","Templates","fetchTemplates","templates","templatesAlphabetical","sort","Tabs","Tab","exact","showDraft","Trash","deleted","fetchDeleted","ErrorSuspended","PageTitle","role","suspendedContactEmail","loadSessionsFromCookie","sessions","JSON","getCookie","Object","keys","teamId","Logo","OrganizationMenu","children","useSessions","setSessions","unstable_offset","placement","ui","previousTheme","usePrevious","hide","otherSessions","filter","session","url","navigateToSettings","separator","createAction","section","alt","logoUrl","perform","window","href","logout","ArchiveLink","useDrop","accept","drop","archive","canDrop","collect","monitor","isDocumentDropping","isOver","dropToArchiveDocument","SidebarLink","archivePath","open","active","isArchived","isDeleted","isActiveDrop","DocumentReparent","onCancel","useState","isSaving","setIsSaving","prevCollection","accessMapping","read_write","read","null","handleSubmit","move","message","prevCollectionName","newCollectionName","prevPermission","newPermission","DropzoneContainer","$isDragActive","css","slateDark","white","DropToImport","documentId","useImportDocument","handleFiles","isImporting","targetId","invariant","handleRejection","importFileTypes","join","onDropAccepted","onDropRejected","noClick","multiple","getRootProps","getInputProps","isDragActive","tabIndex","LoadingIndicator","input","sidebarText","background","EditableTitle","canUpdate","onEditing","rest","isEditing","setIsEditing","originalValue","setOriginalValue","setValue","handleChange","event","handleDoubleClick","stopPropagation","handleSave","trimmedValue","trim","dir","onDoubleClick","Relative","StarredContext","useStarredContext","CollectionLink","expanded","onDisclosureClick","isDraggingAnyCollection","itemRef","dialogs","menuOpen","handleMenuOpen","handleMenuClose","inStarredSection","handleTitleChange","didDrop","openModal","content","closeAllModals","shallow","handleTitleEditing","context","useActionContext","activeCollectionId","starred","showActions","isActive","depth","Fade","NudeButton","tooltip","delay","action","hideOnActionDisabled","CollectionMenu","onOpen","onClose","Cursor","position","sidebarActiveBackground","DropCursor","Wrapper","$expanded","Folder","openedOnce","setOpenedOnce","InnerDocumentLink","node","activeDocument","prefetchDocument","isDraft","index","parentId","isActiveDocument","hasChildDocuments","fetchChildDocuments","pathToNode","pathToDocument","entry","showChildren","includes","setExpanded","handleDisclosureClick","handleMouseEnter","lastRevision","revision","isMoving","movingDocumentId","manualSort","field","useDrag","isDragging","canDrag","drag","hoverExpanding","resetHoverExpanding","clearTimeout","_item","getItem","hover","setTimeout","isOverReparent","canDropToReparent","dropToReparent","timeout","isOverReorder","isDraggingAnyDocument","dropToReorder","nodeChildren","insertDraftDocument","sortNavigationNodes","asNavigationNode","isExpanded","hasChildren","onDragLeave","Draggable","$isDragging","$isMoving","activeClassName","onMouseEnter","maxLength","MAX_TITLE_LENGTH","scrollIntoViewIfNeeded","createChildDocument","Tooltip","as","Link","DocumentMenu","childNode","DocumentLink","EmptyCollectionPlaceholder","CollectionLinkChildren","childDocuments","useCollectionDocuments","sortedDocuments","DraggableCollectionLink","belowCollection","locationStateStarred","useLocationStateStarred","belowCollectionIndex","fractionalIndex","isCollectionDropping","getItemType","dropToReorderCollection","isCollectionDragging","dragToReorderCollection","e","displayChildDocuments","fadeAndSlideDown","keyframes","span","button","textTertiary","Disclosure","CollapsedIcon","H3","h3","Header","firstRender","setFirstRender","usePersistedState","defaultValue","Storage","storedValue","setStoredValue","useEventListener","newValue","valueToStore","Function","set","Logger","debug","handleClick","PlaceholderCollections","PlaceholderText","SidebarAction","isContextMenu","isCommandBar","activeDocumentId","menuItem","actionToMenuItem","visible","Collections","isFetching","setFetching","fetchError","setFetchError","isPreloaded","orderedCollections","isLoaded","limit","load","createCollection","StarredLink","star","prevExpanded","next","isDraggingAny","emoji","parseTitle","titleWithDefault","getDocumentChildren","EmojiIcon","yellow","Starred","displayedStarsCount","setDisplayedStarsCount","stars","fetchResults","offset","STARRED_PAGINATION_LIMIT","handleShowMore","prev","isDraggingAnyStar","Provider","slice","TrashLink","setDocument","doc","dropToTrashDocument","trashPath","documentName","noun","isCentered","DocumentDelete","StyledTeamLogo","TeamLogo","Sidebar","AppSidebar","dndArea","setDndArea","handleSidebarRef","html5Options","rootElement","DndProvider","backend","HTML5Backend","SidebarButton","width","height","showDisclosure","Scrollable","shadow","Section","homePath","draftsPath","justify","totalDrafts","templatesPath","isTemplate","inviteUser","Version","releasesBehind","setReleasesBehind","res","json","releases","Array","isArray","computedReleasesBehind","release","tag_name","findIndex","tagName","version","loadReleases","LilBadge","count","StyledBackIcon","BackIcon","SettingsSidebar","configs","useAuthorizedSettingsConfig","groupedConfig","returnToApp","minHeight","header","path","isCloudHosted","DocumentHistory","CommandBar","AuthenticatedLayout","goToSearch","metaKey","ctrlKey","goToNewDocument","altKey","showSidebar","authenticated","isSuspended","sidebar","settingsPath","component","rightRail","fallback","slug","Layout","RegisterKeyDown","trigger","handler","SettingsRoutes","Document","Collection","Home","Search","RedirectDocument","documentSlug","AuthenticatedRoutes","SocketProvider","from","Error404","keywords","UserSection","stores","rootUserActions","ImageUpload","avatarEditorRef","files","isCropping","file","handleCrop","isUploading","setImmediate","uploadImage","canvas","getImage","imageBlob","dataUrlToBlob","toDataURL","compressImage","maxHeight","maxWidth","compressed","uploadFile","public","attachment","onSuccess","onError","handleClose","handleZoom","HTMLInputElement","zoom","parseFloat","renderCropping","submitText","AvatarEditorContainer","border","borderRadius","scale","rotate","RangeInput","min","max","step","CropButton","defaultProps","img","hidden","visibilityChange","getVisibilityListener","getPageVisible","SocketContext","checkConnection","socket","disconnected","close","createConnection","io","origin","transports","reconnectionDelay","reconnectionDelayMax","pins","presence","views","fileOperations","token","on","emit","clear","opts","domain","documentIds","documentDescriptor","deletedAt","updatedAt","remove","force","statusCode","collectionIds","collectionDescriptor","forEach","removeCollectionDocuments","removeCollectionMemberships","groupIds","groupDescriptor","teamIds","add","modelId","updateIndex","init","userIds","editingIds","touch","leave","componentDidMount","addEventListener","componentWillUnmount","disconnect","removeEventListener","importingLock","setImporting","cId","redirect","import","publish","h1","centered","link","setName","setGroup","Group","handleNameChange","required","useQuery","Note","LabelWithNote","white50","StyledButton","Inner","FilterOptions","className","selected","find","option","selectedLabel","disclosure","CollectionExport","isLoading","setIsLoading","export","CollectionDeleteDialog","ConfirmationDialog","savingText","danger","defaultCollectionId","handlePermissions","handleEdit","CollectionEdit","handleExport","handleNewDocument","handleImportDocument","click","handleFilePicked","getDataTransferFiles","handleChangeSort","direction","handleDelete","handleStar","handleUnstar","unstar","alphabeticalSort","canUserInTeam","isStarred","VisuallyHidden","GroupMemberMenu","GroupMemberListItem","AddPeopleToGroup","groupMemberships","notInGroup","GroupMembers","addModalOpen","setAddModalOpen","handleAddModal","inGroup","InputSelectRole","CopyBlock","secondaryBackground","Remove","linkCopied","setLinkCopied","email","invites","setInvites","predictedDomain","split","invite","data","sent","prevInvites","newInvites","handleAdd","MAX_INVITES","handleRemove","splice","handleCopy","handleRoleChange","guestSignin","signinMethods","subdomain","readOnly","CopyToClipboard","onCopy","style","marginBottom","short","data-on","data-event-category","data-event-action","ColorCollectionIcon","Promise","resolve","reject","Compressor","success","handleMembersModalOpen","membersModalOpen","handleMembersModalClose","memberCount","MAX_AVATAR_DISPLAY","gm","overflow","Image","Title","DefaultCollectionInputSelect","onSelectCollection","fetching","useMemo","publicCollections","acc","ImageInput","ImageBox","avatarStyles","Row","$border","transparentize","breakpoint","Column","Label","SettingRow","description","htmlFor","Details","form","useRef","setSubdomain","setAvatarUrl","setDefaultCollectionId","updateTeam","handleSubdomainChange","toLowerCase","handleAvatarUpload","handleAvatarError","isValid","checkValidity","autoComplete","env","SUBDOMAINS_ENABLED","minLength","Spinner","SVG","viewBox","xmlns","Circle","fill","strokeWidth","strokeLinecap","cx","cy","r","svg","circle","FileOperationMenu","onDelete","FileOperationListItem","fileOperation","stateMapping","creating","expired","uploading","iconMapping","complete","createdAt","addSuffix","shorten","sizeInMB","Export","setLoading","isExporting","setExporting","userEmail","exports","Features","collaborativeEditing","setData","newData","GroupDelete","isDeleting","setIsDeleting","groupSettingsPath","GroupEdit","GroupMenu","editModalOpen","setEditModalOpen","deleteModalOpen","setDeleteModalOpen","Groups","Icon","NewDocumentIcon","brand","blue","$disabled","format","HelpContent","DisclosureContent","HelpDisclosure","useDisclosureState","animated","borderOnHover","ImportNotionDialog","ImportOutlineDialog","Import","Item","OutlineLogo","cdnPath","imports","Table","TableFromParams","topRef","handleChangePage","page","scrollIntoView","scrollMode","behavior","block","onChangeSort","onChangePage","UserMenu","handlePromote","confirm","promote","handleMember","demote","handleViewer","handleSuspend","suspend","handleRevoke","confirmation","handleResendInvite","resendInvite","handleActivate","activate","Badges","PeopleTable","canManage","currentUser","columns","accessor","Cell","row","original","isViewer","disableSortBy","i","UserStatusFilter","LargeUserStatusFilter","Members","totalPages","setTotalPages","setUserIds","toUpperCase","parseInt","response","Math","ceil","PAGINATION_SYMBOL","total","u","fetchData","admins","suspended","invited","viewers","indexOf","handleSearch","InputSearch","manage","pageSize","defaultSortDirection","Notifications","notificationSettings","showSuccessMessage","setting","getByEvent","showSuccessNotice","Notice","EMAIL_ENABLED","UserDelete","deleteUser","DangerZone","Profile","showDeleteModal","setShowDeleteModal","language","setLanguage","updateUser","toggleDeleteAccount","rel","languageOptions","handleLanguageChange","Security","documentEmbeds","defaultUserRole","memberCollectionCreate","inviteRequired","allowedDomains","authenticationMethods","domainsChanged","setDomainsChanged","saveData","handleDefaultRoleChange","newDefaultRole","handleAllowSignupsChange","handleRemoveDomain","createOnDomainChangedHandler","flexWrap","handleAddDomain","ShareMenu","share","shares","handleGoToDocument","documentUrl","revoke","MenuItem","SharesTable","createdBy","Shares","canShareDocuments","shareIds","setShareIds","List","ol","SlackIcon","d","SlackButton","scopes","redirectUri","SLACK_CLIENT_ID","slackAuth","Events","SlackListItem","integration","events","n","mapping","popover","usePopoverState","gutter","channelName","settings","channel","PopoverDisclosure","Popover","Code","code","codeBackground","Slack","integrations","commandIntegration","slackIntegrations","groupedCollections","a","command","URL","APITokenNew","apiKeys","TokenRevokeDialog","tokenName","TokenListItem","showRevokeConfirmation","secret","Tokens","newModalOpen","handleNewModalOpen","handleNewModalClose","createApiKey","ZapierIcon","Zapier","config","enabled","ProfileIcon","EmailIcon","Api","CodeIcon","TeamIcon","PadlockIcon","BeakerIcon","UserIcon","GroupIcon","LinkIcon","DownloadIcon"],"mappings":"09CAyFA,IAAMA,EAAgBC,kBAAOC,KAAV,qFAAGD,CAAH,4CAGfE,KAKWC,iBA1Ef,SAASC,gBAAT,GAQU,IAPRC,EAOQ,EAPRA,UACAC,EAMQ,EANRA,MACAC,EAKQ,EALRA,SACAC,EAIQ,EAJRA,YACAC,EAGQ,EAHRA,MACAC,EAEQ,EAFRA,aACAC,EACQ,EADRA,OAEMC,EAAWC,SAA+B,MAC1CC,EAAQC,qBACRC,EAAUC,cACRC,EAAMC,cAAND,EACR,iBAA8CE,aAAW,GAAzD,GAAOC,EAAP,KAAkBC,EAAlB,KAA8BC,EAA9B,KACMC,EAAQX,eAAkB,WAAM,MACpC,UAAAD,EAASa,eAAT,SAAkBD,UACjB,IAEHE,YAAW,KAAK,SAACC,GACXC,YAASD,KACXA,EAAGE,iBACHL,QAIJ,IAAMM,EAAgBjB,eACpB,SAACc,GACgB,UAAXA,EAAGI,MACLJ,EAAGE,iBACHb,EAAQgB,KACNC,YAAWN,EAAGO,cAAc5B,MAAO,CACjCI,eACAyB,IAAKxB,MAKPN,GACFA,EAAUsB,KAGd,CAACX,EAASN,EAAcC,EAAQN,IAGlC,OACE,gBAACN,EAAD,CACEqC,SAAUxB,EACVyB,KAAK,SACL7B,YAAaA,GAAe,GAAJ,OAAOU,EAAE,UAAT,KACxBZ,MAAOA,EACPC,SAAUA,EACVF,UAAWyB,EACXQ,KACE,gBAAC,aAAD,CACEC,MAAOlB,EAAYP,EAAM0B,mBAAqB1B,EAAM2B,cAGxDhC,MAAOA,EACPiC,QAASpB,EACTqB,OAAQpB,EACRqB,OAAQ,EACRC,aAAW,Q,gRC3EFC,EAPC9C,UAAO+C,GAAV,8DAAG/C,CAAH,8DAEgB,SAACgD,GAAD,OAAWA,EAAMlC,MAAMmC,W,spFCwB9CC,EADL/C,a,mvBAQCgD,wBAA0B,WACxB,EAAKC,mBAAoB,G,EAG3BC,yBAA2B,WACzB,EAAKD,mBAAoB,G,EAG3BE,aAAe,SAAC3B,GACd,EAAK4B,MAAQ5B,EAAG6B,OAAOlD,MACvB,EAAKmD,kB,EAGPA,eAAiB,KAAS,WACxB,EAAKT,MAAMU,OAAOC,UAAU,CAC1BJ,MAAO,EAAKA,UAEb,K,EAEHK,eAAiB,SAACC,GAChB,IAAQ3C,EAAM,EAAK8B,MAAX9B,EAER,IACE,EAAK8B,MAAMc,2BAA2BC,OAAO,CAC3CrD,aAAc,EAAKsC,MAAMgB,WAAWC,GACpCC,QAASL,EAAMI,GACfE,WAAY,eAEd,EAAKnB,MAAMoB,OAAOC,UAChBnD,EAAE,8CAA+C,CAC/CoD,UAAWT,EAAMU,OAEnB,CACElC,KAAM,YAGV,MAAOmC,GACP,EAAKxB,MAAMoB,OAAOC,UAAUnD,EAAE,sBAAuB,CACnDmB,KAAM,UAERoC,QAAQC,MAAMF,K,8MAIlB,SAAAG,SAAS,WACP,EAAkDC,KAAK5B,MAA/CU,EAAR,EAAQA,OAAQmB,EAAhB,EAAgBA,SAAUb,EAA1B,EAA0BA,WAAYc,EAAtC,EAAsCA,KAAM5D,EAA5C,EAA4CA,EACpC6D,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,IAAKD,IAASC,EACZ,OAAO,KAGT,IAAMC,EAAMJ,EAASK,UAAUF,EAAKf,IAEpC,OACE,gBAACkB,EAAA,EAAD,CAAMC,QAAM,GACTH,EAAII,aACH,gBAACC,EAAA,EAAD,CAAMjD,KAAK,aACRnB,EAAE,4CAA6C,IAChD,gBAACqE,EAAA,EAAD,CAAYC,QAASZ,KAAKzB,yBACvBjC,EAAE,mBAHP,KASF,gBAACjB,EAAA,EAAD,CACEoC,KAAK,SACL7B,YAAW,UAAKU,EAAE,wBAAP,KACXZ,MAAOsE,KAAKrB,MACZhD,SAAUqE,KAAKtB,aACf7C,MAAOS,EAAE,iBACT2B,aAAW,EACX4C,MAAI,IAEN,gBAACC,EAAA,EAAD,CACEC,MACEf,KAAKrB,MACH,gBAACqC,EAAA,EAAD,KAAQ1E,EAAE,mCAEV,gBAAC0E,EAAA,EAAD,KAAQ1E,EAAE,0BAGd2E,MAAOnC,EAAOoC,gBAAgB9B,EAAWC,GAAIW,KAAKrB,OAClDwC,MAAOnB,KAAKrB,WAAQyC,EAAYtC,EAAOC,UACvCsC,WAAY,oBAACC,GAAD,OACV,gBAACC,EAAA,EAAD,CACEpE,IAAKmE,EAAKjC,GACVJ,MAAOqC,EACPE,cAAY,EACZC,cAAe,gCACb,gBAACC,EAAD,KACE,gBAACC,EAAA,EAAD,CAAQf,QAAS,0BAAM,EAAK5B,eAAesC,IAAOM,SAAO,GACtDtF,EAAE,eAOd+D,EAAII,aACH,gBAACoB,EAAA,EAAD,CACEC,MAAOxF,EAAE,kBACTyF,eAAgB/B,KAAKvB,yBACrBuD,OAAQhC,KAAKxB,mBAEb,gBAACyD,EAAA,EAAD,CAAUC,SAAUlC,KAAKvB,iC,uBAhHDxC,a,6DACjCkG,K,qFACmB,K,iDAEnBA,K,oFACO,M,SAmHJT,EAAatG,UAAOgH,IAAV,wFAAGhH,CAAH,sBAIDiH,gBAAkBC,YAAWhE,I,iWCpH7BiE,I,YAAAA,GAzBf,SAASA,WAAT,GAAyC,IAAnBC,EAAmB,EAAnBA,SACZlG,EAAMC,cAAND,EACFmG,EAAOC,YAAa,CACxBC,OAAO,IAET,OACE,gCACE,gBAACC,EAAA,EAAD,UAAoBC,aAAYvG,EAAE,cAAkBmG,IACpD,gBAACK,EAAA,EAAD,YAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,oBACnC,gBAACyG,EAAA,EAAD,YACMN,EADN,CAEExB,MAAO,CACL,CACExD,KAAM,SACNqE,MAAOxF,EAAE,UACT0G,WAAW,EACXpC,QAAS4B,UCkEjBS,GAAS7H,kBAAO8H,KAAV,yEAAG9H,CAAH,kGAKD,SAACgD,GAAD,OAAWA,EAAMlC,MAAMiH,iBAOnBC,GAlFQ,SAAjBA,eAAkB,GAOX,IANXjD,EAMW,EANXA,KACAkD,EAKW,EALXA,WACAb,EAIW,EAJXA,SACAc,EAGW,EAHXA,SACAC,EAEW,EAFXA,MACAC,EACW,EADXA,QAEQlH,EAAMC,cAAND,EACFmH,EAAcxH,WAClB,iBAAM,CACJ,CACEJ,MAAOS,EAAE,aACTZ,MAAO,QAET,CACEG,MAAOS,EAAE,iBACTZ,MAAO,iBAGX,CAACY,IAGH,OACE,gBAAC,IAAD,CACEwF,MAAO3B,EAAKR,KACZ+D,SACE,gCACGvD,EAAKwD,aACJ,gBAACC,EAAA,EAAD,eACS,gBAACC,EAAA,EAAD,CAAMC,SAAU3D,EAAKwD,eAD9B,QAIArH,EAAE,mBAEH6D,EAAK4D,WAAa,gBAACC,EAAA,EAAD,KAAQ1H,EAAE,YAC5B6D,EAAK8D,SAAW,gBAACD,EAAA,EAAD,CAAOE,QAAS/D,EAAK8D,SAAU3H,EAAE,WAGtD6H,MAAO,gBAACC,EAAA,EAAD,CAAQC,IAAKlE,EAAKmE,UAAWC,KAAM,KAC1CC,QACE,gBAACjE,EAAA,EAAD,CAAMkE,MAAM,SAASC,IAAK,GACvBpB,GACC,gBAACL,GAAD,CACEpH,MAAOS,EAAE,eACTqI,QAASlB,EACT/H,MAAO2H,EAAaA,EAAW9D,gBAAa6B,EAC5CzF,SAAU2H,EACVsB,UAAWpB,EACXqB,UAAWvI,EAAE,eACb2B,aAAW,EACX6G,MAAI,IAGPtB,GACC,gCACGhB,GAAY,gBAAC,GAAD,CAAYA,SAAUA,IAClCe,GACC,gBAAC5B,EAAA,EAAD,CAAQf,QAAS2C,EAAO3B,SAAO,GAC5BtF,EAAE,a,8uFCxDfyI,GADLxJ,a,i7BAQCyJ,sBAAwB,WACtB,EAAKC,iBAAkB,G,EAGzBC,uBAAyB,WACvB,EAAKD,iBAAkB,G,EAGzBvG,aAAe,SAAC3B,GACd,EAAK4B,MAAQ5B,EAAG6B,OAAOlD,MACvB,EAAKmD,kB,EAGPA,eAAiB,KAAS,WACxB,EAAKT,MAAM+G,MAAMpG,UAAU,CACzBJ,MAAO,EAAKA,UAEb,K,EAEHyG,cAAgB,SAACjF,GACf,IAAQ7D,EAAM,EAAK8B,MAAX9B,EAER,IACE,EAAK8B,MAAMiH,YAAYlG,OAAO,CAC5BrD,aAAc,EAAKsC,MAAMgB,WAAWC,GACpCiG,OAAQnF,EAAKd,GACbE,WAAY,eAEd,EAAKnB,MAAMoB,OAAOC,UAChBnD,EAAE,6CAA8C,CAC9CiJ,SAAUpF,EAAKR,OAEjB,CACElC,KAAM,YAGV,MAAOmC,GACP,EAAKxB,MAAMoB,OAAOC,UAAUnD,EAAE,sBAAuB,CACnDmB,KAAM,Y,6QAKZ,SAAAsC,SAAS,WACP,EAAuCC,KAAK5B,MAApC+G,EAAR,EAAQA,MAAO/F,EAAf,EAAeA,WAAYc,EAA3B,EAA2BA,KAAM5D,EAAjC,EAAiCA,EACzB6D,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,OAAKD,GAASC,EAKZ,gBAACG,EAAA,EAAD,CAAMC,QAAM,GACV,gBAACE,EAAA,EAAD,CAAMjD,KAAK,aACRnB,EAAE,sDAAuD,IAC1D,gBAACqE,EAAA,EAAD,CAAYC,QAASZ,KAAKgF,uBACvB1I,EAAE,kCAAmC,CACpCkJ,SAAUpF,EAAKT,QAJrB,KASA,gBAACtE,EAAA,EAAD,CACEoC,KAAK,SACL7B,YAAW,UAAKU,EAAE,kBAAP,KACXZ,MAAOsE,KAAKrB,MACZhD,SAAUqE,KAAKtB,aACf7C,MAAOS,EAAE,iBACTmJ,WAAS,EACTxH,aAAW,EACX4C,MAAI,IAEN,gBAACC,EAAA,EAAD,CACEC,MACEf,KAAKrB,MACH,gBAACqC,EAAA,EAAD,KAAQ1E,EAAE,mCAEV,gBAAC0E,EAAA,EAAD,KAAQ1E,EAAE,0BAGd2E,MAAOkE,EAAMjE,gBAAgB9B,EAAWC,GAAIW,KAAKrB,OACjDwC,MAAOnB,KAAKrB,WAAQyC,EAAY+D,EAAMpG,UACtCsC,WAAY,oBAACC,GAAD,OACV,gBAAC,GAAD,CACEnE,IAAKmE,EAAKjC,GACVc,KAAMmB,EACNiC,MAAO,wBAAM,EAAK6B,cAAc9D,IAChCkC,SAAO,OAIb,gBAAC3B,EAAA,EAAD,CACEC,MAAOxF,EAAE,iBACTyF,eAAgB/B,KAAKkF,uBACrBlD,OAAQhC,KAAKiF,iBAEb,gBAACS,EAAA,EAAD,CAAQxD,SAAUlC,KAAKkF,2BAhDpB,S,uBAtDuBjJ,a,kFACjCkG,K,qFACiB,K,wEAEjBA,K,oFACO,M,YAwGKE,iBAAkBC,YAAWyC,K,+QCzF7BxJ,oBAjCf,SAASoK,0BAAT,GAAmE,IAA9BC,EAA8B,EAA9BA,UAAWpD,EAAmB,EAAnBA,SACtClG,EAAMC,cAAND,EACFmG,EAAOC,YAAa,CACxBC,OAAO,IAET,OACE,gCACE,gBAACC,EAAA,EAAD,mCAAoBC,aAAYvG,EAAE,cAAkBmG,IACpD,gBAACK,EAAA,EAAD,qCAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,0BACnC,gBAACyG,EAAA,EAAD,qCACMN,EADN,CAEExB,MAAO,CACL,CACExD,KAAM,SACNqE,MAAOxF,EAAE,WACTsE,QAASgF,GAEX,CACEnI,KAAM,aAER,CACEA,KAAM,SACNqE,MAAOxF,EAAE,UACT0G,WAAW,EACXpC,QAAS4B,YC6BjBS,GAAS7H,kBAAO8H,KAAV,wFAAG9H,CAAH,kGAKD,SAACgD,GAAD,OAAWA,EAAMlC,MAAMiH,iBAOnB0C,GA9DuB,SAAhCA,8BAAiC,GAK1B,IAJX5G,EAIW,EAJXA,MACA6G,EAGW,EAHXA,0BACAxC,EAEW,EAFXA,SACAd,EACW,EADXA,SAEQlG,EAAMC,cAAND,EACFmH,EAAcxH,WAClB,iBAAM,CACJ,CACEJ,MAAOS,EAAE,aACTZ,MAAO,QAET,CACEG,MAAOS,EAAE,iBACTZ,MAAO,iBAGX,CAACY,IAGH,OACE,gBAACiF,EAAA,EAAD,CACEtC,MAAOA,EACP8G,YAAU,EACVtE,cAAe,8BAAGuE,EAAH,EAAGA,iBAAH,OACb,gCACE,gBAAC,GAAD,CACEnK,MAAOS,EAAE,eACTqI,QAASlB,EACT/H,MACEoK,EACIA,EAA0BvG,gBAC1B6B,EAENzF,SAAU2H,EACVuB,UAAWvI,EAAE,eACb2B,aAAW,EACX6G,MAAI,IAEN,gBAAC,GAAD,CACEc,UAAWI,EACXxD,SAAUA,S,8/CCsStB,IAAMxB,GAAQ5F,kBAAOsF,KAAV,mFAAGtF,CAAH,qBAIL6K,GAAsB7K,kBAAOsF,KAAV,iGAAGtF,CAAH,yCAKnB8K,GAAU9K,kBAAOmF,KAAV,qFAAGnF,CAAH,yBAIEG,iBA/Uf,SAAS4K,sBAAT,GAAsD,IAArB/G,EAAqB,EAArBA,WACvB9C,EAAMC,cAAND,EACF6D,EAAOiG,cACb,EAMIC,cALFhB,EADF,EACEA,YACAnG,EAFF,EAEEA,2BACAiG,EAHF,EAGEA,MACArG,EAJF,EAIEA,OACAoB,EALF,EAKEA,KAEMT,EAAc6G,cAAd7G,UAER,iBAIIjD,cAJJ,GACE+J,EADF,KAEEC,EAFF,KAGEC,EAHF,KAMA,iBAIIjK,cAJJ,GACEkK,EADF,KAEEC,EAFF,KAGEC,EAHF,KAMMC,EAAmB5K,cAAA,4DACvB,iBAAOkE,GAAP,kHAEUkF,EAAYyB,OAAO,CACvBhL,aAAcsD,EAAWC,GACzBiG,OAAQnF,EAAKd,KAJnB,OAMII,EACEnD,EAAE,iDAAkD,CAClDiJ,SAAUpF,EAAKR,OAEjB,CACElC,KAAM,YAXd,+CAeIgC,EAAUnD,EAAE,yBAA0B,CACpCmB,KAAM,UAhBZ,8DADuB,sDAqBvB,CAAC4H,EAAa5F,EAAWL,EAAY9C,IAGjCyK,EAAmB9K,cAAA,4DACvB,kBAAOkE,EAAMZ,GAAb,mHAEU8F,EAAYlG,OAAO,CACvBrD,aAAcsD,EAAWC,GACzBiG,OAAQnF,EAAKd,GACbE,eALN,OAOIE,EACEnD,EAAE,0CAA2C,CAC3CiJ,SAAUpF,EAAKR,OAEjB,CACElC,KAAM,YAZd,+CAgBIgC,EAAUnD,EAAE,yBAA0B,CACpCmB,KAAM,UAjBZ,+DADuB,wDAsBvB,CAAC4H,EAAa5F,EAAWL,EAAY9C,IAGjC0K,EAAoB/K,cAAA,4DACxB,kBAAOgD,GAAP,mHAEUC,EAA2B4H,OAAO,CACtChL,aAAcsD,EAAWC,GACzBC,QAASL,EAAMI,KAJrB,OAMII,EACEnD,EAAE,4DAA6D,CAC7DoD,UAAWT,EAAMU,OAEnB,CACElC,KAAM,YAXd,+CAeIgC,EAAUnD,EAAE,0BAA2B,CACrCmB,KAAM,UAhBZ,+DADwB,sDAqBxB,CAACyB,EAA4BO,EAAWL,EAAY9C,IAGhD2K,EAAoBhL,cAAA,4DACxB,kBAAOgD,EAAOM,GAAd,mHAEUL,EAA2BC,OAAO,CACtCrD,aAAcsD,EAAWC,GACzBC,QAASL,EAAMI,GACfE,eALN,OAOIE,EACEnD,EAAE,2CAA4C,CAC5CoD,UAAWT,EAAMU,OAEnB,CACElC,KAAM,YAZd,+CAgBIgC,EAAUnD,EAAE,yBAA0B,CACpCmB,KAAM,UAjBZ,+DADwB,wDAsBxB,CAACyB,EAA4BO,EAAWL,EAAY9C,IAGhD4K,EAAyBjL,cAAA,4DAC7B,kBAAOsD,GAAP,mHAEUH,EAAW+H,KAAK,CACpB5H,eAHN,OAKIE,EAAUnD,EAAE,2CAA4C,CACtDmB,KAAM,YANZ,+CASIgC,EAAUnD,EAAE,gCAAiC,CAC3CmB,KAAM,UAVZ,+DAD6B,sDAe7B,CAAC2B,EAAYK,EAAWnD,IAGpB8K,EAAenL,WACnB,iBAAO,CACLoD,GAAID,EAAWC,MAEjB,CAACD,EAAWC,KAGRgI,EAAsBpL,cAAA,4DAC1B,kBAAOc,GAAP,mHAEUqC,EAAW+H,KAAK,CACpBG,QAASvK,EAAG6B,OAAO2I,UAHzB,OAKI9H,EAAUnD,EAAE,oDAAqD,CAC/DmB,KAAM,YANZ,+CASIgC,EAAUnD,EAAE,4CAA6C,CACvDmB,KAAM,UAVZ,+DAD0B,sDAe1B,CAAC2B,EAAYK,EAAWnD,IAGpBkL,EAAiBpI,EAAWO,KAC5B8H,EAAmB3I,EAAO4I,aAAatI,EAAWC,IAClDsI,EAAkBxC,EAAMuC,aAAatI,EAAWC,IAChDuI,GAAWH,EAAiBI,SAAWF,EAAgBE,OACvDP,EAAUlI,EAAWkI,QACrBQ,IAAuB5H,EAAKE,MAAQF,EAAKE,KAAKkH,QAEpD,OACE,gBAAC/G,EAAA,EAAD,CAAMC,QAAM,GACV,gBAACuH,EAAA,EAAD,CACEpM,SAAUuL,EACVxL,MAAO0D,EAAWG,YAAc,KAElC,gBAAC0G,GAAD,CAAqB1B,KAAK,UACtBnF,EAAWG,YACX,gBAACqE,EAAA,EAAD,CACEoE,SAAS,yGACTC,OAAQ,CACNT,kBAEFU,WAAY,CACVC,GAAI,kCAIiB,SAA1B/I,EAAWG,YACV,gBAACqE,EAAA,EAAD,CACEoE,SAAS,8FACTC,OAAQ,CACNT,kBAEFU,WAAY,CACVC,GAAI,kCAIiB,eAA1B/I,EAAWG,YACV,gBAACqE,EAAA,EAAD,CACEoE,SAAS,uGAETC,OAAQ,CACNT,kBAEFU,WAAY,CACVC,GAAI,mCAKZ,gBAACC,EAAA,EAAD,CACE/I,GAAG,UACHxD,MAAOS,EAAE,2BACTX,SAAU0L,EACVE,QAASD,GAAWQ,EACpBlD,UAAWkD,EACXO,KACEP,EACE,gBAAClE,EAAA,EAAD,wEAIA,gBAACA,EAAA,EAAD,8EAON,gBAAC0E,EAAA,EAAD,CAASzM,MAAOS,EAAE,sBAChB,gBAAC4J,GAAD,CAASxB,IAAK,GACZ,gBAAC/C,EAAA,EAAD,CACElE,KAAK,SACLmD,QAAS4F,EACT9I,KAAM,gBAAC,WAAD,MACNkE,SAAO,GAENtF,EAAE,eAEL,gBAACqF,EAAA,EAAD,CACElE,KAAK,SACLmD,QAAS+F,EACTjJ,KAAM,gBAAC,WAAD,MACNkE,SAAO,GAENtF,EAAE,iBAIT,gBAAC,EAAD,MACCsL,GACC,gBAAC,GAAD,KACE,gBAAChE,EAAA,EAAD,oEAKJ,gBAAC9C,EAAA,EAAD,CACEG,MAAOwG,EACPtG,MAAOjC,EAA2BH,UAClC4F,QAASyC,EACT/F,WAAY,oBAACpC,GAAD,OACV,gBAAC,GAAD,CACE9B,IAAK8B,EAAMI,GACXJ,MAAOA,EACP6G,0BAA2B5G,EAA2BqJ,IAA3B,UACtBtJ,EAAMI,GADgB,YACVD,EAAWC,KAE5BmD,SAAU,2BAAMwE,EAAkB/H,IAClCqE,SAAU,kBAAC/D,GAAD,OAAgB0H,EAAkBhI,EAAOM,SAIxDkI,EAAiBI,OAAS,gBAAC,EAAD,MAAc,KACzC,gBAAC/G,EAAA,EAAD,CACE3D,IAAG,2BAAsBiC,EAAWG,YAAc,QAClD0B,MAAO0G,EACPxG,MAAOkE,EAAYtG,UACnB4F,QAASyC,EACT/F,WAAY,oBAACC,GAAD,OACV,gBAAC,GAAD,CACEnE,IAAKmE,EAAKjC,GACVc,KAAMmB,EACN+B,WAAYgC,EAAYkD,IAAZ,UAAmBjH,EAAKjC,GAAxB,YAA8BD,EAAWC,KACrDmE,QAASlC,EAAKjC,KAAOc,EAAKd,GAC1BmD,SAAU,2BAAMqE,EAAiBvF,IACjCgC,SAAU,kBAAC/D,GAAD,OAAgBwH,EAAiBzF,EAAM/B,SAIvD,gBAACsC,EAAA,EAAD,CACEC,MAAOxF,EAAE,qCAAsC,CAC7CkL,eAAgBpI,EAAWO,OAE7BoC,eAAgB0E,EAChBzE,OAAQuE,GAER,gBAAC,EAAD,CACEnH,WAAYA,EACZ8C,SAAUuE,KAGd,gBAAC5E,EAAA,EAAD,CACEC,MAAOxF,EAAE,qCAAsC,CAC7CkL,eAAgBpI,EAAWO,OAE7BoC,eAAgB6E,EAChB5E,OAAQ0E,GAER,gBAAC,GAAD,CACEtH,WAAYA,EACZ8C,SAAU0E,U,uoCClTLrL,iBA5Bf,SAASiN,iBAAiBpK,GACxB,IAAQ9B,EAAMC,cAAND,EACAmM,EAAgBpC,cAAhBoC,YACAC,EAA2BtK,EAA3BsK,SAAU5M,EAAiBsC,EAAjBtC,aACZ6I,EAAU1I,WAAc,WAC5B,IAAM0M,EAAoBF,EAAYG,YAAYC,KAAI,SAAC1I,GAAD,MAAW,CAC/DhD,IAAKgD,EAAKd,GACVxD,MAAOsE,EAAKR,SAEd,OACE,CACExC,IAAK,GACLtB,MAAOS,EAAE,oBAHb,0BAKKqM,MAEJ,CAACF,EAAYG,YAAatM,IAC7B,OACE,gBAAC,IAAD,CACEqI,QAASA,EACTmE,UAAWhN,EACX4M,SAAUA,EACVK,aAAczM,EAAE,kBAChB0M,eAAc,UAAK1M,EAAE,cAAP,W,iTCHLf,mBApBf,SAAS0N,UACP,IAAQ3M,EAAMC,cAAND,EACA4M,EAAc7C,cAAd6C,UACR,OACE,gBAACC,EAAA,EAAD,CAAOzL,KAAM,gBAAC,cAAD,CAAaC,MAAM,iBAAmBmE,MAAOxF,EAAE,YAC1D,gBAAC8M,EAAA,EAAD,KAAU9M,EAAE,YACZ,gBAAC+M,EAAA,EAAD,CACEH,UAAWA,EAAUI,SACrBnI,MAAO+H,EAAUK,cACjBC,QAAS,gBAACC,EAAA,EAAD,CAAYC,QAAM,GAAEpN,EAAE,cAC/ByE,MACE,gBAACC,EAAA,EAAD,KAAQ1E,EAAE,iDAEZqN,gBAAc,EACdC,cAAY,Q,yhBCgCLrO,I,MAAAA,eA5Cf,SAASsO,cACP,IAAMzN,EAAUC,cACVyN,EAAWC,cACXC,EAAQC,cACN3N,EAAMC,cAAND,EACR,EAAmC+J,cAA3B6C,EAAR,EAAQA,UAAWT,EAAnB,EAAmBA,YACXhJ,EAAc6G,cAAd7G,UACFJ,EAAK2K,EAAME,OAAO7K,IAAM,GA4B9B,OA1BA8K,qBAAU,WAAM,6FACd,iIACQD,EAASE,IAAYC,MAAMP,EAASQ,QAD5C,kBAI6B7B,EAAYtH,MAAM9B,GAJ/C,cAIUD,EAJV,gBAK2B8J,EAAU/J,OAAO,CACtCrD,aAAcsD,EAAWC,GACzBkL,iBAAgB,UAAEL,EAAOK,wBAAT,aAAE,EAAyBC,WAC3CC,WAAU,UAAEP,EAAOO,kBAAT,aAAE,EAAmBD,WAC/BE,SAA8B,SAApBR,EAAOQ,SACjB5I,MAAO,GACP6I,KAAM,KAXZ,OAKUC,EALV,OAaIxO,EAAQyO,QAAQC,YAAgBF,GAAWd,EAASiB,OAbxD,kDAeItL,EAAUnD,EAAE,4CAA6C,CACvDmB,KAAM,UAERrB,EAAQ4O,SAlBZ,iEADc,gCACCC,iBADD,6CAuBdA,MAIA,gBAAC1K,EAAA,EAAD,CAAMC,QAAM,EAAC0K,MAAI,GACf,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,W,k5FC1BFC,EADL9P,a,0mBAWC+P,kBAAoB,WAClB,EAAKpB,OAAS,IAAIqB,gBAAgB,EAAKnN,MAAM0L,SAASQ,S,EAGxDkB,mBAAqB,SAAClB,GAIpB,EAAKlM,MAAMhC,QAAQyO,QAAQ,CACzBY,SAAU,EAAKrN,MAAM0L,SAAS2B,SAC9BnB,OAAQF,IAAYsB,UAAZ,+BACDtB,IAAYC,MAAM,EAAKjM,MAAM0L,SAASQ,SAAYA,GACvD,CACEqB,iBAAiB,O,2MAnBzB,SAAAC,mBAAmBC,GACbA,EAAU/B,SAASQ,SAAWtK,KAAK5B,MAAM0L,SAASQ,QACpDtK,KAAKsL,sB,wBAuBT,SAAA/C,MACE,IAAMlJ,EAAKW,KAAKkK,OAAO3B,IAAI,gBAC3B,OAAOlJ,QAAU+B,I,sBAGnB,SAAAmH,MACE,IAAMlJ,EAAKW,KAAKkK,OAAO3B,IAAI,cAC3B,OAAQlJ,QAAU+B,I,oBAQpB,SAAArB,SAAS,WACCzD,EAAM0D,KAAK5B,MAAX9B,EACFwP,EAAa9L,KAAKlE,cAAgBkE,KAAK+L,WACvCpH,EAAU,CACdoH,WAAY/L,KAAK+L,WACjBjQ,aAAckE,KAAKlE,cAGrB,OACE,gBAACqN,EAAA,EAAD,CACEzL,KAAM,gBAAC,WAAD,CAAUC,MAAM,iBACtBmE,MAAOxF,EAAE,UACTkI,QACE,gCACE,gBAAC,IAAD,KACE,gBAAChJ,EAAA,EAAD,CAAiBO,OAAO,SAASF,MAAOS,EAAE,uBAE5C,gBAAC,IAAD,KACE,gBAAC0P,EAAA,EAAD,SAKN,gBAAC5C,EAAA,EAAD,KAAU9M,EAAE,WACZ,gBAACmN,EAAA,EAAD,CAAYC,QAAM,GACfpN,EAAE,aACH,gBAAC2P,EAAD,KACE,gBAACzD,EAAA,EAAD,CACE1M,aAAckE,KAAKlE,aACnB4M,SAAU,kBAAC5M,GAAD,OACR,EAAK0P,mBAAmB,CACtB1P,oBAIN,gBAACoQ,EAAA,EAAD,CACEH,WAAY/L,KAAK+L,WACjBrD,SAAU,kBAACqD,GAAD,OACR,EAAKP,mBAAmB,CACtBO,oBAOV,gBAAC1C,EAAA,EAAD,CACEtI,MACE,gBAACC,EAAA,EAAD,KAEM1E,EADHwP,EACK,uCACA,6CAGV3K,MAAOnB,KAAK5B,MAAM8K,UAAUiD,YAC5BjD,UAAWlJ,KAAK5B,MAAM8K,UAAUkD,OAAOzH,GACvCA,QAASA,EACT0H,qBAAmB,EACnB1C,gBAAc,S,QAtGH1N,a,2dAClBkG,K,qFACyB,IAAIoJ,gBAAgBvL,KAAK5B,MAAM0L,SAASQ,W,SA2G9D2B,EAAU7Q,kBAAOmF,KAAV,qEAAGnF,CAAH,iIAaEiH,gBAAkBC,YAAW+I,I,gZC/E5C,IAAMiB,GAAiBlR,UAAOgH,IAAV,sFAAGhH,CAAH,gEAMLG,gBAzDf,SAASgR,kBACP,IAAM9J,EAAOC,YAAa,CACxBC,OAAO,IAEDrG,EAAMC,cAAND,EACF8D,EAAOoM,cACb,EAAkCnG,cAA1BoC,EAAR,EAAQA,YAAaxI,EAArB,EAAqBA,SACfI,EAAMoM,YAAUrM,EAAKf,IAErB4B,EAAQhF,WACZ,kBACEwM,EAAYG,YAAY8D,QAAmB,SAACC,EAAUvN,GAcpD,OAbYa,EAASK,UAAUlB,EAAWC,IAElCuN,QACND,EAASvP,KAAK,CACZK,KAAM,QACNoP,GAAIC,YAAgB1N,EAAWC,GAAI,CACjCqL,UAAU,IAEZ5I,MAAO,gBAACwK,GAAD,KAAiBlN,EAAWO,MACnCjC,KAAM,gBAACqP,EAAA,EAAD,CAAgB3N,WAAYA,MAI/BuN,IACN,MACL,CAAClE,EAAYG,YAAa3I,IAG5B,OAAKI,EAAI4K,gBAAmC,IAAjBhK,EAAM4G,OAK/B,gCACE,gBAACmF,EAAA,EAAevK,GACb,SAACrE,GAAD,OACC,gBAACuD,EAAA,EAAD,UAAQjE,KAAM,gBAAC,WAAD,OAAkBU,GAC7B9B,EAAE,gBADL,QAKJ,gBAACwG,EAAA,EAAD,UAAaD,aAAYvG,EAAE,iBAAqBmG,GAC9C,gBAAC,IAAD,KAASnG,EAAE,wBACX,gBAACyG,GAAA,EAAD,YAAcN,EAAd,CAAoBxB,MAAOA,OAdxB,QCiBI1F,oBAhDf,SAAS0R,UAAU7O,GACjB,IAAQ8K,EAAc7C,cAAd6C,UACA5M,EAAMC,cAAND,EACF8D,EAAOoM,cACLU,EAAqDhE,EAArDgE,eAAgBC,EAAqCjE,EAArCiE,UAAWC,EAA0BlE,EAA1BkE,sBAC3BC,EAASjP,EAAM4L,MAAME,OAArBmD,KACFhN,EAAMoM,YAAUrM,EAAKf,IAE3B,OACE,gBAAC8J,EAAA,EAAD,CACEzL,KAAM,gBAAC,aAAD,CAAYC,MAAM,iBACxBmE,MAAOxF,EAAE,aACTkI,QACE,gBAAC,IAAD,KACE,gBAAC,GAAD,QAIJ,gBAAC4E,EAAA,EAAD,KAAU9M,EAAE,cACZ,gBAAC+M,EAAA,EAAD,CACEG,QACE,gBAAC8D,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKV,GAAG,aAAaW,OAAK,GACvBlR,EAAE,qBAEL,gBAACiR,EAAA,EAAD,CAAKV,GAAG,0BAA0BW,OAAK,GACpClR,EAAE,kBAITyE,MACE,gBAACC,EAAA,EAAD,KACG1E,EAAE,oCAAqC,IACvC+D,EAAI4K,gBACH3O,EACE,6FAIR6E,MAAO+L,EACPhE,UAAoB,iBAATmE,EAA0BD,EAAwBD,EAC7DxD,gBAAc,EACd8D,WAAS,QC9BFlS,oBAlBf,SAASmS,QACP,IAAQpR,EAAMC,cAAND,EACA4M,EAAc7C,cAAd6C,UACR,OACE,gBAACC,EAAA,EAAD,CAAOzL,KAAM,gBAAC,YAAD,CAAWC,MAAM,iBAAmBmE,MAAOxF,EAAE,UACxD,gBAAC8M,EAAA,EAAD,KAAU9M,EAAE,UACZ,gBAAC+M,EAAA,EAAD,CACEH,UAAWA,EAAUyE,QACrBxM,MAAO+H,EAAU0E,aACjBpE,QAAS,gBAACC,EAAA,EAAD,CAAYC,QAAM,GAAEpN,EAAE,cAC/ByE,MAAO,gBAACC,EAAA,EAAD,KAAQ1E,EAAE,kCACjBqN,gBAAc,EACdC,cAAY,Q,0BCaLrO,gBA7BQ,SAAjBsS,iBACJ,IAAQvR,EAAMC,cAAND,EACA4D,EAASmG,cAATnG,KAER,OACE,gBAACiL,EAAA,EAAD,KACE,gBAAC2C,GAAA,EAAD,CAAWhM,MAAOxF,EAAE,qCACpB,0BACE,wBAAMyR,KAAK,MAAMlL,aAAYvG,EAAE,iBAA/B,MAEQ,IACPA,EAAE,oCAGL,yBACE,gBAACsH,GAAA,EAAD,CACEoE,SAAS,kJACTC,OAAQ,CACN+F,sBAAuB9N,EAAK8N,uBAE9B9F,WAAY,CACVC,GAAI,uC,woDClBhB,SAAS8F,yBACP,IAAMC,EAAWC,KAAK9D,MAAM+D,aAAU,aAAe,MACrD,OAAOC,OAAOC,KAAKJ,GAAUrF,KAAI,SAAC0F,GAAD,O,qbAAA,EAC/BA,UACGL,EAASK,O,ygECChB,IAwDMC,GAAOpT,kBAAO,OAAV,6EAAGA,CAAH,+CAMKG,gBA9DoB,SAA7BkT,iBAA8B,GAAiB,IAAfC,EAAe,EAAfA,SAC7BR,EAAP,+BDEa,SAASS,cACtB,qBAAgC1S,WAAegS,wBAA/C,GAAOC,EAAP,KAAiBU,EAAjB,KAIA,MAAO,CAACV,EAHOjS,eAAkB,WAC/B2S,EAAYX,4BACX,KCNgBU,GAAnB,MACMlM,EAAOC,YAAa,CACxBmM,gBAAiB,CAAC,GAAI,GACtBC,UAAW,eACXnM,OAAO,IAGDzG,EADOmK,cAAP0I,GACA7S,MACFkE,EAAOoM,cACPwC,EAAgBC,aAAY/S,GAC1BI,EAAMC,cAAND,EAERL,aAAgB,WACVC,IAAU8S,GACZvM,EAAKyM,SAEN,CAACzM,EAAMvG,EAAO8S,IAEjB,IAAMxK,EAAUvI,WAAc,WAC5B,IAAMkT,EAAgBjB,EAASkB,QAC7B,SAACC,GAAD,OAAaA,EAAQd,SAAWnO,EAAKf,IAAMgQ,EAAQC,MAAQlP,EAAKkP,OAGlE,OACEC,KACAC,gBAFF,0BAGML,EAActH,OACd,CACE4H,aAAa,CACX9P,KAAMrD,EAAE,eACRoT,QAAS,UACThB,SAAUS,EAActG,KAAI,SAACwG,GAAD,MAAc,CACxChQ,GAAIgQ,EAAQC,IACZ3P,KAAM0P,EAAQ1P,KACd+P,QAAS,UACThS,KAAM,gBAAC8Q,GAAD,CAAMmB,IAAKN,EAAQ1P,KAAM0E,IAAKgL,EAAQO,UAC5CC,QAAS,0BAAOC,OAAOhG,SAASiG,KAAOV,EAAQC,YAIrD,IAjBN,CAkBEU,SAED,CAAC5P,EAAKf,GAAIe,EAAKkP,IAAKpB,EAAU5R,IAEjC,OACE,gCACE,gBAAC0Q,EAAA,EAAevK,EAAOiM,GACvB,gBAAC5L,EAAA,EAAD,4BAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,aACnC,gBAACyG,GAAA,EAAD,4BAAcN,EAAd,CAAoBxB,WAAOG,EAAWoD,QAASA,U,k4CCrBxCjJ,oBAlCf,SAAS0U,cAAc,QAOf,EANN,EAAgC5J,cAAxBpG,EAAR,EAAQA,SAAUiJ,EAAlB,EAAkBA,UACV5M,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UAER,4BAAwDyQ,aAAQ,CAC9DC,OAAQ,WACRC,MAAI,E,uTAAA,0BAAE,iBAAO9O,GAAP,sGACEsJ,EAAW1B,EAAUX,IAAIjH,EAAKjC,IADhC,SAEEuL,aAFF,EAEEA,EAAUyF,UAFZ,OAGJ5Q,EAAUnD,EAAE,qBAAsB,CAChCmB,KAAM,YAJJ,iDAAF,kDAOJ6S,QAAS,iBAAChP,GAAD,OAAUrB,EAASK,UAAUgB,EAAKjC,IAAIgR,SAC/CE,QAAS,iBAACC,GAAD,MAAc,CACrBC,mBAAoBD,EAAQE,aAXhC,GAASD,EAAT,KAASA,mBAAsBE,EAA/B,KAeA,OACE,uBAAKpT,IAAKoT,GACR,gBAACC,GAAA,EAAD,CACE/D,GAAIgE,cACJnT,KAAM,gBAAC,cAAD,CAAaC,MAAM,eAAemT,KAAML,IAC9CjD,OAAO,EACP3R,MAAOS,EAAE,WACTyU,QAAQ,UAAA7H,EAAU6H,cAAV,eAAkBC,eAAc,UAAC9H,EAAU6H,cAAX,OAAC,EAAkBE,WAC3DC,aAAcT,Q,07CC2DPlV,oBAhEf,SAAS4V,iBAAT,GAA2E,IAA/C/R,EAA+C,EAA/CA,WAAYkC,EAAmC,EAAnCA,KAAMY,EAA6B,EAA7BA,SAAUkP,EAAmB,EAAnBA,SACtD,iCAAgCC,oBAAS,GAAzC,GAAOC,EAAP,KAAiBC,EAAjB,KACQ9R,EAAc6G,cAAd7G,UACR,EAAmC4G,cAA3B6C,EAAR,EAAQA,UAAWT,EAAnB,EAAmBA,YACXnM,EAAMC,cAAND,EACFkV,EAAiB/I,EAAYF,IAAIjH,EAAKxF,cACtC2V,EAAgB,CACpBC,WAAYpV,EAAE,wBACdqV,KAAMrV,EAAE,oBACRsV,KAAMtV,EAAE,cAGJuV,EAAe5V,cAAA,iB,sUAAA,0BACnB,iBAAOc,GAAP,gGACEA,EAAGE,iBACHsU,GAAY,GAFd,kBAKUrI,EAAU4I,KAAKxQ,EAAKjC,GAAID,EAAWC,IAL7C,OAMII,EAAUnD,EAAE,kBAAmB,CAC7BmB,KAAM,SAERyE,IATJ,gDAWIzC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAZZ,yBAeI8T,GAAY,GAfhB,kFADmB,sDAmBnB,CAACrI,EAAW5H,EAAKjC,GAAID,EAAWC,GAAII,EAAWnD,EAAG4F,IAGpD,OACE,gBAAC3B,EAAA,EAAD,CAAMC,QAAM,GACV,wBAAM0B,SAAU2P,GACd,gBAACnR,GAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,GAAA,EAAD,CACEoE,SAAS,6MACTC,OAAQ,CACNnG,MAAOR,EAAKQ,MACZkQ,mBAAoBR,aAAF,EAAEA,EAAgB7R,KACpCsS,kBAAmB7S,EAAWO,KAC9BuS,eACET,GAAcD,aAAA,EAAAA,EAAgBjS,aAAc,QAC9C4S,cAAeV,EAAcrS,EAAWG,YAAc,SAExD2I,WAAY,CACVC,GAAI,mCAIV,gBAACxG,EAAA,EAAD,CAAQlE,KAAK,UACV6T,EAAW,GAAH,OAAMhV,EAAE,UAAR,KAAuBA,EAAE,kBAC1B,IACV,gBAACqF,EAAA,EAAD,CAAQlE,KAAK,SAASmD,QAASwQ,EAAUxP,SAAO,GAC7CtF,EAAE,gB,iYCtBb,IAAM8V,GAAoBhX,UAAOgH,IAAV,qFAAGhH,CAAH,2BAGnB,gBAAGiX,EAAH,EAAGA,cAAenW,EAAlB,EAAkBA,MAAlB,OACAmW,GACAC,cADa,0DAEGpW,EAAMqW,UAETrW,EAAMsW,MAGPtW,EAAMsW,UAKPjX,gBAhEf,SAASkX,aAAT,GAA+E,IAAvD7N,EAAuD,EAAvDA,SAAU8J,EAA6C,EAA7CA,SAAU5S,EAAmC,EAAnCA,aAAc4W,EAAqB,EAArBA,WAChDpW,EAAMC,cAAND,EACA4M,EAAc7C,cAAd6C,UACAzJ,EAAc6G,cAAd7G,UACR,EAAqCkT,aACnC7W,EACA4W,GAFME,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAIfC,EAAWhX,GAAgB4W,EACjCK,KAAUD,EAAU,kDAEpB,IAAMzS,EAAMoM,YAAUqG,GAChBE,EAAkB/W,eAAkB,WACxCwD,EACEnD,EAAE,oEACF,CACEmB,KAAM,YAGT,CAACnB,EAAGmD,IAEP,OAAImF,IAAavE,EAAIuM,OACZ8B,EAIP,gBAAC,KAAD,CACEyB,OAAQjH,EAAU+J,gBAAgBC,KAAK,MACvCC,eAAgBP,EAChBQ,eAAgBJ,EAChBK,SAAO,EACPC,UAAQ,IAEP,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,aAAhC,OACC,gBAACrB,GAAD,wBACMmB,IADN,CAEElB,cAAeoB,EACfC,UAAW,IAEX,wBAAWF,KACVX,GAAe,gBAACc,GAAA,EAAD,MACfjF,S,skEC0CX,IAAMrT,GAAQD,UAAOwY,MAAV,2EAAGxY,CAAH,iKACA,SAACgD,GAAD,OAAWA,EAAMlC,MAAM2X,eAClB,SAACzV,GAAD,OAAWA,EAAMlC,MAAM4X,cAGjB,SAAC1V,GAAD,OAAWA,EAAMlC,MAAM0B,sBAMxB,SAACQ,GAAD,OAAWA,EAAMlC,MAAMgI,WAI7B6P,GA1Gf,SAASA,cAAT,GAMU,IALRjS,EAKQ,EALRA,MACAI,EAIQ,EAJRA,SACA8R,EAGQ,EAHRA,UACAC,EAEQ,EAFRA,UACGC,EACK,+BACR,8BAAkCjY,YAAe,GAAjD,GAAOkY,EAAP,KAAkBC,EAAlB,KACA,8BAA0CnY,WAAe6F,GAAzD,GAAOuS,EAAP,KAAsBC,EAAtB,KACA,8BAA0BrY,WAAe6F,GAAzC,GAAOpG,EAAP,KAAc6Y,EAAd,KACQ9U,EAAc6G,cAAd7G,UAERxD,aAAgB,WACdsY,EAASzS,KACR,CAACA,IAEJ,IAAM0S,EAAevY,eAAkB,SAACwY,GACtCF,EAASE,EAAM7V,OAAOlD,SACrB,IAEGgZ,EAAoBzY,eAAkB,SAACwY,GAC3CA,EAAMxX,iBACNwX,EAAME,kBACNP,GAAa,KACZ,IAEGlX,EAAgBjB,eACpB,SAACwY,GACmB,WAAdA,EAAMtX,MACRiX,GAAa,GACbG,EAASF,MAGb,CAACA,IAGGO,EAAa3Y,cAAA,iB,6TAAA,0BACjB,iBAAOc,GAAP,kGACEA,EAAGE,iBACHmX,GAAa,IACPS,EAAenZ,EAAMoZ,UAENT,GAAyC,IAAxBQ,EAAahN,OALrD,uBAMI0M,EAASF,GANb,8BAUMzJ,SAVN,2CAYY1I,EAAS2S,GAZrB,QAaMP,EAAiBO,GAbvB,wDAeMN,EAASF,GACT5U,EAAU,KAAMsS,QAAS,CACvBtU,KAAM,UAjBd,qEADiB,sDAwBjB,CAAC4W,EAAe5U,EAAW/D,EAAOwG,IAOpC,OAJAjG,aAAgB,WACdgY,WAAYE,KACX,CAACF,EAAWE,IAGb,gCACGA,EACC,wBAAMjS,SAAU0S,GACd,gBAACvZ,GAAD,uBACE0Z,IAAI,OACJtX,KAAK,OACL/B,MAAOA,EACPD,UAAWyB,EACXvB,SAAU6Y,EACVzW,OAAQ6W,EACRnP,WAAS,GACLyO,KAIR,wBAAMc,cAAehB,EAAYU,OAAoBtT,GAClD1F,KC1FIuZ,GAJE7Z,UAAOgH,IAAV,2DAAGhH,CAAH,wBCAR8Z,GAAiBjZ,qBAAyCmF,GAEnD+T,GAAoB,SAApBA,oBAAoB,OAAMlZ,aAAiBiZ,KAEzCA,M,y2CC4Bf,IA8Ie3Z,gBA9IyB,SAAlC6Z,eAAmC,GAKnC,IAJJhW,EAII,EAJJA,WACAiW,EAGI,EAHJA,SACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,wBAEMC,EAAUvZ,WAGhB,EAA4CoK,cAApCoP,EAAR,EAAQA,QAASvM,EAAjB,EAAiBA,UAAWT,EAA5B,EAA4BA,YAC5B,+BAAoDjM,eAApD,GAAOkZ,EAAP,KAAiBC,EAAjB,KAAiCC,EAAjC,KACA,+BAAkC3Z,YAAe,GAAjD,GAAOkY,EAAP,KAAkBC,EAAlB,KACMJ,EAAYvH,YAAUrN,EAAWC,IAAIuN,OACnCtQ,EAAMC,cAAND,EACFF,EAAUC,cACVwZ,EAAmBV,KAEnBW,EAAoB7Z,cAAA,iB,gUAAA,0BACxB,iBAAO0D,GAAP,yGACQP,EAAW+H,KAAK,CACpBxH,SAFJ,OAIEvD,EAAQyO,QAAQzL,EAAWkQ,IAAKlT,EAAQ0N,SAASiB,OAJnD,iDADwB,sDAOxB,CAAC3L,EAAYhD,IAIf,+BAAoC8T,aAAQ,CAC1CC,OAAQ,WACRC,KAAM,cAAC9O,EAAkBkP,GACvB,IAAQnR,EAAqBiC,EAArBjC,GAAIvD,EAAiBwF,EAAjBxF,aACZ,IAAI0U,EAAQuF,WAGP3W,EAAL,CAIA,IAAMwL,EAAW1B,EAAUX,IAAIlJ,GAC/B,GAAID,EAAWC,KAAOvD,GAAiB8O,WAAUL,iBAAjD,CAIA,IAAMiH,EAAiB/I,EAAYF,IAAIzM,GAGrC0V,GAC8B,OAA9BA,EAAejS,YACfiS,EAAejS,aAAeH,EAAWG,YAEzCiW,EAAQ3Y,QAAUyE,EAElBmU,EAAQO,UAAU,CAChBlU,MAAOxF,EAAE,iBACT2Z,QACE,gBAAC,GAAD,CACE3U,KAAMA,EACNlC,WAAYA,EACZ8C,SAAUuT,EAAQS,eAClB9E,SAAUqE,EAAQS,oBAKxBhN,EAAU4I,KAAKzS,EAAID,EAAWC,OAGlCiR,QAAS,0BAAM0D,GACfzD,QAAS,iBAACC,GAAD,MAAc,CACrBE,SAAUF,EAAQE,OAAO,CACvByF,SAAS,IAEX7F,QAASE,EAAQF,cA7CrB,UAASI,EAAT,EAASA,OAAQJ,EAAjB,EAAiBA,QAAWF,EAA5B,KAiDMgG,EAAqBna,eAAkB,SAACkY,GAC5CC,EAAaD,KACZ,IAEGkC,EAAUC,aAAiB,CAC/BC,mBAAoBnX,EAAWC,GAC/BwW,qBAGF,OACE,gCACE,gBAAC,GAAD,CAAUtY,IAAK6S,GACb,gBAAC,GAAD,CAActU,aAAcsD,EAAWC,IACrC,gBAACuR,GAAA,EAAD,CACE/D,GAAI,CACFpB,SAAUrM,EAAWkQ,IACrBvE,MAAO,CAAEyL,QAASX,IAEpBR,SAAUA,EACVC,kBAAmBA,EACnB5X,KACE,gBAACqP,EAAA,EAAD,CAAgB3N,WAAYA,EAAYiW,SAAUA,IAEpDoB,YAAaf,EACbxE,aAAcR,GAAUJ,EACxBoG,SAAU,kBAAC1M,EAAOF,GAAR,cACNE,IAAS,UAAAF,EAASiB,aAAT,eAAgByL,WAAYX,GAEzCha,MACE,gBAAC,GAAD,CACEiG,MAAO1C,EAAWO,KAClBuC,SAAU4T,EACV7B,UAAWmC,EACXpC,UAAWA,IAGfxG,OAAO,EACPmJ,MAAO,EACPlU,MACG0R,IACAoB,GACC,gBAACqB,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CACEC,QAAS,CAAEA,QAASxa,EAAE,WAAYya,MAAO,KACzCC,OAAQ/L,KACRoL,QAASA,EACTY,sBAAoB,GAEpB,gBAAC,WAAD,OAEF,gBAACC,GAAA,EAAD,CACE9X,WAAYA,EACZ+X,OAAQxB,EACRyB,QAASxB,a,uFC9I7B,IAAMyB,GAASjc,UAAOgH,IAAV,yEAAGhH,CAAH,6NAKC,SAACgD,GAAD,OAAYA,EAAMsS,OAAS,EAAI,KAQxC,SAACtS,GAAD,MAA+B,QAAnBA,EAAMkZ,SAAqB,aAAe,mBAGxC,SAAClZ,GAAD,OACZA,EAAMwG,SACFxG,EAAMlC,MAAMqb,wBACZnZ,EAAMlC,MAAMqW,aAUPiF,GAzCf,SAASA,WAAT,GAA2E,IAArDtG,EAAqD,EAArDA,aAAc1T,EAAuC,EAAvCA,SAAU8Z,EAA6B,EAA7BA,SAAU1S,EAAmB,EAAnBA,SACtD,OACE,gBAACyS,GAAD,CACE3G,OAAQQ,EACRtM,SAAUA,EACVrH,IAAKC,EACL8Z,SAAUA,K,gpCCThB,IAiBMG,GAAUrc,UAAOgH,IAAV,sEAAGhH,CAAH,kBACA,SAACgD,GAAD,OAAYA,EAAMsZ,UAAY,QAAU,UAGtCC,GArBiB,SAA1BA,OAA2B,GAA2B,IAAzBtC,EAAyB,EAAzBA,SAAU3G,EAAe,EAAfA,SAC3C,uBAAoCzS,WAAeoZ,GAAnD,GAAOuC,EAAP,KAAmBC,EAAnB,KASA,OANA5b,aAAgB,WACVoZ,GACFwC,GAAc,KAEf,CAACxC,IAECuC,EAIE,gBAACH,GAAD,CAASC,UAAWrC,GAAW3G,GAH7B,M,ktFCuBX,SAASoJ,kBAAT,EAWEva,GACA,IAVEwa,EAUF,EAVEA,KACA3Y,EASF,EATEA,WACA4Y,EAQF,EAREA,eACAC,EAOF,EAPEA,iBACAC,EAMF,EANEA,QACAvB,EAKF,EALEA,MACAwB,EAIF,EAJEA,MACAC,EAGF,EAHEA,SAIM3Y,EAAc6G,cAAd7G,UACR,EAAgC4G,cAAxB6C,EAAR,EAAQA,UAAWjJ,EAAnB,EAAmBA,SACX3D,EAAMC,cAAND,EACF0X,EAAYvH,YAAUsL,EAAK1Y,IAAIuN,OAC/ByL,EAAmBL,GAAkBA,EAAe3Y,KAAO0Y,EAAK1Y,GAChEiZ,IACFP,EAAKrJ,SAAS7G,SAAUmQ,aAAA,EAAAA,EAAgBzN,oBAAqBwN,EAAK1Y,GAChEuL,EAAW1B,EAAUX,IAAIwP,EAAK1Y,IAC5BkZ,EAAwBrP,EAAxBqP,oBACR,6BAAkCtc,YAAe,GAAjD,GAAOkY,EAAP,KAAkBC,EAAlB,KACMyB,EAAmBV,KAEzBlZ,aAAgB,WACVoc,GAAoBC,GACtBC,EAAoBR,EAAK1Y,MAE1B,CAACkZ,EAAqBR,EAAMO,EAAmBD,IAElD,IAAMG,EAAavc,WACjB,kBAAMmD,aAAN,EAAMA,EAAYqZ,eAAeV,EAAK1Y,IAAIwJ,KAAI,SAAC6P,GAAD,OAAWA,EAAMrZ,QAC/D,CAACD,EAAY2Y,IAGTY,EAAe1c,WAAc,WACjC,SACEqc,GACAN,GACA5Y,IACCA,EACEqZ,eAAeT,EAAe3Y,IAC9BwJ,KAAI,SAAC6P,GAAD,OAAWA,EAAMrZ,MACrBuZ,SAASb,EAAK1Y,KACfgZ,MAEH,CAACC,EAAmBN,EAAgBK,EAAkBN,EAAM3Y,IAE/D,6BAAgCnD,WAAe0c,GAA/C,GAAOtD,EAAP,KAAiBwD,EAAjB,KAEA5c,aAAgB,WACV0c,GACFE,EAAYF,KAEb,CAACA,IAGJ1c,aAAgB,WACVoZ,IAAaiD,GACfO,GAAY,KAEb,CAACxD,EAAUiD,IAEd,IAAMQ,EAAwB7c,eAC5B,SAACc,GACCA,EAAGE,iBACHF,EAAG4X,kBACHkE,GAAaxD,KAEf,CAACA,IAGG0D,EAAmB9c,eAAkB,WACzCgc,WAAmBF,EAAK1Y,MACvB,CAAC4Y,EAAkBF,IAEhBjC,EAAoB7Z,cAAA,iB,0TAAA,0BACxB,iBAAO6F,GAAP,4FACO8I,EADP,iEAIQ1B,EAAU0D,OACd,CACEvN,GAAIuL,EAASvL,GACbsL,KAAMC,EAASD,KACf7I,SAEF,CACEkX,aAAcpO,EAASqO,WAX7B,iDADwB,sDAgBxB,CAAC/P,EAAW0B,IAEd,6BAAoDpO,eAApD,GAAOkZ,EAAP,KAAiBC,EAAjB,KAAiCC,EAAjC,KACMsD,EAAWhQ,EAAUiQ,mBAAqBpB,EAAK1Y,GAC/C+Z,EAAwC,WAA3Bha,aAAA,EAAAA,EAAYiO,KAAKgM,OAGpC,6BAA+BC,aAAQ,CACrC7b,KAAM,WACN6D,KAAM,iDAAC,6BACFyW,GADC,IAEJpB,QACA5F,OAAQsH,EACRvc,cAAcsD,aAAA,EAAAA,EAAYC,KAAM,MAElCkR,QAAS,iBAACC,GAAD,MAAc,CACrB+I,WAAY/I,EAAQ+I,eAEtBC,QAAS,mBACP,OACGtB,IACAjY,EAASK,UAAUyX,EAAK1Y,IAAIyS,MAC3B7R,EAASK,UAAUyX,EAAK1Y,IAAIgR,SAC5BpQ,EAASK,UAAUyX,EAAK1Y,IAAIyH,WAhBpC,GAASyS,EAAT,KAASA,WAAcE,EAAvB,KAqBMC,EAAiBzd,WAIjB0d,GAAsB1d,eAAkB,WACxCyd,EAAe7c,UACjB+c,aAAaF,EAAe7c,SAC5B6c,EAAe7c,aAAUuE,KAE1B,IAGH,8BAAgE8O,aAAQ,CACtEC,OAAQ,WACRC,KAAM,cAAC9O,EAAkBkP,GACnBA,EAAQuF,WAGP3W,GAGL8J,EAAU4I,KAAKxQ,EAAKjC,GAAID,EAAWC,GAAI0Y,EAAK1Y,KAE9CiR,QAAS,iBAACuJ,EAAOrJ,GAAR,OACN0H,KACCM,IACDA,EAAWI,SAASpI,EAAQsJ,UAAsBza,KACrD0a,MAAO,eAACF,EAAOrJ,GAIX8H,GACA9H,EAAQF,WACRE,EAAQE,OAAO,CACbyF,SAAS,MAGNuD,EAAe7c,UAClB6c,EAAe7c,QAAUmd,YAAW,WAClCN,EAAe7c,aAAUuE,EAGvBoP,EAAQE,OAAO,CACbyF,SAAS,KAGX0C,GAAY,KAEb,QAITtI,QAAS,iBAACC,GAAD,MAAc,CACrByJ,eAAgBzJ,EAAQE,OAAO,CAC7ByF,SAAS,IAEX+D,kBAAmB1J,EAAQF,cA5C/B,YAAS2J,GAAT,GAASA,eAAgBC,GAAzB,GAAyBA,kBAAqBC,GAA9C,MAiDA,8BAAkEjK,aAAQ,CACxEC,OAAQ,WACRC,KAAM,cAAC9O,GACA8X,EAaAha,GAGDkC,EAAKjC,KAAO0Y,EAAK1Y,KAIjBgW,EACFnM,EAAU4I,KAAKxQ,EAAKjC,GAAID,EAAWC,GAAI0Y,EAAK1Y,GAAI,GAIlD6J,EAAU4I,KAAKxQ,EAAKjC,GAAID,EAAWC,GAAI+Y,EAAUD,EAAQ,IAxBvD1Y,EACEnD,EACE,sEAEF,CACEmB,KAAM,OACN2c,QAAS,OAoBjB7J,QAAS,iBAACC,GAAD,MAAc,CACrB6J,cAAe7J,EAAQE,SACvB4J,sBAAuB9J,EAAQF,cAhCnC,YAAS+J,GAAT,GAASA,cAAeC,GAAxB,GAAwBA,sBAAyBC,GAAjD,MAoCMC,GAAeve,WAAc,WACjC,IAAMwe,GACJzC,aAAA,EAAAA,EAAgBE,WAChBF,aADA,EACAA,EAAgBtB,YAChBsB,aAAA,EAAAA,EAAgBzN,oBAAqBwN,EAAK1Y,GAE5C,OAAOD,GAAcqb,EACjBC,aAAoB,CACjB1C,aADgB,EAChBA,EAAgB2C,kBADA,sCACqB5C,EAAKrJ,WAC3CtP,EAAWiO,MACX,GAEF0K,EAAKrJ,WACR,CACDsJ,aADC,EACDA,EAAgBtB,SAChBsB,aAFC,EAEDA,EAAgBE,QAChBF,aAHC,EAGDA,EAAgBzN,iBAChByN,aAJC,EAIDA,EAAgB2C,iBAChBvb,EACA2Y,IAGI3B,GAAqBna,eAAkB,SAACkY,GAC5CC,EAAaD,KACZ,IAEGrS,KACHkW,aAAA,EAAAA,EAAgB3Y,MAAO0Y,EAAK1Y,GAAK2Y,EAAelW,MAAQiW,EAAKjW,QAC9DxF,EAAE,YAEE+D,GAAMJ,EAASK,UAAUyX,EAAK1Y,IAC9Bub,GAAavF,IAAakE,EAC1BsB,GAAcL,GAAa3S,OAAS,EAE1C,OACE,gCACE,gBAAC,GAAD,CAAUiT,YAAanB,IACrB,gBAACoB,GAAD,CACE5d,IAAK4a,EAAK1Y,GACV9B,IAAKkc,EACLuB,YAAazB,EACb0B,UAAW/B,GAEX,uBAAK3b,IAAK4c,IACR,gBAAC,GAAD,CAAczH,WAAYqF,EAAK1Y,GAAI6b,gBAAgB,kBACjD,gBAACtK,GAAA,EAAD,CACEyE,SAAUwF,GAAcD,QAAaxZ,EACrCkU,kBAAmBwD,EACnBqC,aAAcpC,EACdlM,GAAI,CACFpB,SAAUsM,EAAKzI,IACfvE,MAAO,CACLjJ,MAAOiW,EAAKjW,MACZ0U,QAASX,IAGbha,MACE,gBAAC,GAAD,CACEiG,MAAOA,GACPI,SAAU4T,EACV7B,UAAWmC,GACXpC,UAAWA,EACXoH,UAAWC,OAGf3E,SAAU,kBAAC1M,EAAOF,GAAR,cACNE,IAAS,UAAAF,EAASiB,aAAT,eAAgByL,WAAYX,GAEzC3E,aAAc+I,IAAkBC,GAChCvD,MAAOA,EACPnJ,OAAO,EACPiJ,YAAaf,EACb4F,wBAAyBzF,EACzBqC,QAASA,EACT3a,IAAKA,EACLkF,MACEmI,GACCsO,GACA/E,GACAmG,QAsBGlZ,EArBF,gBAACwV,GAAA,EAAD,KACGvW,GAAIkb,qBACH,gBAACC,GAAA,EAAD,CAAS1E,QAASxa,EAAE,WAAYya,MAAO,KACrC,gBAACF,GAAA,EAAD,CACEpZ,UAAM2D,EACNyB,aAAYvG,EAAE,uBACdmf,GAAIC,KACJ7O,GAAIC,YAAgBlC,EAAS9O,aAAc,CACzCyO,iBAAkBK,EAASvL,MAG7B,gBAAC,WAAD,QAIN,gBAACsc,GAAA,EAAD,CACE/Q,SAAUA,EACVuM,OAAQxB,EACRyB,QAASxB,UASxB0E,IACC,gBAAC,GAAD,CACE1V,UAAWwU,EACXlI,aAAcmJ,GACd7c,SAAU+c,MAIhB,gBAAC,GAAD,CAAQlF,SAAUA,IAAakE,GAC5BiB,GAAa3R,KAAI,SAAC+S,EAAWzD,GAAZ,OAChB,gBAAC0D,GAAD,CACE1e,IAAKye,EAAUvc,GACfD,WAAYA,EACZ2Y,KAAM6D,EACN5D,eAAgBA,EAChBC,iBAAkBA,EAClBC,QAAS0D,EAAU1D,QACnBvB,MAAOA,EAAQ,EACfwB,MAAOA,EACPC,SAAUL,EAAK1Y,UAQ3B,IAAM0b,GAAY3f,UAAOgH,IAAV,8EAAGhH,CAAH,qCACF,SAACgD,GAAD,OAAYA,EAAM4c,aAAe5c,EAAM6c,UAAY,GAAM,KAClD,SAAC7c,GAAD,OAAYA,EAAM6c,UAAY,OAAS,SAGrDY,GAAetgB,YAASU,aAAiB6b,oBAEhC+D,MClYT7a,GAAQ5F,kBAAOsF,MAAV,wFAAGtF,CAAH,0EAOI0gB,GAhBoB,SAA7BA,6BACJ,IAAQxf,EAAMC,cAAND,EACR,OACE,gBAAC,GAAD,CAAOmB,KAAK,WAAW8G,KAAK,SACzBjI,EAAE,W,u3ECiFMf,oBApEf,SAASwgB,uBAAT,GAIU,IAHR3c,EAGQ,EAHRA,WACAiW,EAEQ,EAFRA,SACA4C,EACQ,EADRA,iBAEM5X,EAAMoM,YAAUrN,EAAWC,IACzBI,EAAc6G,cAAd7G,UACF2Z,EAAuC,UAA1Bha,EAAWiO,KAAKgM,MAC3BnQ,EAAc7C,cAAd6C,UACA5M,EAAMC,cAAND,EAEF0f,EC5BO,SAASC,uBACtB7c,EACA4Y,GAEA,OAAO/b,WAAc,WACnB,OAAKmD,IAKH4Y,aAAA,EAAAA,EAAgBtB,aAChBsB,aADA,EACAA,EAAgBE,WAChBF,aAAA,EAAAA,EAAgBlc,gBAAiBsD,EAAWC,IAC3C2Y,WAAgBzN,iBAQfnL,EAAW8c,gBALXxB,aAAoB,CACjB1C,EAAe2C,kBADC,gDACoBvb,EAAW8c,kBAChD9c,EAAWiO,MACX,GAbG,KAgBR,CACD2K,aADC,EACDA,EAAgBtB,SAChBsB,aAFC,EAEDA,EAAgBE,QAChBF,aAHC,EAGDA,EAAgBlc,aAChBkc,aAJC,EAIDA,EAAgBzN,iBAChByN,aALC,EAKDA,EAAgB2C,iBAChBvb,EACAA,aAPC,EAODA,EAAY8c,gBACZ9c,aARC,EAQDA,EAAYC,GACZD,aATC,EASDA,EAAYiO,ODHS4O,CAAuB7c,EAAY8J,EAAU6H,QAGpE,uCAAkEb,aAAQ,CACxEC,OAAQ,WACRC,KAAM,cAAC9O,GACA8X,EAaAha,GAGL8J,EAAU4I,KAAKxQ,EAAKjC,GAAID,EAAWC,QAAI+B,EAAW,GAfhD3B,EACEnD,EACE,sEAEF,CACEmB,KAAM,OACN2c,QAAS,OAWjB7J,QAAS,iBAACC,GAAD,MAAc,CACrB6J,gBAAiB7J,EAAQE,SACzB4J,wBAAyB9J,EAAQF,cAvBrC,UAAS+J,EAAT,EAASA,cAAeC,EAAxB,EAAwBA,sBAAyBC,EAAjD,KA2BA,OACE,gBAAC,GAAD,CAAQlF,SAAUA,GACfiF,GAAyBja,EAAIuM,QAC5B,gBAAC,GAAD,CACEhI,UAAWwU,EACXlI,aAAcmJ,EACd7c,SAAU+c,EACVjD,SAAS,QAGZ0E,EAAenT,KAAI,SAACkP,EAAMI,GAAP,OAClB,gBAAC,GAAD,CACEhb,IAAK4a,EAAK1Y,GACV0Y,KAAMA,EACN3Y,WAAYA,EACZ4Y,eAAgB9O,EAAU6H,OAC1BkH,iBAAkBA,EAClBC,QAASH,EAAKG,QACdvB,MAAO,EACPwB,MAAOA,OAGgB,IAA1B6D,EAAenU,QAAgB,gBAAC,GAAD,U,wxCE8CtC,IAAMkT,GAAY3f,kBAAO,OAAV,wFAAGA,CAAH,qCACF,SAACgD,GAAD,OAAYA,EAAM4c,YAAc,GAAM,KAC/B,SAAC5c,GAAD,OAAYA,EAAM4c,YAAc,OAAS,UAG9Czf,gBA1Gf,SAAS4gB,wBAAT,GAKU,IAJR/c,EAIQ,EAJRA,WACA4Y,EAGQ,EAHRA,eACAC,EAEQ,EAFRA,iBACAmE,EACQ,EADRA,gBAEMC,EAbR,SAASC,0BAA0B,MAIjC,iBAHiBvS,cAGDgB,aAAhB,aAAO,EAAgByL,QASM8F,GAC7B,EAA4BjW,cAApB0I,EAAR,EAAQA,GAAItG,EAAZ,EAAYA,YACZ,wCAAgCxM,WAC9BmD,EAAWC,KAAO0P,EAAGwH,qBAAuB8F,GAD9C,GAAOhH,EAAP,KAAiBwD,EAAjB,KAGMxY,EAAMoM,YAAUrN,EAAWC,IAC3Bkd,EAAuBH,EAAkBA,EAAgBjE,MAAQ,KAGvE,wCAGIjI,aAAQ,CACVC,OAAQ,aACRC,KAAM,cAAC9O,GACLmH,EAAYqJ,KACVxQ,EAAKjC,GACLmd,KAAgBpd,EAAW+Y,MAAOoE,KAGtCjM,QAAS,iBAAChP,GACR,OACElC,EAAWC,KAAOiC,EAAKjC,MACrB+c,GAAmB9a,EAAKjC,KAAO+c,EAAgB/c,KAGrDkR,QAAS,iBAACC,GAAD,MAAyD,CAChEiM,qBAAsBjM,EAAQE,SAC9B6E,wBAAmD,eAA1B/E,EAAQkM,kBAnBrC,UACID,EADJ,EACIA,qBAAsBlH,EAD1B,EAC0BA,wBACxBoH,EAFF,KAwBA,wCAA4DrD,aAAQ,CAClE7b,KAAM,aACN6D,KAAM,gBACJ,MAAO,CACLjC,GAAID,EAAWC,KAGnBkR,QAAS,iBAACC,GAAD,MAAc,CACrBoM,qBAAsBpM,EAAQ+I,eAEhCC,QAAS,mBACP,OAAOnZ,EAAIyR,QAXf,GAAS8K,EAAT,KAASA,qBAAwBC,EAAjC,KAiBA5gB,aAAgB,WACVmD,EAAWC,KAAO0P,EAAGwH,oBAAuB8F,GAC9CxD,GAAY,KAEb,CAACzZ,EAAWC,GAAI0P,EAAGwH,mBAAoB8F,IAE1C,IAAMvD,EAAwB7c,eAAkB,SAACc,GAC/CA,EAAGE,iBACH4b,GAAY,SAACiE,GAAD,OAAQA,OACnB,IAEGC,EAAwB1H,IAAauH,EAE3C,OACE,gCACE,gBAAC,GAAD,CACEzf,IAAKiC,EAAWC,GAChB9B,IAAKsf,EACL7B,YAAa4B,GAEb,gBAAC,GAAD,CACExd,WAAYA,EACZiW,SAAU0H,EACV/E,eAAgBA,EAChB1C,kBAAmBwD,EACnBvD,wBAAyBA,KAG7B,gBAAC,GAAD,KACE,gBAAC,GAAD,CACEnW,WAAYA,EACZiW,SAAU0H,EACV9E,iBAAkBA,IAEnB1C,GACC,gBAAC,GAAD,CACErE,aAAcuL,EACdjf,SAAUmf,S,+5EC7Gf,IAgCMK,GAAmBC,oBAAH,yFAYvBrG,GAAOxb,UAAO8hB,KAAV,+DAAG9hB,CAAH,qCACK4hB,IAGTrb,GAASvG,UAAO+hB,OAAV,iEAAG/hB,CAAH,iVAMD,SAACgD,GAAD,OAAWA,EAAMlC,MAAMkhB,gBAarB,SAAChf,GAAD,OAAWA,EAAMlC,MAAMiH,iBAK9Bka,GAAajiB,kBAAOkiB,iBAAV,qEAAGliB,CAAH,4FAEZ,qBAAGia,UAA4B,gCAI7BkI,GAAKniB,UAAOoiB,GAAV,6DAAGpiB,CAAH,sCAIFiiB,IAMSI,GAxFwB,SAA1BA,OAA2B,GAA4B,IAA1Bpe,EAA0B,EAA1BA,GAAIyC,EAAsB,EAAtBA,MAAO4M,EAAe,EAAfA,SACnD,uBAAsCzS,YAAe,GAArD,GAAOyhB,EAAP,KAAoBC,EAApB,KACA,uBCFa,SAASC,kBACtBzgB,EACA0gB,GAEA,sCAAsC5hB,YAAe,WAAM,MACzD,MAAsB,oBAAX6T,OACF+N,EAET,UAAOC,KAAQvV,IAAIpL,UAAnB,QAA2B0gB,KAJ7B,GAAOE,EAAP,KAAoBC,EAApB,KA4BA,OANAC,aAAiB,WAAW,SAACxJ,GACvBA,EAAMtX,MAAQA,GAAOsX,EAAMyJ,UAC7BF,EAAe7P,KAAK9D,MAAMoK,EAAMyJ,cAI7B,CAACH,EArBS,SAAXxJ,SAAY7Y,GAChB,IAEE,IAAMyiB,EACJziB,aAAiB0iB,SAAW1iB,EAAMqiB,GAAeriB,EAEnDsiB,EAAeG,GACfL,KAAQO,IAAIlhB,EAAKghB,GACjB,MAAOre,GAEPwe,KAAOC,MAAM,OAAQ,0BAA2B,CAAEze,aDnBtB8d,CAAkB,kBAAD,OAC7Bve,IAClB,GAFF,GAAOgW,EAAP,KAAiBwD,EAAjB,KAKA5c,aAAgB,WACToZ,GACHsI,GAAe,KAEhB,CAACtI,IAEJ,IAAMmJ,EAAcviB,eAAkB,WACpC4c,GAAaxD,KACZ,CAACA,EAAUwD,IAEd,OACE,gCACE,gBAAC0E,GAAD,KACE,gBAAC,GAAD,CAAQ3c,QAAS4d,EAAa5Z,UAAWvF,GACtCyC,EACAzC,GACC,gBAACge,GAAD,CAAYhI,SAAUA,EAAU1X,MAAM,eAAe4G,KAAM,OAIhE8Q,IAAaqI,EAAchP,EAAW,gBAAC,GAAD,KAAOA,M,aE3BpD,IAAM+I,GAAUrc,UAAOgH,IAAV,kFAAGhH,CAAH,gCAKEqjB,GAff,SAASA,yBACP,OACE,gBAAC,GAAD,KACE,gBAACC,GAAA,EAAD,MACA,gBAACA,GAAA,EAAD,CAAiB3H,MAAO,KACxB,gBAAC2H,GAAA,EAAD,CAAiB3H,MAAO,O,wsBC4Bfxb,oBAxBf,SAASojB,cAAT,GAAmD,IAA1B3H,EAA0B,EAA1BA,OAAW9C,EAAe,4CAC3CmC,EAAUC,aAAiB,CAC/BsI,eAAe,EACfC,cAAc,EACdtI,wBAAoBnV,EACpB0d,sBAAkB1d,IAEd2d,EAAWC,aAAiBhI,EAAQX,GAG1C,OAFAtD,KAA4B,WAAlBgM,EAASthB,KAAmB,kCAEjCshB,EAASE,QAKZ,gBAACrO,GAAA,EAAD,uBACEhQ,QAASme,EAASne,QAClBlD,KAAMqhB,EAASrhB,KACf7B,MAAOkjB,EAASjd,OACZoS,IARC,Q,qoDC0FI3Y,oBA/Ff,SAAS2jB,cACP,gCAAkCjjB,YAAe,GAAjD,GAAOkjB,EAAP,KAAmBC,EAAnB,KACA,4BAAoCnjB,aAApC,GAAOojB,EAAP,KAAmBC,EAAnB,KACA,EAAmCjZ,cAA3B6C,EAAR,EAAQA,UAAWT,EAAnB,EAAmBA,YACXhJ,EAAc6G,cAAd7G,UACF8f,IAAgB9W,EAAYG,YAAYf,OACtCvL,EAAMC,cAAND,EACFkjB,EAAqB/W,EAAYG,YAEvC3M,aAAgB,WAAM,oFACpB,+GACOwM,EAAYgX,UAAaN,GAAeE,EAD/C,iCAGMD,GAAY,GAHlB,SAIY3W,EAAY1J,UAAU,CAC1B2gB,MAAO,MALf,uDAQMjgB,EACEnD,EAAE,0DACF,CACEmB,KAAM,UAGV6hB,EAAc,EAAD,IAdnB,yBAgBMF,GAAY,GAhBlB,mFADoB,gCACLO,OADK,mCAsBpBA,KACC,CAAClX,EAAa0W,EAAY1f,EAAW4f,EAAY/iB,IAEpD,IAKM,EALN,4BAGI4T,aAAQ,CACVC,OAAQ,aACRC,MAAI,wDAAE,kBAAO9O,GAAP,0FACJmH,EAAYqJ,KACVxQ,EAAKjC,GACLmd,KAAgB,KAAMgD,EAAmB,GAAGrH,QAH1C,kDAAF,kDAMJ7H,QAAS,iBAAChP,GACR,OAAOA,EAAKjC,KAAOmgB,EAAmB,GAAGngB,IAE3CkR,QAAS,iBAACC,GAAD,MAAc,CACrBiM,qBAAsBjM,EAAQE,SAC9B6E,wBAAmD,eAA1B/E,EAAQkM,kBAhBrC,UACID,EADJ,EACIA,qBAAsBlH,EAD1B,EAC0BA,wBACxBoH,EAFF,KAoBM1G,EACJ,gCACGV,GACC,gBAAC,GAAD,CACErE,aAAcuL,EACdjf,SAAUmf,EACVrF,SAAS,QAGZkI,EAAmB3W,KAAI,SAACzJ,EAAwB+Y,GAAzB,OACtB,gBAAC,GAAD,CACEhb,IAAKiC,EAAWC,GAChBD,WAAYA,EACZ4Y,eAAgB9O,EAAU6H,OAC1BkH,iBAAkB/O,EAAU+O,iBAC5BmE,gBAAiBoD,EAAmBrH,EAAQ,QAGhD,gBAAC,GAAD,CAAenB,OAAQ4I,KAAkBjJ,MAAO,KAIpD,OAAKlO,EAAYgX,UAAYJ,EAEzB,gBAAC9e,EAAA,EAAD,CAAMC,QAAM,GACV,gBAAC,GAAD,CAAQnB,GAAG,cAAcyC,MAAOxF,EAAE,gBAChC,gBAAC,GAAD,QAON,gBAACiE,EAAA,EAAD,CAAMC,QAAM,GACV,gBAAC,GAAD,CAAQnB,GAAG,cAAcyC,MAAOxF,EAAE,gBAChC,gBAAC,GAAD,KAAWijB,EAActJ,EAAU,gBAACW,GAAA,EAAD,KAAOX,S,yrDC8FlD,IAAM8E,GAAY3f,UAAOgH,IAAV,6EAAGhH,CAAH,oCAEF,SAACgD,GAAD,OAAYA,EAAM4c,YAAc,GAAM,KAGpCzf,gBA5Kf,SAASskB,YAAT,GAAsC,IAAfC,EAAe,EAAfA,KACf5jB,EAAQC,qBACd,EAAuCkK,cAA/B0I,EAAR,EAAQA,GAAItG,EAAZ,EAAYA,YAAaS,EAAzB,EAAyBA,UACzB,4BAAoD1M,eAApD,GAAOkZ,EAAP,KAAiBC,EAAjB,KAAiCC,EAAjC,KACQlD,EAA6BoN,EAA7BpN,WAAY5W,EAAiBgkB,EAAjBhkB,aACdsD,EAAaqJ,EAAYF,IAAIzM,GAC7BugB,EAbR,SAASC,sCAA0B,MAIjC,iBAHiBvS,cAGDgB,aAAhB,aAAO,EAAgByL,QASM8F,GAC7B,4BAAgCjL,mBAC9ByO,EAAKhkB,eAAiBiT,EAAGwH,sBAAwB8F,GADnD,GAAOhH,EAAP,KAAiBwD,EAAjB,KAIA5c,aAAgB,WACV6jB,EAAKhkB,eAAiBiT,EAAGwH,oBAAsB8F,GACjDxD,GAAY,KAEb,CAACiH,EAAKhkB,aAAciT,EAAGwH,mBAAoB8F,IAE9ClS,qBAAU,WAAM,oFACd,gHACMuI,EADN,gCAEUxJ,EAAU/H,MAAMuR,GAF1B,kDADc,gCACCiN,OADD,mCAOdA,KACC,CAACjN,EAAYxJ,IAEhB,IAAM4P,EAAwB7c,eAC5B,SAACc,GACCA,EAAGE,iBACHF,EAAG4X,kBACHkE,GAAY,SAACkH,GAAD,OAAmBA,OAEjC,IAIF,4BAA+BzG,aAAQ,CACrC7b,KAAM,OACN6D,KAAM,uBAAMwe,GACZvP,QAAS,iBAACC,GAAD,MAAc,CACrB+I,aAAc/I,EAAQ+I,eAExBC,QAAS,0BAAM,KANjB,GAASD,EAAT,KAASA,WAAcE,EAAvB,KAUA,4BAA0DvJ,aAAQ,CAChEC,OAAQ,OACRC,KAAM,cAAC9O,GACL,IAAM0e,EAAOF,aAAH,EAAGA,EAAME,OAEnB1e,WAAM6F,KAAK,CACTgR,MAAOqE,MAAgBsD,aAAA,EAAAA,EAAM3H,QAAS,MAAM6H,aAAA,EAAAA,EAAM7H,QAAS,SAG/D5H,QAAS,iBAACC,GAAD,MAAc,CACrB6J,gBAAiB7J,EAAQE,SACzBuP,gBAAiBzP,EAAQF,cAX7B,UAAS+J,EAAT,EAASA,cAAe4F,EAAxB,EAAwBA,cAAiB1F,EAAzC,KAeMwC,EAAwB1H,IAAakE,EAE3C,GAAI7G,EAAY,CACd,IAAM9H,EAAW1B,EAAUX,IAAImK,GAC/B,IAAK9H,EACH,OAAO,KAGT,IAAMxL,EAAaqJ,EAAYF,IAAIqC,EAAS9O,cACpCokB,EAAUC,aAAWvV,EAAS9I,OAA9Boe,MACFrkB,EAAQqkB,EACVtV,EAAS9I,MAAM+I,QAAQqV,EAAO,IAC9BtV,EAASwV,iBACPpE,EAAiB5c,EACnBA,EAAWihB,oBAAoB3N,GAC/B,GACE4F,EAAoB0D,EAAenU,OAAS,EAElD,OACE,gCACE,gBAAC,GAAD,CAAW1K,IAAK2iB,EAAKzgB,GAAI9B,IAAKkc,EAAMuB,YAAazB,GAC/C,gBAAC3I,GAAA,EAAD,CACE+F,MAAO,EACP9J,GAAI,CACFpB,SAAUb,EAAS0E,IACnBvE,MAAO,CAAEyL,SAAS,IAEpBnB,SAAUiD,IAAsBiB,EAAalE,OAAWjU,EACxDkU,kBAAmBwD,EACnBpb,KACEwiB,EACE,gBAACI,GAAA,EAAD,CAAWJ,MAAOA,IAElB,gBAAC,cAAD,CAAaviB,MAAOzB,EAAMqkB,SAG9B7J,SAAU,kBAAC1M,EAAOF,GAAR,cACNE,IAAqC,KAA5B,UAAAF,EAASiB,aAAT,eAAgByL,UAE7B3a,MAAOA,EACP2R,OAAO,EACPiJ,YAAaf,EACbjT,KACEmI,IAAa2O,EACX,gBAAC3C,GAAA,EAAD,KACE,gBAAC+E,GAAA,EAAD,CACE/Q,SAAUA,EACVuM,OAAQxB,EACRyB,QAASxB,UAGXxU,KAIV,gBAAC,GAAD,KACE,gBAAC,GAAD,CAAQiU,SAAU0H,GACff,EAAenT,KAAI,SAACkP,EAAMI,GAAP,OAClB,gBAAC,GAAD,CACEhb,IAAK4a,EAAK1Y,GACV0Y,KAAMA,EACN3Y,WAAYA,EACZ4Y,eAAgB9O,EAAU6H,OAC1BmH,QAASH,EAAKG,QACdvB,MAAO,EACPwB,MAAOA,QAIZ8H,GACC,gBAAC,GAAD,CAAY/O,aAAcmJ,EAAe7c,SAAU+c,MAO7D,OAAInb,EAEA,gCACE,gBAAC,GAAD,CAAWjC,IAAK2iB,aAAF,EAAEA,EAAMzgB,GAAI9B,IAAKkc,EAAMuB,YAAazB,GAChD,gBAAC,GAAD,CACEna,WAAYA,EACZiW,SAAUkE,OAAanY,EAAY2b,EACnC/E,eAAgB9O,EAAU6H,OAC1BuE,kBAAmBwD,EACnBvD,wBAAyB0K,KAG7B,gBAAC,GAAD,KACE,gBAAC,GAAD,CACE7gB,WAAYA,EACZiW,SAAU0H,IAEXkD,GACC,gBAAC,GAAD,CAAY/O,aAAcmJ,EAAe7c,SAAU+c,MAOtD,Q,qlDC9FMhf,oBAtFf,SAASilB,UACP,4BAAoCvkB,aAApC,GAAOojB,EAAP,KAAmBC,EAAnB,KACA,wBAAsDrjB,WAJvB,IAI/B,GAAOwkB,EAAP,KAA4BC,EAA5B,KAGQjhB,EAAc6G,cAAd7G,UACAkhB,EAAUta,cAAVsa,MACArkB,EAAMC,cAAND,EAEFskB,EAAe3kB,cAAA,kDACnB,qIAAO4kB,EAAP,+BAAgB,EAAhB,kBAEUF,EAAM5hB,UAAU,CACpB2gB,MAAOoB,GACPD,WAJN,uDAOIphB,EAAUnD,EAAE,yCAA0C,CACpDmB,KAAM,UAER6hB,EAAc,EAAD,IAVjB,+DAaA,CAACqB,EAAOlhB,EAAWnD,IAGrBL,aAAgB,WACd2kB,MACC,CAACA,IAEJ,IAQM,EARAG,EAAc,mEAAG,8HACfH,EAAaH,GADE,OAErBC,GAAuB,SAACM,GAAD,OAAUA,EAlCJ,MAgCR,kDAAH,gBAAdD,iBAAc,mCAMpB,wBAA8D7Q,aAAQ,CACpEC,OAAQ,OACRC,MAAI,oDAAE,kBAAO9O,GAAP,0FACJA,WAAM6F,KAAK,CAAEgR,MAAOqE,KAAgB,KAAMmE,EAAM/X,YAAY,GAAGuP,SAD3D,kDAAF,kDAGJ5H,QAAS,iBAACC,GAAD,MAAc,CACrB6J,gBAAiB7J,EAAQE,SACzBuQ,kBAA6C,SAA1BzQ,EAAQkM,kBAP/B,UAASrC,EAAT,EAASA,cAAe4G,EAAxB,EAAwBA,kBAAqB1G,EAA7C,KAWA,OAAKoG,EAAM/X,YAAYf,OAKrB,gBAAC,GAAeqZ,SAAhB,CAAyBxlB,OAAO,GAC9B,gBAAC6E,EAAA,EAAD,CAAMC,QAAM,GACV,gBAAC,GAAD,CAAQnB,GAAG,UAAUyC,MAAOxF,EAAE,YAC5B,gBAAC,GAAD,KACG2kB,GACC,gBAAC,GAAD,CACE/P,aAAcmJ,EACd7c,SAAU+c,EACVjD,SAAS,QAGZqJ,EAAM/X,YAAYuY,MAAM,EAAGV,GAAqB5X,KAAI,SAACiX,GAAD,OACnD,gBAAC,GAAD,CAAa3iB,IAAK2iB,EAAKzgB,GAAIygB,KAAMA,OAElCa,EAAM/X,YAAYf,OAAS4Y,GAC1B,gBAAC7P,GAAA,EAAD,CACEhQ,QAASmgB,EACTllB,MAAK,UAAKS,EAAE,aAAP,KACLsI,SAAU+b,EAAMxB,WAChBxI,MAAO,KAGTgK,EAAMxB,YAAcE,KAAgBsB,EAAM/X,YAAYf,QACtD,gBAACtH,EAAA,EAAD,CAAMC,QAAM,GACV,gBAAC,GAAD,WA5BL,Q,ksCCHIjF,oBAnDf,SAAS6lB,YAAY,MACnB,EAAgC/a,cAAxBpG,EAAR,EAAQA,SAAUiJ,EAAlB,EAAkBA,UACV5M,EAAMC,cAAND,EACR,0BAAgC+U,qBAAhC,GAAOzG,EAAP,KAAiByW,EAAjB,KAEA,0BAAsDnR,aAAQ,CAC5DC,OAAQ,WACRC,KAAM,cAAC9O,GACL,IAAMggB,EAAMpY,EAAUX,IAAIjH,EAAKjC,IAI/B2a,YAAW,kBAAMsH,GAAOD,EAAYC,KAAM,IAE5ChR,QAAS,iBAAChP,GAAD,OAAUrB,EAASK,UAAUgB,EAAKjC,IAAIyH,QAC/CyJ,QAAS,iBAACC,GAAD,MAAc,CACrBC,mBAAoBD,EAAQE,aAXhC,GAASD,EAAT,KAASA,mBAAsB8Q,EAA/B,KAeA,OACE,gCACE,uBAAKhkB,IAAKgkB,GACR,gBAAC3Q,GAAA,EAAD,CACE/D,GAAI2U,cACJ9jB,KAAM,gBAAC,YAAD,CAAWC,MAAM,eAAemT,KAAML,IAC5CjD,OAAO,EACP3R,MAAOS,EAAE,SACTyU,OAAM,UAAE7H,EAAU6H,cAAZ,aAAE,EAAkBE,UAC1BC,aAAcT,KAGjB7F,GACC,gBAAC/I,GAAA,EAAD,CACEC,MAAOxF,EAAE,4BAA6B,CACpCmlB,aAAc7W,EAAS8W,OAEzB3f,eAAgB,iCAAMsf,OAAYjgB,IAClCY,QAAM,EACN2f,YAAU,GAEV,gBAACC,GAAA,EAAD,CACEhX,SAAUA,EACV1I,SAAU,2BAAMmf,OAAYjgB,W,21CCiFxC,IAAMygB,GAAiBzmB,kBAAO0mB,MAAV,sEAAG1mB,CAAH,wCAKdiQ,GAASjQ,kBAAOsF,MAAV,8DAAGtF,CAAH,mBC5IG2mB,GDgJAxmB,aAlHf,SAASymB,aACP,IAAQ1lB,EAAMC,cAAND,EACA4M,EAAc7C,cAAd6C,UACF9I,EAAOoM,cACPnM,EAAMoM,YAAUrM,EAAKf,IAE3BpD,aAAgB,WACdiN,EAAUiD,cACVjD,EAAUgE,mBACT,CAAChE,IAEJ,wBAA8BjN,aAA9B,GAAOgmB,EAAP,KAAgBC,EAAhB,KACMC,EAAmBlmB,eAAkB,SAAC8b,GAAD,OAAUmK,EAAWnK,KAAO,IACjEqK,EAAenmB,WACnB,iBAAO,CACLomB,YAAaJ,KAEf,CAACA,IAGH,OACE,gBAACF,GAAA,EAAD,CAASxkB,IAAK4kB,GACXF,GACC,gBAACK,GAAA,EAAD,CAAaC,QAASC,KAAc7d,QAASyd,GAC3C,gBAAC,GAAD,MACG,SAAChkB,GAAD,OACC,gBAACqkB,GAAA,EAAD,eACMrkB,EADN,CAEE0D,MAAO1B,EAAKT,KACZwE,MACE,gBAAC0d,GAAD,CACExd,IAAKjE,EAAKkE,UACVoe,MAAO,GACPC,OAAQ,GACRhT,IAAKrT,EAAE,UAGXsmB,gBAAc,QAIpB,gBAACC,GAAA,EAAD,CAAYhiB,MAAI,EAACiiB,QAAM,GACrB,gBAACC,GAAA,EAAD,KACE,gBAACnS,GAAA,EAAD,CACE/D,GAAImW,cACJtlB,KAAM,gBAAC,WAAD,CAAUC,MAAM,iBACtB6P,OAAO,EACP3R,MAAOS,EAAE,UAEX,gBAACsU,GAAA,EAAD,CACE/D,GAAIxP,cACJK,KAAM,gBAAC,aAAD,CAAYC,MAAM,iBACxB9B,MAAOS,EAAE,UACTkR,OAAO,IAERnN,EAAI4K,gBACH,gBAAC2F,GAAA,EAAD,CACE/D,GAAIoW,cACJvlB,KAAM,gBAAC,WAAD,CAAUC,MAAM,iBACtB9B,MACE,gBAAC0E,EAAA,EAAD,CAAMkE,MAAM,SAASye,QAAQ,iBAC1B5mB,EAAE,UACH,gBAAC,GAAD,CAAQiI,KAAK,SAAS9G,KAAK,YACxByL,EAAUia,iBAOvB,gBAACJ,GAAA,EAAD,KACE,gBAAC,GAAD,OAEF,gBAACA,GAAA,EAAD,CAAS7X,MAAI,GACX,gBAAC,GAAD,OAEF,gBAAC6X,GAAA,EAAD,KACG1iB,EAAI4K,gBACH,gCACE,gBAAC2F,GAAA,EAAD,CACE/D,GAAIuW,cACJ1lB,KAAM,gBAAC,aAAD,CAAYC,MAAM,iBACxB6P,OAAO,EACP3R,MAAOS,EAAE,aACTyU,OACE7H,EAAU6H,OACN7H,EAAU6H,OAAOsS,aAChBna,EAAU6H,OAAOE,YACjB/H,EAAU6H,OAAOC,gBAClB5P,IAGR,gBAAC,GAAD,MACA,gBAAC,GAAD,OAGJ,gBAAC,GAAD,CAAe4V,OAAQsM,c,6qDEzHtB,SAASC,UACtB,4BAA4CtnB,WAAe,GAA3D,GAAOunB,EAAP,KAAuBC,EAAvB,KACQnnB,EAAMC,cAAND,EAuBR,OArBAL,aAAgB,WAAM,gGACpB,sIACoBkF,MAChB,yDAFJ,cACQuiB,EADR,gBAIyBA,EAAIC,OAJ7B,OAIQC,EAJR,OAMMC,MAAMC,QAAQF,KACVG,EAAyBH,EAC5B/a,KAAI,SAACmb,GAAD,OAAaA,EAAQC,YACzBC,WAAU,SAACC,GAAD,OAAaA,IAAY,IAAL,OAASC,WAEZ,GAC5BX,EAAkBM,GAZxB,kDADoB,gCACLM,eADK,2CAkBpBA,KACC,IAGD,gBAACzT,GAAA,EAAD,CACEb,KAAK,8CACLlU,MACE,oCACIuoB,KACF,2BACA,gBAACE,GAAD,KACsB,IAAnBd,EACGlnB,EAAE,cACFA,EAAE,uCAAwC,CACxCknB,iBACAe,MAAOf,QASzB,IAAMc,GAAWlpB,kBAAO4I,MAAV,wEAAG5I,CAAH,oBCYd,I,SAAMopB,GAAiBppB,kBAAOqpB,YAAV,+EAAGrpB,CAAH,sBAILG,gBAnDf,SAASmpB,kBACP,IAAQpoB,EAAMC,cAAND,EACFF,EAAUC,cACVsoB,EAAUC,eACVC,EAAgB,KAAQF,EAAS,SAEjCG,EAAc7oB,eAAkB,WACpCG,EAAQgB,KAAK,WACZ,CAAChB,IAEJ,OACE,gBAAC2lB,GAAA,EAAD,KACE,gBAACU,GAAA,EAAD,CACE3gB,MAAOxF,EAAE,iBACT6H,MAAO,gBAACqgB,GAAD,CAAgB7mB,MAAM,iBAC7BiD,QAASkkB,EACTC,UAAW,KAGb,gBAACxkB,EAAA,EAAD,CAAM2K,MAAI,EAAC1K,QAAM,GACf,gBAACqiB,GAAA,EAAD,CAAYC,QAAM,GACfzU,OAAOC,KAAKuW,GAAehc,KAAI,SAACmc,GAAD,OAC9B,gBAACjC,GAAA,EAAD,CAAS5lB,IAAK6nB,GACZ,gBAAC,GAAD,CAAQljB,MAAOkjB,GACZH,EAAcG,GAAQnc,KAAI,SAACvH,GAAD,OACzB,gBAACsP,GAAA,EAAD,CACEzT,IAAKmE,EAAK2jB,KACVpY,GAAIvL,EAAK2jB,KACTvnB,KAAM,gBAAC4D,EAAK5D,KAAN,CAAWC,MAAM,iBACvB9B,MAAOyF,EAAK3B,gBAMpBulB,MACA,gBAACnC,GAAA,EAAD,KACE,gBAAC,GAAD,CAAQjhB,MAAOxF,EAAE,kBACjB,gBAACinB,QAAD,a,4vECnCd,IAAM4B,GAAkBlpB,QACtB,kBACE,qDAKEmpB,GAAanpB,QACjB,kBACE,gDASEopB,GADL9pB,a,ozBAOC+pB,WAAa,SAACvoB,GACPA,EAAGwoB,SAAYxoB,EAAGyoB,UACrBzoB,EAAGE,iBACHF,EAAG4X,kBACHvY,KAAQgB,KAAKC,iB,EAIjBooB,gBAAkB,SAAChR,GACjB,IAAIA,EAAM8Q,UAAW9Q,EAAMiR,OAA3B,CAIA,IAAQnP,EAAuB,EAAKnY,MAAM2Q,GAAlCwH,mBACR,GAAKA,EAGO,EAAKnY,MAAM6B,SAASK,UAAUiW,GACjC3J,QAGTxQ,KAAQgB,KAAK0P,YAAgByJ,M,qQAG/B,SAAAxW,SACE,IAAQG,EAASF,KAAK5B,MAAd8B,KACAC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACRulB,EAAczlB,EAAK0lB,eAAiBzlB,GAAQC,EAClD,GAAIF,EAAK2lB,YACP,OAAO,gBAAC,GAAD,MAGT,IAAMC,EAAUH,EACd,gBAAC/O,GAAA,EAAD,KACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOqO,KAAMc,cAAgBC,UAAWtB,KACxC,gBAAC,IAAD,CAAOsB,UAAWjE,YAGpB3gB,EAEE6kB,EACJ,gBAAC,WAAD,CAAgBC,SAAU,MACxB,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEjB,KAAI,eAAUkB,IAAV,yBACJH,UAAWb,OAMnB,OACE,gBAACiB,GAAA,EAAD,CAAQtkB,MAAO1B,aAAF,EAAEA,EAAMT,KAAMmmB,QAASA,EAASG,UAAWA,GACtD,gBAACI,GAAA,EAAD,CAAiBC,QAAQ,IAAIC,QAASvmB,KAAKylB,kBAC3C,gBAACY,GAAA,EAAD,CAAiBC,QAAQ,IAAIC,QAASvmB,KAAKslB,aAC3C,gBAACe,GAAA,EAAD,CAAiBC,QAAQ,IAAIC,QAASvmB,KAAKslB,aAC1CtlB,KAAK5B,MAAMsQ,SACZ,gBAAC0W,GAAD,W,qBAhE0BnpB,a,+fAG/BkG,K,qFACuB,K,YAkEXE,iBAAkBC,YAAW+iB,K,0BC9FtCmB,GAAiBvqB,QACrB,kBACE,6CAKEwqB,GAAWxqB,QACf,kBACE,sTAKEyqB,GAAazqB,QACjB,kBACE,oOAKE0qB,GAAO1qB,QACX,kBACE,uFAKE2qB,GAAS3qB,QACb,kBACE,2FAME4qB,GAAmB,SAAnBA,iBAAoB,GAAD,IACvB7c,EADuB,EACvBA,MADuB,OAGvB,gBAAC,IAAD,CACE6C,GACE7C,EAAME,OAAO4c,aAAb,eAAoC9c,EAAME,OAAO4c,cAAiB,WAKzD,SAASC,sBACtB,OACE,gBAACC,GAAA,EAAD,KACE,gBAAC,GAAD,KACE,gBAAC,WAAD,CACEd,SACE,gBAAC/a,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,QAIJ,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAU6b,KAAK,aAAapa,GAAG,UAC/B,gBAAC,KAAD,CAAOoY,KAAK,aAAae,UAAWW,KACpC,gBAAC,KAAD,CAAO1B,KAAK,QAAQe,UAAWW,KAC/B,gBAAC,KAAD,CAAOnZ,OAAK,EAACyX,KAAK,aAAae,UAAW/Y,KAC1C,gBAAC,KAAD,CAAOO,OAAK,EAACyX,KAAK,mBAAmBe,UAAW/Y,KAChD,gBAAC,KAAD,CAAOO,OAAK,EAACyX,KAAK,UAAUe,UAAW3a,IACvC,gBAAC,KAAD,CAAOmC,OAAK,EAACyX,KAAK,WAAWe,UAAW/c,IACxC,gBAAC,KAAD,CAAOuE,OAAK,EAACyX,KAAK,SAASe,UAAWtY,KACtC,gBAAC,IAAD,CAAUF,OAAK,EAACyZ,KAAK,WAAWpa,GAAG,UACnC,gBAAC,IAAD,CAAUW,OAAK,EAACyZ,KAAK,iBAAiBpa,GAAG,kBACzC,gBAAC,KAAD,CAAOW,OAAK,EAACyX,KAAK,sBAAsBe,UAAWnc,IACnD,gBAAC,KAAD,CAAO2D,OAAK,EAACyX,KAAK,uBAAuBe,UAAWU,KACpD,gBAAC,KAAD,CAAOlZ,OAAK,EAACyX,KAAK,kBAAkBe,UAAWU,KAC/C,gBAAC,KAAD,CAAOlZ,OAAK,EAACyX,KAAI,aAAQkB,KAAQH,UAAWa,KAC5C,gBAAC,KAAD,CACErZ,OAAK,EACLyX,KAAI,eAAUkB,IAAV,yBACJH,UAAWS,KAEb,gBAAC,KAAD,CAAOjZ,OAAK,EAACyX,KAAI,eAAUkB,IAAV,SAAuBH,UAAWS,KACnD,gBAAC,KAAD,CAAOxB,KAAI,eAAUkB,KAAQH,UAAWS,KACxC,gBAAC,KAAD,CAAOjZ,OAAK,EAACyX,KAAK,UAAUe,UAAWY,KACvC,gBAAC,KAAD,CAAOpZ,OAAK,EAACyX,KAAK,gBAAgBe,UAAWY,KAC7C,gBAAC,KAAD,CAAO3B,KAAK,OAAOe,UAAWkB,MAC9B,gBAACV,GAAD,MACA,gBAAC,KAAD,CAAOR,UAAWkB,Y,kCClG9B,gJAOa5D,EAAa7T,YAAa,CACrC9P,KAAM,qBAAGrD,EAAH,EAAGA,EAAH,gBAAcA,EAAE,iBAAhB,MACNoB,KAAM,gBAAC,WAAD,MACNypB,SAAU,mBACVzX,QAAS0X,IACTnI,QAAS,0BAAGoI,EAAH,EAAGA,OAAH,OACPA,EAAOpnB,SAASK,WAAU,UAAA+mB,EAAOnnB,KAAKE,YAAZ,eAAkBf,KAAM,IAAIikB,YACxDzT,QAAS,oBAAW,IAARvT,EAAQ,EAARA,EACV+qB,IAAO5R,QAAQO,UAAU,CACvBlU,MAAOxF,EAAE,iBACT2Z,QAAS,gBAAC,IAAD,CAAQ/T,SAAUmlB,IAAO5R,QAAQS,sBAKnCoR,EAAkB,CAAChE,I,ksGCE1BiE,EADLhsB,a,80BAcCisB,gBAAkBvrB,c,EAOlBkX,e,4DAAiB,iBAAOsU,GAAP,yFACf,EAAKC,YAAa,EAClB,EAAKC,KAAOF,EAAM,GAFH,iD,wDAKjBG,WAAa,WACX,EAAKC,aAAc,EAGnBC,EAAa,EAAKC,c,EAGpBA,Y,2CAAc,mIACNC,EADM,UACG,EAAKR,gBAAgB3qB,eADxB,aACG,EAA8BorB,WAC7ClV,IAAUiV,EAAQ,yBACZE,EAAYC,YAAcH,EAAOI,aAH3B,kBAMeC,YAAcH,EAAW,CAChDI,UAAW,IACXC,SAAU,MARF,cAMJC,EANI,gBAUeC,YAAWD,EAAY,CAC9C7oB,KAAM,EAAKgoB,KAAKhoB,KAChB+oB,QAAQ,IAZA,OAUJC,EAVI,OAcV,EAAKvqB,MAAMwqB,UAAUD,EAAWrZ,KAdtB,kDAgBV,EAAKlR,MAAMyqB,QAAQ,KAAI9W,SAhBb,yBAkBV,EAAK8V,aAAc,EACnB,EAAKH,YAAa,EAnBR,oF,EAuBdoB,YAAc,WACZ,EAAKjB,aAAc,EACnB,EAAKH,YAAa,G,EAGpBqB,WAAa,SAACtU,GACZ,IAAM7V,EAAS6V,EAAM7V,OAEjBA,aAAkBoqB,mBACpB,EAAKC,KAAOC,WAAWtqB,EAAOlD,S,4MAIlC,SAAAytB,iBACE,MAA2BnpB,KAAK5B,MAAxB2Q,EAAR,EAAQA,GAAIqa,EAAZ,EAAYA,WACZ,OACE,gBAAC,IAAD,CAAOpnB,QAAM,EAACD,eAAgB/B,KAAK8oB,YAAahnB,MAAM,IACpD,gBAAC,IAAD,CAAMoJ,MAAI,EAAC1K,QAAM,EAACiE,MAAM,SAASye,QAAQ,UACtCljB,KAAK6nB,aAAe,gBAAC,IAAD,MACrB,gBAACwB,EAAD,KACE,gBAAC,IAAD,CACE9rB,IAAKyC,KAAKwnB,gBACVrjB,MAAOnE,KAAK2nB,KACZjF,MAAO,IACPC,OAAQ,IACR2G,OAAQ,GACRC,aAAcvpB,KAAK5B,MAAMmrB,aACzB5rB,MACe,UAAboR,EAAG7S,MAAoB,CAAC,IAAK,IAAK,IAAK,IAAO,CAAC,EAAG,EAAG,EAAG,IAE1DstB,MAAOxpB,KAAKipB,KACZQ,OAAQ,KAGZ,gBAACC,EAAD,CACEjsB,KAAK,QACLksB,IAAI,MACJC,IAAI,IACJC,KAAK,OACLhM,aAAa,IACbliB,SAAUqE,KAAK+oB,aAEjB,gBAACe,EAAD,CAAYlpB,QAASZ,KAAK4nB,WAAYhjB,SAAU5E,KAAK6nB,aAClD7nB,KAAK6nB,YAAc,aAAeuB,O,oBAO7C,SAAArpB,SAAS,WACP,OAAIC,KAAK0nB,WACA1nB,KAAKmpB,iBAIZ,gBAAC,IAAD,CACEhZ,OAAO,wBACPgD,eAAgBnT,KAAKmT,iBAEpB,gBAAGI,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,sBAASD,IACP,wBAAWC,KACV,EAAKpV,MAAMsQ,iB,aAtHEzS,a,EAejB8tB,aAAe,CACpBX,WAAY,aACZG,aAAc,K,2DAhBfpnB,K,qFACa,K,sDAEbA,K,qFACY,K,gDAEZA,K,qFACM,K,gDAENA,K,uEAoHGknB,EAAwBjuB,kBAAOmF,KAAV,yFAAGnF,CAAH,yBAIrBsuB,EAAatuB,UAAOwY,MAAV,8EAAGxY,CAAH,wSAgBE,SAACgD,GAAD,OAAWA,EAAMlC,MAAMyO,QASnCmf,EAAa1uB,kBAAOuG,KAAV,8EAAGvG,CAAH,kBAIDkH,gBAAWilB,K,qECvL1B,IAEMzF,EAFN,UAEiB1mB,QAAO4uB,IAAV,8DAAG5uB,CAAH,gGACH,SAACgD,GAAD,OACPA,EAAMskB,MAAN,UAAiBtkB,EAAMskB,MAAvB,MAAmCtkB,EAAMmG,MAAQ,UACzC,SAACnG,GAAD,OACRA,EAAMukB,OAAN,UAAkBvkB,EAAMukB,OAAxB,MAAqCvkB,EAAMmG,MAAQ,UAEjC,SAACnG,GAAD,OAAWA,EAAMlC,MAAMmC,WAK9ByjB,O,qaCbXmI,EAAS,SACTC,EAAmB,mBAehB,SAASC,wBACd,OAAOD,EAGF,SAASE,iBACd,OAAQxf,SAASqf,G,+qIAlBf,WAAYrf,UACdqf,EAAS,SACTC,EAAmB,oBACV,cAAetf,UAExBqf,EAAS,YACTC,EAAmB,uBACV,iBAAkBtf,WAE3Bqf,EAAS,eACTC,EAAmB,0BCOd,IAAMG,EAAqBpuB,gBAChC,MAMI+qB,EADLzrB,a,0oBAmBC+uB,gBAAkB,WAAM,MAClB,YAAKC,cAAL,SAAaC,cAAgBJ,mBAG/B,EAAKG,OAAOE,QACZ,EAAKF,OAAS,KACd,EAAKG,qB,EAITA,iBAAmB,WACjB,EAAKH,OAASI,IAAG7a,OAAOhG,SAAS8gB,OAAQ,CACvC3F,KAAM,YACN4F,WAAY,CAAC,aACbC,kBAAmB,IACnBC,qBAAsB,MAExBhY,IAAU,EAAKwX,OAAQ,4BAEvB,EAAKA,OAAO3E,eAAgB,EAC5B,MAaI,EAAKxnB,MAZP8B,EADF,EACEA,KACAV,EAFF,EAEEA,OACA0J,EAHF,EAGEA,UACAT,EAJF,EAIEA,YACA3J,EALF,EAKEA,OACAksB,EANF,EAMEA,KACArK,EAPF,EAOEA,MACAtb,EARF,EAQEA,YACApF,EATF,EASEA,SACAgrB,EAVF,EAUEA,SACAC,EAXF,EAWEA,MACAC,EAZF,EAYEA,eAEGjrB,EAAKkrB,QAIV,EAAKb,OAAOc,GAAG,WAAW,WAAM,MAI9B,YAAKd,cAAL,SAAae,KAAK,iBAAkB,CAClCF,MAAOlrB,EAAKkrB,WAIhB,EAAKb,OAAOc,GAAG,cAAc,WAG3BJ,EAASM,WAKX,EAAKhB,OAAOc,GAAG,qBAAqB,WACjB,MAAb,EAAKd,SACP,EAAKA,OAAOI,GAAGa,KAAKX,WAAa3qB,SAAA,UAAAA,EAAME,YAAN,SAAYqrB,OACzC,CAAC,aACD,CAAC,YAAa,eAItB,EAAKlB,OAAOc,GAAG,iBAAiB,WAC1B,EAAKd,SACP,EAAKA,OAAO3E,eAAgB,MAIhC,EAAK2E,OAAOc,GAAG,gBAAgB,SAACzrB,GAO9B,MANI,EAAK2qB,SACP,EAAKA,OAAO3E,eAAgB,GAE9BpmB,EAAOC,UAAUG,EAAImS,QAAS,CAC5BtU,KAAM,UAEFmC,KAGR,EAAK2qB,OAAOc,GAAG,WAAf,4DAA2B,kBAAO5W,GAAP,oIACrBA,EAAMiX,YADe,8CAEUjX,EAAMiX,aAFhB,4DAEZC,EAFY,QAGfjZ,EAAaiZ,EAAmBtsB,GAClCuL,EAAW1B,EAAUX,IAAImK,IAAe,GAExB,qBAAhB+B,EAAMA,MANW,wBAOb7J,EAAW1B,EAAUX,IAAImK,MAG7B9H,EAASghB,UAAYD,EAAmBE,WAG1C5rB,EAAS6rB,OAAOpZ,GAbG,mCAoBb5Q,GApBa,EAoBQ8I,GAArB9I,MApBa,EAoBN+pB,YAEGF,EAAmBE,UAtBhB,mFA4BF3iB,EAAU/H,MAAMuR,EAAY,CAC3CqZ,OAAO,IA7BU,QA4BnBnhB,EA5BmB,6DAgCI,MAAnB,KAAIohB,YAAyC,MAAnB,KAAIA,WAhCf,wBAiCjB9iB,EAAU4iB,OAAOpZ,GAjCA,2BAwCjB5Q,IAAU8I,EAAS9I,QAChB2S,EAAMwX,gBACTxX,EAAMwX,cAAgB,IAGP,IAAKxX,EAAMwX,cAAe,CAEzC5sB,GAAIuL,EAAS9O,gBAIb2Y,EAAMwX,cAAc7uB,KAAK,CAEvBiC,GAAIuL,EAAS9O,gBArDE,mJA4DrB2Y,EAAMwX,cA5De,8CA6DYxX,EAAMwX,eA7DlB,8JA6DZC,EA7DY,QA8DfpwB,EAAeowB,EAAqB7sB,GACpCD,EAAaqJ,EAAYF,IAAIzM,GAEf,uBAAhB2Y,EAAMA,MAjEW,wBAkEfrV,IACFA,EAAWwsB,UAAYM,EAAqBL,WAGrB3iB,EAAUxB,aAAa5L,GAC/BqwB,SAAQ,SAAC7K,GACxBA,EAAIsK,UAAYM,EAAqBL,UACrC5rB,EAAS6rB,OAAOxK,EAAIjiB,OAEtB6J,EAAUkjB,0BAA0BtwB,GACpCuJ,EAAYgnB,4BAA4BvwB,GACxC2M,EAAYqjB,OAAOhwB,GACnBmE,EAAS6rB,OAAOhwB,GA9EG,0CAqFjBsD,aAAA,EAAAA,EAAYysB,aAAcK,EAAqBL,UArF9B,yFA0FbpjB,EAAYtH,MAAMrF,EAAc,CACpCiwB,OAAO,IA3FU,8DA8FI,MAAnB,KAAIC,YAAyC,MAAnB,KAAIA,WA9Ff,wBA+FjB9iB,EAAUkjB,0BAA0BtwB,GACpCuJ,EAAYgnB,4BAA4BvwB,GACxC2M,EAAYqjB,OAAOhwB,GACnBmE,EAAS6rB,OAAOhwB,GAlGC,yeAyGrB2Y,EAAM6X,SAzGe,8CA0GO7X,EAAM6X,UA1Gb,8DA0GZC,EA1GY,QA2GfjtB,EAAUitB,EAAgBltB,GAC1BJ,EAAQH,EAAOyJ,IAAIjJ,IAAY,GAIfL,EAAd4sB,YAEUU,EAAgBV,UAlHb,mFAuHb/sB,EAAOqC,MAAM7B,EAAS,CAC1BysB,OAAO,IAxHU,2DA2HI,MAAnB,KAAIC,YAAyC,MAAnB,KAAIA,YAChCltB,EAAOgtB,OAAOxsB,GA5HG,qJAkIrBmV,EAAM+X,QAlIe,kCAmIjBtsB,EAAKiB,QAnIY,mHAA3B,kCAAAnB,KAAA,gBAuIA,EAAKuqB,OAAOc,GAAG,eAAe,SAAC5W,GAC7BuW,EAAKyB,IAAIhY,MAGX,EAAK8V,OAAOc,GAAG,eAAe,SAAC5W,GAC7BuW,EAAKyB,IAAIhY,MAGX,EAAK8V,OAAOc,GAAG,eAAe,SAAC5W,GAC7BuW,EAAKc,OAAOrX,EAAMiY,YAGpB,EAAKnC,OAAOc,GAAG,gBAAgB,SAAC5W,GAC9BkM,EAAM8L,IAAIhY,MAGZ,EAAK8V,OAAOc,GAAG,gBAAgB,SAAC5W,GAC9BkM,EAAM8L,IAAIhY,MAGZ,EAAK8V,OAAOc,GAAG,gBAAgB,SAAC5W,GAC9BkM,EAAMmL,OAAOrX,EAAMiY,YAGrB,EAAKnC,OAAOc,GAAG,8BAA8B,SAAC5W,GAC5CvL,EAAU4iB,OAAOrX,EAAM/B,eAKzB,EAAK6X,OAAOc,GAAG,wBAAwB,SAAC5W,GAClCvU,EAAKC,MAAQsU,EAAMnP,SAAWpF,EAAKC,KAAKd,IAC1CoJ,EAAYtH,MAAMsT,EAAM3Y,aAAc,CACpCiwB,OAAO,IAKX7iB,EAAUxB,aAAa+M,EAAM3Y,cAAcqwB,SAAQ,SAACvhB,GAClD3K,EAAS6rB,OAAOlhB,EAASvL,UAO7B,EAAKkrB,OAAOc,GAAG,2BAA2B,SAAC5W,GACrCvU,EAAKC,MAAQsU,EAAMnP,SAAWpF,EAAKC,KAAKd,IAC1CoJ,EAAYqjB,OAAOrX,EAAM3Y,cACzBuJ,EAAYgnB,4BAA4B5X,EAAM3Y,cAC9CoN,EAAUkjB,0BAA0B3X,EAAM3Y,eAE1CuJ,EAAYymB,OAAZ,UAAsBrX,EAAMnP,OAA5B,YAAsCmP,EAAM3Y,kBAIhD,EAAKyuB,OAAOc,GAAG,4BAA4B,SAAC5W,GAC1C,IAAMrV,EAAaqJ,EAAYF,IAAIkM,EAAM3Y,cAErCsD,GACFA,EAAWutB,YAAYlY,EAAM0D,UAIjC,EAAKoS,OAAOc,GAAG,wBAAf,4DAAwC,kBAAO5W,GAAP,iGAChCtU,EAAOD,EAAKC,OAEhBgrB,EAAesB,IAAf,+BAAwBhY,GAAxB,IAA+BtU,UAHK,kDAAxC,kCAAAH,KAAA,gBAOA,EAAKuqB,OAAOc,GAAG,wBAAf,4DAAwC,kBAAO5W,GAAP,iGAChCtU,EAAOD,EAAKC,OAEhBgrB,EAAesB,IAAf,+BAAwBhY,GAAxB,IAA+BtU,UAHK,kDAAxC,kCAAAH,KAAA,gBASA,EAAKuqB,OAAOc,GAAG,QAAQ,SAAC5W,GAAe,MACrC,YAAK8V,cAAL,SAAae,KAAK,OAAQ7W,MAK5B,EAAK8V,OAAOc,GAAG,SAAS,SAAC5W,GAAe,MACtC,YAAK8V,cAAL,SAAae,KAAK,QAAS7W,MAK7B,EAAK8V,OAAOc,GAAG,qBAAqB,SAAC5W,GACnCwW,EAAS2B,KAAKnY,EAAM/B,WAAY+B,EAAMoY,QAASpY,EAAMqY,eAKvD,EAAKvC,OAAOc,GAAG,aAAa,SAAC5W,GAC3BwW,EAAS8B,MAAMtY,EAAM/B,WAAY+B,EAAMnP,OAAQmP,EAAMN,WACrD+W,EAAM6B,MAAMtY,EAAM/B,WAAY+B,EAAMnP,WAKtC,EAAKilB,OAAOc,GAAG,cAAc,SAAC5W,GAC5BwW,EAAS+B,MAAMvY,EAAM/B,WAAY+B,EAAMnP,QACvC4lB,EAAM6B,MAAMtY,EAAM/B,WAAY+B,EAAMnP,WAMtC,EAAKilB,OAAOc,GAAG,iBAAiB,SAAC5W,GAC/BwW,EAAS8B,MAAMtY,EAAM/B,WAAY+B,EAAMnP,OAAQmP,EAAMN,gB,kNAtVzD,SAAA8Y,oBACEjtB,KAAK0qB,mBACL9f,SAASsiB,iBAAiB/C,wBAAyBnqB,KAAKsqB,mB,kCAG1D,SAAA6C,uBACMntB,KAAKuqB,SACPvqB,KAAKuqB,OAAO3E,eAAgB,EAC5B5lB,KAAKuqB,OAAO6C,cAGdxiB,SAASyiB,oBAAoBlD,wBAAyBnqB,KAAKsqB,mB,oBA+U7D,SAAAvqB,SACE,OACE,gBAACsqB,EAAcnJ,SAAf,CAAwBxlB,MAAOsE,KAAKuqB,QACjCvqB,KAAK5B,MAAMsQ,c,gBAjWSzS,a,2dAC1BkG,K,uEAsWYG,gBAAW0kB,I,ogFC3X1B,IAAIsG,GAAgB,EAEL,SAAS3a,kBACtB7W,EACA4W,GAKA,IAAQxJ,EAAc7C,cAAd6C,UACAzJ,EAAc6G,cAAd7G,UACR,iBAAoCxD,YAAe,GAAnD,GAAO4W,EAAP,KAAoB0a,EAApB,KACQjxB,EAAMC,cAAND,EACFF,EAAUC,cA+ChB,MAAO,CACLuW,YA/CkB3W,cAAA,2CAClB,+IAAOwrB,EAAP,+BAAe,IACT6F,EADN,oDAOO7F,EAAM5f,OAPb,oDAWE0lB,GAAa,GACbD,GAAgB,EAZlB,SAeQE,EAAM1xB,EACJ2xB,EAA4B,IAAjBhG,EAAM5f,QAEnB6K,GAAe5W,EAlBvB,kCAmB6BoN,EAAU/H,MAAMuR,GAnB7C,QAmBY9H,EAnBZ,OAoBMmI,IAAUnI,EAAU,0BACpB4iB,EAAM5iB,EAAS9O,aArBrB,qCAwBuB2rB,GAxBvB,kEAwBeE,EAxBf,kBAyBwBze,EAAUwkB,OAAO/F,EAAMjV,EAAY8a,EAAK,CACxDG,SAAS,IA1BjB,QAyBYrM,EAzBZ,OA6BUmM,GACFrxB,EAAQgB,KAAKkkB,EAAIhS,KA9BzB,mMAkCI7P,EAAU,GAAD,OAAInD,EAAE,yBAAN,aAAmC,KAAIyV,SAAW,CACzDtU,KAAM,UAnCZ,yBAsCI8vB,GAAa,GACbD,GAAgB,EAvCpB,iGA0CA,CAAChxB,EAAG4M,EAAW9M,EAASqD,EAAW3D,EAAc4W,IAKjDG,iB,kCCrEJ,IAEMzJ,EAFN,UAEgBhO,QAAOwyB,GAAV,8DAAGxyB,CAAH,0DAIT,SAACgD,GAAD,OAAYA,EAAMyvB,SAAW,sBAAwB,MAG1CzkB,O,+SCFf,IAAMzI,EAA8B1E,cAClC,SAACmC,EAAcb,GACb,OAAO,gBAACoE,EAAD,YAAYvD,EAAZ,CAAmBb,IAAKA,QAI7BoE,EAASvG,UAAO+hB,OAAV,wEAAG/hB,CAAH,oHAID,SAACgD,GAAD,OAAWA,EAAMlC,MAAM4xB,QAOnBntB,O,8iDCmEApF,iBA1Ef,SAAS0G,SAAT,GAAuC,IAAnBC,EAAmB,EAAnBA,SACVpD,EAAWuH,cAAXvH,OACAxC,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UACR,iBAAwBxD,aAAxB,GAAO0D,EAAP,KAAaouB,EAAb,KACA,iBAAgC9xB,YAAe,GAA/C,GAAOqV,EAAP,KAAiBC,EAAjB,KACA,iBAA0BtV,aAA1B,GAAOgD,EAAP,KAAc+uB,EAAd,KAEMnc,EAAY,iB,oRAAA,0BAAG,iBAAO9U,GAAP,sGACnBA,EAAGE,iBACHsU,GAAY,GAENtS,EAAQ,IAAIgvB,IAChB,CACEtuB,KAAMA,GAERb,GARiB,cAYjBkvB,EAZiB,SAYF/uB,EAAMkI,OAZJ,oFAcjB1H,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAfS,yBAkBjB8T,GAAY,GAlBK,mFAAH,gBAAZM,aAAY,sCA0BlB,OACE,gCACE,wBAAM3P,SAAU2P,GACd,gBAAC,IAAD,CAAMpU,KAAK,aACT,gBAAC,IAAD,uJAMF,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEA,KAAK,OACL5B,MAAM,OACNF,SAlBe,SAAnBuyB,iBAAoBnxB,GACxBgxB,EAAQhxB,EAAG6B,OAAOlD,QAkBVA,MAAOiE,EACPwuB,UAAQ,EACR1oB,WAAS,EACT5E,MAAI,KAGR,gBAAC,IAAD,CAAMpD,KAAK,aACT,gBAAC,IAAD,yDAGF,gBAAC,IAAD,CAAQA,KAAK,SAASmH,SAAU0M,IAAa3R,GAC1C2R,EAAW,GAAH,OAAMhV,EAAE,YAAR,KAAyBA,EAAE,cAGxC,gBAAC,IAAD,CACEwF,MAAOxF,EAAE,iBACTyF,eAAgBG,EAChBF,SAAU/C,GAETA,GAAS,gBAAC,IAAD,CAAcA,MAAOA,U,kCCrFvC,wCAgDeiN,IAtCI,SAAbA,WAAc,GAAoC,IAAlCH,EAAkC,EAAlCA,WAAYrD,EAAsB,EAAtBA,SACxBpM,EAAMC,cAAND,EACFqI,EAAU1I,WACd,iBAAM,CACJ,CACEkB,IAAK,GACLtB,MAAOS,EAAE,aAEX,CACEa,IAAK,MACLtB,MAAOS,EAAE,aAEX,CACEa,IAAK,OACLtB,MAAOS,EAAE,cAEX,CACEa,IAAK,QACLtB,MAAOS,EAAE,eAEX,CACEa,IAAK,OACLtB,MAAOS,EAAE,iBAGb,CAACA,IAGH,OACE,gBAAC,IAAD,CACEqI,QAASA,EACTmE,UAAWiD,EACXrD,SAAUA,EACVK,aAAczM,EAAE,gB,iKCzCP,SAAS8xB,WACtB,OAAO,IAAI7iB,gBAAgBxB,cAAcO,U,uZCoB3C,IAmDM+jB,EAAOjzB,kBAAOsF,KAAV,sEAAGtF,CAAH,gGAMC,SAACgD,GAAD,OAAWA,EAAMlC,MAAMkhB,gBAG5BkR,EAAgBlzB,UAAOgH,IAAV,+EAAGhH,CAAH,4DAIPizB,GACC,SAACjwB,GAAD,OAAWA,EAAMlC,MAAMqyB,WAI9BC,EAAepzB,kBAAOuG,KAAV,8EAAGvG,CAAH,oJAUdqzB,KAMEhX,EAAUrc,UAAOgH,IAAV,yEAAGhH,CAAH,uBAIEszB,IAzFO,SAAhBA,cAAiB,GAOV,IANX/pB,EAMW,EANXA,QAMW,IALXmE,iBAKW,MALC,GAKD,MAJXC,oBAIW,MAJI,iBAIJ,MAHXC,sBAGW,MAHM,GAGN,EAFX2lB,EAEW,EAFXA,UACAjmB,EACW,EADXA,SAEMjG,EAAOC,YAAa,CACxBC,OAAO,IAEHisB,EACJjqB,EAAQkqB,MAAK,SAACC,GAAD,OAAYA,EAAO3xB,MAAQ2L,MAAcnE,EAAQ,GAE1DoqB,EAAgBH,EAAW,GAAH,OAAM5lB,EAAN,YAAwB4lB,EAAS/yB,OAAU,GAEzE,OACE,gBAAC4b,EAAD,KACE,gBAAC,IAAehV,GACb,SAACrE,GAAD,OACC,gBAACowB,EAAD,YAAkBpwB,EAAlB,CAAyBuwB,UAAWA,EAAW/sB,SAAO,EAACotB,YAAU,IAC9DlmB,EAAYimB,EAAgBhmB,MAInC,gBAAC,IAAD,UAAalG,aAAYkG,GAAkBtG,GACxCkC,EAAQkE,KAAI,SAACimB,GAAD,OACX,gBAAC,IAAD,UACE3xB,IAAK2xB,EAAO3xB,IACZyD,QAAS,mBACP8H,EAASomB,EAAO3xB,KAChBsF,EAAKyM,QAEP0f,SAAUE,EAAO3xB,MAAQ2L,GACrBrG,GAEHqsB,EAAOzmB,KACN,gBAACimB,EAAD,KACGQ,EAAOjzB,MACR,gBAACwyB,EAAD,KAAOS,EAAOzmB,OAGhBymB,EAAOjzB,c,smDCTNN,mBA1Cf,SAAS0zB,iBAAT,GAA2D,IAA/B7vB,EAA+B,EAA/BA,WAAY8C,EAAmB,EAAnBA,SACtC,iBAAkCjG,YAAe,GAAjD,GAAOizB,EAAP,KAAkBC,EAAlB,KACQ7yB,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UAEFoS,EAAe5V,cAAA,iB,oRAAA,0BACnB,iBAAOc,GAAP,gGACEA,EAAGE,iBACHkyB,GAAa,GAFf,SAGQ/vB,EAAWgwB,SAHnB,OAKED,GAAa,GACb1vB,EACEnD,EAAE,kEAEJ4F,IATF,iDADmB,sDAYnB,CAAC9C,EAAY8C,EAAUzC,EAAWnD,IAGpC,OACE,gBAACiE,EAAA,EAAD,CAAMC,QAAM,GACV,wBAAM0B,SAAU2P,GACd,gBAACnR,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,kNACTC,OAAQ,CACNT,eAAgBpI,EAAWO,MAE7BuI,WAAY,CACVC,GAAI,mCAIV,gBAACxG,EAAA,EAAD,CAAQlE,KAAK,SAASmH,SAAUsqB,EAAWhrB,SAAO,GAC/CgrB,EAAY,GAAH,OAAM5yB,EAAE,aAAR,KAA0BA,EAAE,2B,6NCmBjCf,mBApDf,SAAS8zB,uBAAT,GAAiE,IAA/BjwB,EAA+B,EAA/BA,WAAY8C,EAAmB,EAAnBA,SACtC9B,EAAOoM,cACLuC,EAAO1I,cAAP0I,GACF3S,EAAUC,cACRC,EAAMC,cAAND,EAEFuV,EAAY,iB,wVAAA,0BAAG,yHACb4b,EAAWruB,EAAWC,KAAO0P,EAAGwH,mBADnB,SAEbnX,EAAW0H,SAFE,OAGnB5E,IACIurB,GACFrxB,EAAQgB,KAAK4lB,eALI,iDAAH,gBAAZnR,eAAY,mCASlB,OACE,gBAACyd,EAAA,EAAD,CACEptB,SAAU2P,EACVuX,WAAY9sB,EAAE,qBACdizB,WAAU,UAAKjzB,EAAE,YAAP,KACVkzB,QAAM,GAEN,gCACE,gBAAC9uB,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,yKACTC,OAAQ,CACNT,eAAgBpI,EAAWO,MAE7BuI,WAAY,CACVC,GAAI,mCAIT/H,EAAKqvB,sBAAwBrwB,EAAWC,GACvC,gBAACqB,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,8HACTC,OAAQ,CACNT,eAAgBpI,EAAWO,MAE7BuI,WAAY,CACVC,GAAI,mCAIR,U,saCuRG5M,iBA1Sf,SAAS2b,eAAT,GAOU,IANR9X,EAMQ,EANRA,WACAvD,EAKQ,EALRA,MAKQ,IAJR8G,aAIQ,SAHRmM,EAGQ,EAHRA,UACAqI,EAEQ,EAFRA,OACAC,EACQ,EADRA,QAEM3U,EAAOC,YAAa,CACxBC,QACAmM,cAEI1O,EAAOoM,cACb,EAA+BnG,cAAvB6C,EAAR,EAAQA,UAAWuM,EAAnB,EAAmBA,QACXhW,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EACFF,EAAUC,cACVsrB,EAAO1rB,SAA+B,MAEtCyzB,EAAoBzzB,eAAkB,WAC1CwZ,EAAQO,UAAU,CAChBlU,MAAOxF,EAAE,0BACT2Z,QAAS,gBAAC9P,EAAA,EAAD,CAAuB/G,WAAYA,QAE7C,CAACA,EAAYqW,EAASnZ,IAEnBqzB,EAAa1zB,eAAkB,WACnCwZ,EAAQO,UAAU,CAChBlU,MAAOxF,EAAE,mBACT2Z,QACE,gBAAC2Z,EAAA,EAAD,CACE9zB,aAAcsD,EAAWC,GACzB6C,SAAUuT,EAAQS,qBAIvB,CAAC9W,EAAWC,GAAIoW,EAASnZ,IAEtBuzB,EAAe5zB,eAAkB,WACrCwZ,EAAQO,UAAU,CAChBlU,MAAOxF,EAAE,qBACT2Z,QACE,gBAAC,EAAD,CACE7W,WAAYA,EACZ8C,SAAUuT,EAAQS,qBAIvB,CAAC9W,EAAYqW,EAASnZ,IAEnBwzB,EAAoB7zB,eACxB,SAACc,GACCA,EAAGE,iBACHb,EAAQgB,KAAK0P,YAAgB1N,EAAWC,OAE1C,CAACjD,EAASgD,EAAWC,KAGjBsV,EAAkB1Y,eAAkB,SAACc,GACzCA,EAAG4X,oBACF,IAEGob,EAAuB9zB,eAC3B,SAACc,GACCA,EAAGE,iBACHF,EAAG4X,kBAGCgT,EAAK9qB,SACP8qB,EAAK9qB,QAAQmzB,UAGjB,CAACrI,IAGGsI,EAAmBh0B,cAAA,iB,gUAAA,0BACvB,iBAAOc,GAAP,uGACQ0qB,EAAQyI,YAAqBnzB,IAIxB8K,OALb,iEAUU8f,EAAOF,EAAM,GAVvB,SAW2Bve,EAAUwkB,OAAO/F,EAAM,KAAMvoB,EAAWC,GAAI,CACjEsuB,SAAS,IAZf,OAWU/iB,EAXV,OAcIxO,EAAQgB,KAAKwN,EAAS0E,KAd1B,wDAgBI7P,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAjBZ,qEADuB,sDAuBvB,CAACrB,EAASqD,EAAWL,EAAWC,GAAI6J,IAGhCinB,EAAmBl0B,eACvB,SAACod,GAEC,OADA5W,EAAKyM,OACE9P,EAAW+H,KAAK,CACrBkG,KAAM,CACJgM,QACA+W,UAAW,WAIjB,CAAChxB,EAAYqD,IAGT4tB,EAAep0B,eAAkB,WACrCwZ,EAAQO,UAAU,CAChB2L,YAAY,EACZ7f,MAAOxF,EAAE,qBACT2Z,QACE,gBAAC,EAAD,CACE7W,WAAYA,EACZ8C,SAAUuT,EAAQS,qBAIvB,CAACT,EAASnZ,EAAG8C,IAEVkxB,EAAar0B,eACjB,SAACc,GACCA,EAAGE,iBACHF,EAAG4X,kBACHvV,EAAW0gB,SAEb,CAAC1gB,IAGGmxB,EAAet0B,eACnB,SAACc,GACCA,EAAGE,iBACHF,EAAG4X,kBACHvV,EAAWoxB,WAEb,CAACpxB,IAGGqxB,EAA6C,UAA1BrxB,EAAWiO,KAAKgM,MACnChZ,GAAMoM,YAAUrN,EAAWC,IAC3BqxB,GAAgBjkB,YAAUrM,EAAKf,IAC/B4B,GAAoBhF,WACxB,iBAAM,CACJ,CACEwB,KAAM,SACNqE,MAAOxF,EAAE,UACTsE,QAAS2vB,EACTtR,QAAS7f,EAAWuxB,aAAetwB,GAAImwB,OACvC9yB,KAAM,gBAAC,gBAAD,OAER,CACED,KAAM,SACNqE,MAAOxF,EAAE,QACTsE,QAAS0vB,EACTrR,SAAU7f,EAAWuxB,aAAetwB,GAAIyf,KACxCpiB,KAAM,gBAAC,cAAD,OAER,CACED,KAAM,aAER,CACEA,KAAM,SACNqE,MAAOxF,EAAE,gBACT2iB,QAAS5e,GAAIuM,OACbhM,QAASkvB,EACTpyB,KAAM,gBAAC,kBAAD,OAER,CACED,KAAM,SACNqE,MAAOxF,EAAE,mBACT2iB,QAAS5e,GAAIuM,OACbhM,QAASmvB,EACTryB,KAAM,gBAAC,aAAD,OAER,CACED,KAAM,aAER,CACEA,KAAM,UACNqE,MAAOxF,EAAE,mBACT2iB,QAAS5e,GAAIuM,OACblP,KAAM+yB,EACJ,gBAAC,uBAAD,CAAsB9yB,MAAM,iBAE5B,gBAAC,iBAAD,CAAgBA,MAAM,iBAExBsD,MAAO,CACL,CACExD,KAAM,SACNqE,MAAOxF,EAAE,qBACTsE,QAAS,0BAAMuvB,EAAiB,UAChCvB,SAAU6B,GAEZ,CACEhzB,KAAM,SACNqE,MAAOxF,EAAE,eACTsE,QAAS,0BAAMuvB,EAAiB,UAChCvB,UAAW6B,KAIjB,CACEhzB,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,QAAP,KACL2iB,QAAS5e,GAAIuM,OACbhM,QAAS+uB,EACTjyB,KAAM,gBAAC,WAAD,OAER,CACED,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,eAAP,KACL2iB,QAAS5e,GAAIuM,OACbhM,QAAS8uB,EACThyB,KAAM,gBAAC,cAAD,OAER,CACED,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,UAAP,KACL2iB,WAAY7f,IAAcsxB,GAActB,QACxCxuB,QAASivB,EACTnyB,KAAM,gBAAC,aAAD,OAER,CACED,KAAM,aAER,CACEA,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,UAAP,KACL0G,WAAW,EACXic,WAAY7f,IAAciB,GAAIyG,QAC9BlG,QAASyvB,EACT3yB,KAAM,gBAAC,YAAD,UAGV,CACEpB,EACAi0B,EACAnxB,EACAiB,GAAImwB,OACJnwB,GAAIyf,KACJzf,GAAIuM,OACJvM,GAAIyG,OACJwpB,EACAR,EACAC,EACAU,EACAd,EACAD,EACAgB,GAActB,OACdS,EACAQ,EACAF,IAIJ,OAAKlvB,GAAM4G,OAKT,gCACE,gBAAC+oB,EAAA,EAAD,KACE,6BACGt0B,EAAE,mBACH,yBACEmB,KAAK,OACLF,IAAKoqB,EACLhsB,SAAUs0B,EACVrvB,QAAS+T,EACTxE,OAAQjH,EAAU+J,gBAAgBC,KAAK,MACvCQ,UAAW,MAIhB7X,EACC,gBAACmR,EAAA,EAAevK,EAAO5G,GAEvB,gBAAC+G,EAAA,EAAD,UAAoBC,aAAYvG,EAAE,cAAkBmG,IAEtD,gBAACK,EAAA,EAAD,YACML,EADN,CAEE0U,OAAQA,EACRC,QAASA,EACTvU,aAAYvG,EAAE,gBAEd,gBAACyG,EAAA,EAAD,YAAcN,EAAd,CAAoBxB,MAAOA,QA7BxB,S,40BC7QI1F,I,QAAAA,eAzBf,SAASs1B,gBAAT,GAA8C,IAAnBruB,EAAmB,EAAnBA,SACjBlG,EAAMC,cAAND,EACFmG,EAAOC,YAAa,CACxBC,OAAO,IAET,OACE,gCACE,gBAACC,EAAA,EAAD,UAAoBC,aAAYvG,EAAE,cAAkBmG,IACpD,gBAACK,EAAA,EAAD,YAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,0BACnC,gBAACyG,EAAA,EAAD,YACMN,EADN,CAEExB,MAAO,CACL,CACExD,KAAM,SACNuF,WAAW,EACXlB,MAAOxF,EAAE,UACTsE,QAAS4B,YCoBRsuB,EAhCa,SAAtBA,oBAAuB,GAAqC,IAAnC3wB,EAAmC,EAAnCA,KAAMqC,EAA6B,EAA7BA,SAAUe,EAAmB,EAAnBA,MAC7C,OACE,gBAAC,IAAD,CACEzB,MAAO3B,EAAKR,KACZ+D,SACE,gCACGvD,EAAKwD,aACJ,0CACS,gBAACE,EAAA,EAAD,CAAMC,SAAU3D,EAAKwD,eAD9B,QAIA,kBAEDxD,EAAK4D,WAAa,gBAACC,EAAA,EAAD,gBAClB7D,EAAK8D,SAAW,gBAACD,EAAA,EAAD,CAAOE,QAAS/D,EAAK8D,SAArB,UAGrBE,MAAO,gBAACC,EAAA,EAAD,CAAQC,IAAKlE,EAAKmE,UAAWC,KAAM,KAC1CC,QACE,gBAACjE,EAAA,EAAD,CAAMkE,MAAM,UACTjC,GAAY,gBAAC,EAAD,CAAiBA,SAAUA,IACvCe,GACC,gBAAC5B,EAAA,EAAD,CAAQf,QAAS2C,EAAO3B,SAAO,GAA/B,W,6vFCZNmvB,EADLx1B,a,6tBAQCyJ,sBAAwB,WACtB,EAAKC,iBAAkB,G,EAGzBC,uBAAyB,WACvB,EAAKD,iBAAkB,G,EAGzBvG,aAAe,SAAC3B,GACd,EAAK4B,MAAQ5B,EAAG6B,OAAOlD,MACvB,EAAKmD,kB,EAGPA,eAAiB,KAAS,WACxB,EAAKT,MAAM+G,MAAMpG,UAAU,CACzBJ,MAAO,EAAKA,UAEb,K,EAEHyG,c,4DAAgB,iBAAOjF,GAAP,sGACN7D,EAAM,EAAK8B,MAAX9B,EADM,kBAIN,EAAK8B,MAAM4yB,iBAAiB7xB,OAAO,CACvCG,QAAS,EAAKlB,MAAMa,MAAMI,GAC1BiG,OAAQnF,EAAKd,KANH,OAQZ,EAAKjB,MAAMoB,OAAOC,UAChBnD,EAAE,sCAAuC,CACvCiJ,SAAUpF,EAAKR,OAEjB,CACElC,KAAM,YAbE,gDAiBZ,EAAKW,MAAMoB,OAAOC,UAAUnD,EAAE,sBAAuB,CACnDmB,KAAM,UAlBI,+D,+PAuBhB,SAAAsC,SAAS,WACP,EAAkCC,KAAK5B,MAA/B+G,EAAR,EAAQA,MAAOlG,EAAf,EAAeA,MAAOiB,EAAtB,EAAsBA,KAAM5D,EAA5B,EAA4BA,EACpB6D,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,OAAKD,GAASC,EAKZ,gBAACG,EAAA,EAAD,CAAMC,QAAM,GACV,gBAACE,EAAA,EAAD,CAAMjD,KAAK,aACRnB,EACC,+GACC,IACH,gBAACqE,EAAA,EAAD,CAAYC,QAASZ,KAAKgF,uBACvB1I,EAAE,8BAA+B,CAChCkJ,SAAUpF,EAAKT,QANrB,KAWA,gBAACtE,EAAA,EAAD,CACEoC,KAAK,SACL7B,YAAW,UAAKU,EAAE,kBAAP,KACXZ,MAAOsE,KAAKrB,MACZhD,SAAUqE,KAAKtB,aACf7C,MAAOS,EAAE,iBACT2B,aAAW,EACXwH,WAAS,EACT5E,MAAI,IAEN,gBAACC,EAAA,EAAD,CACEC,MACEf,KAAKrB,MACH,gBAACqC,EAAA,EAAD,KAAQ1E,EAAE,mCAEV,gBAAC0E,EAAA,EAAD,KAAQ1E,EAAE,0BAGd2E,MAAOkE,EAAM8rB,WAAWhyB,EAAMI,GAAIW,KAAKrB,OACvCwC,MAAOnB,KAAKrB,WAAQyC,EAAY+D,EAAMpG,UACtCsC,WAAY,oBAACC,GAAD,OACV,gBAAC,EAAD,CACEnE,IAAKmE,EAAKjC,GACVc,KAAMmB,EACNiC,MAAO,wBAAM,EAAK6B,cAAc9D,SAItC,gBAACO,EAAA,EAAD,CACEC,MAAOxF,EAAE,iBACTyF,eAAgB/B,KAAKkF,uBACrBlD,OAAQhC,KAAKiF,iBAEb,gBAACS,EAAA,EAAD,CAAQxD,SAAUlC,KAAKkF,2BAjDpB,S,kBArDkBjJ,a,2DAC5BkG,K,qFACiB,K,iDAEjBA,K,oFACO,M,SAwGKE,gBAAkBC,YAAWyuB,I,uvCCJ7Bx1B,mBA5Gf,SAAS21B,aAAT,GAAwC,IAAhBjyB,EAAgB,EAAhBA,MACtB,iBAAwChD,YAAe,GAAvD,GAAOk1B,EAAP,KAAqBC,EAArB,KACA,EAAoC/qB,cAA5BlB,EAAR,EAAQA,MAAO6rB,EAAf,EAAeA,iBACPvxB,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EACF+D,EAAMoM,YAAUxN,EAAMI,IAEtBgyB,EAAiB,SAAjBA,eAAkBtmB,GACtBqmB,EAAgBrmB,IAGZlE,EAAgB,iB,0TAAA,0BAAG,iBAAO1G,GAAP,kHAEf6wB,EAAiBlqB,OAAO,CAC5BxH,QAASL,EAAMI,GACfiG,OAAQnF,EAAKd,KAJM,OAMrBI,EACEnD,EAAE,0CAA2C,CAC3CiJ,SAAUpF,EAAKR,OAEjB,CACElC,KAAM,YAXW,+CAerBgC,EAAUnD,EAAE,yBAA0B,CACpCmB,KAAM,UAhBa,8DAAH,gBAAhBoJ,iBAAgB,sCAqBtB,OACE,gBAACtG,EAAA,EAAD,CAAMC,QAAM,GACTH,EAAIuM,OACH,gCACE,gBAAClM,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,qKACTC,OAAQ,CACNvI,UAAWT,EAAMU,MAEnBuI,WAAY,CACVC,GAAI,mCAIV,4BACE,gBAACxG,EAAA,EAAD,CACElE,KAAK,SACLmD,QAAS,0BAAMywB,GAAe,IAC9B3zB,KAAM,gBAAC,WAAD,MACNkE,SAAO,GAENtF,EAAE,cANL,OAWJ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,4DACTC,OAAQ,CACNvI,UAAWT,EAAMU,MAEnBuI,WAAY,CACVC,GAAI,mCAMZ,gBAACsB,EAAA,EAAD,KACE,gBAAC7F,EAAA,EAAD,iBAEF,gBAAC9C,EAAA,EAAD,CACEG,MAAOkE,EAAMmsB,QAAQryB,EAAMI,IAC3B8B,MAAO6vB,EAAiBjyB,UACxB4F,QAAS,CACPtF,GAAIJ,EAAMI,IAEZ0B,MAAO,gBAACC,EAAA,EAAD,KAAQ1E,EAAE,+BACjB+E,WAAY,oBAACC,GAAD,OACV,gBAAC,EAAD,CACEnE,IAAKmE,EAAKjC,GACVc,KAAMmB,EACNkB,SAAUnC,EAAIuM,OAAS,kBAAM/F,EAAiBvF,SAAQF,OAI3Df,EAAIuM,QACH,gBAAC/K,EAAA,EAAD,CACEC,MAAOxF,EAAE,8BAA+B,CACtCoD,UAAWT,EAAMU,OAEnBoC,eAAgB,iCAAMsvB,GAAe,IACrCrvB,OAAQmvB,GAER,gBAAC,EAAD,CACElyB,MAAOA,EACPiD,SAAU,2BAAMmvB,GAAe,WCzH5BH,O,+jBCGf,IAiCeK,EAjCS,SAAlBA,gBACJnzB,GAQA,IAAQ9B,EAAMC,cAAND,EACR,OACE,gBAAC4G,EAAA,EAAD,UACErH,MAAOS,EAAE,QACTqI,QAAS,CACP,CACE9I,MAAOS,EAAE,UACTZ,MAAO,UAET,CACEG,MAAOS,EAAE,UACTZ,MAAO,UAET,CACEG,MAAOS,EAAE,SACTZ,MAAO,UAGXmJ,UAAWvI,EAAE,SACT8B,K,qzDCyOV,IAAMozB,EAAYp2B,kBAAO,OAAV,oEAAGA,CAAH,yFAGC,SAACgD,GAAD,OAAWA,EAAMlC,MAAMu1B,uBAKjCC,EAASt2B,kBAAO,OAAV,iEAAGA,CAAH,mDAMGG,iBAvPf,SAASmK,OAAT,GAAqC,IAAnBxD,EAAmB,EAAnBA,SAChB,iBAAgCjG,YAAe,GAA/C,GAAOqV,EAAP,KAAiBC,EAAjB,KACA,iBAAoCtV,YAAwB,GAA5D,GAAO01B,EAAP,KAAmBC,EAAnB,KACA,iBAA8B31B,WAAgC,CAC5D,CACE41B,MAAO,GACPlyB,KAAM,GACNoO,KAAM,UAER,CACE8jB,MAAO,GACPlyB,KAAM,GACNoO,KAAM,UAER,CACE8jB,MAAO,GACPlyB,KAAM,GACNoO,KAAM,YAdV,GAAO+jB,EAAP,KAAgBC,EAAhB,KAiBQ5sB,EAAUkB,cAAVlB,MACA1F,EAAc6G,cAAd7G,UACFU,EAAOiG,cACPhG,EAAOoM,cACLlQ,EAAMC,cAAND,EACF01B,EAAkB7xB,EAAK0xB,MAAMI,MAAM,KAAK,GACxC5xB,EAAMoM,YAAUrM,EAAKf,IAErBwS,EAAe5V,cAAA,iB,oRAAA,0BACnB,iBAAOc,GAAP,sGACEA,EAAGE,iBACHsU,GAAY,GAFd,kBAKuBpM,EAAM+sB,OAAOJ,GALpC,OAKUK,EALV,OAMIjwB,IAEIiwB,EAAKC,KAAKvqB,OAAS,EACrBpI,EAAUnD,EAAE,6BAA8B,CACxCmB,KAAM,YAGRgC,EAAUnD,EAAE,6CAA8C,CACxDmB,KAAM,YAdd,kDAkBIgC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAnBZ,yBAsBI8T,GAAY,GAtBhB,mFADmB,sDA0BnB,CAACrP,EAAUzC,EAAWqyB,EAASx1B,EAAG6I,IAG9BqP,EAAevY,eAAkB,SAACc,EAAIob,GAC1C4Z,GAAW,SAACM,GACV,IAAMC,EAAa,mBAAID,GAEvB,OADAC,EAAWna,GAAOpb,EAAG6B,OAAOe,MAAQ5C,EAAG6B,OAAOlD,MACvC42B,OAER,IAEGC,EAAYt2B,eAAkB,WAC9B61B,EAAQjqB,QA9EI,IA+EdpI,EACEnD,EAAE,6DAA8D,CAC9Dk2B,YAjFU,KAmFZ,CACE/0B,KAAM,YAKZs0B,GAAW,SAACM,GACV,IAAMC,EAAa,mBAAID,GAMvB,OALAC,EAAWl1B,KAAK,CACdy0B,MAAO,GACPlyB,KAAM,GACNoO,KAAM,WAEDukB,OAER,CAAC7yB,EAAWqyB,EAASx1B,IAElBm2B,EAAex2B,eACnB,SAACc,EAA0Bob,GACzBpb,EAAGE,iBACH80B,GAAW,SAACM,GACV,IAAMC,EAAa,mBAAID,GAEvB,OADAC,EAAWI,OAAOva,EAAO,GAClBma,OAGX,IAGIK,EAAa12B,eAAkB,WACnC21B,GAAc,GACdnyB,EAAUnD,EAAE,qBAAsB,CAChCmB,KAAM,cAEP,CAACgC,EAAWnD,IAETs2B,EAAmB32B,eAAkB,SAAC8R,EAAYoK,GACtD4Z,GAAW,SAACM,GACV,IAAMC,EAAa,mBAAID,GAEvB,OADAC,EAAWna,GAAX,KAA4BpK,EACrBukB,OAER,IAEH,OACE,wBAAMpwB,SAAU2P,GACbzR,EAAKyyB,YACJ,gBAACnyB,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,yIACTC,OAAQ,CACN6qB,cAAe1yB,EAAK0yB,kBAK1B,gBAACpyB,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,qGACTC,OAAQ,CACN6qB,cAAe1yB,EAAK0yB,iBAErB,IACFzyB,EAAIuM,QACH,gBAAChJ,EAAA,EAAD,gCAC2B,IACzB,gBAAC,IAAD,CAAMiJ,GAAG,sBAAT,wBAFF,MAOLzM,EAAK2yB,WACJ,gBAACvB,EAAD,KACE,gBAACjxB,EAAA,EAAD,CAAMkE,MAAM,YACV,gBAACpJ,EAAA,EAAD,CACEoC,KAAK,OACL/B,MAAO0E,EAAKkP,IACZzT,MAAOS,EAAE,iDACT02B,UAAQ,EACRnyB,MAAI,IANR,KASE,gBAACoyB,EAAA,EAAD,CAAiBtoB,KAAMvK,EAAKkP,IAAK4jB,OAAQP,GACvC,gBAAChxB,EAAA,EAAD,CACElE,KAAK,SACLC,KAAM,gBAAC,WAAD,MACNy1B,MAAO,CACLC,aAAc,QAEhBxxB,SAAO,GAEOtF,EAAbq1B,EAAe,cAAmB,iBAM5CG,EAAQjpB,KAAI,SAACqpB,EAAQ/Z,GAAT,OACX,gBAAC5X,EAAA,EAAD,CAAMpD,IAAKgb,EAAOzT,IAAK,GACrB,gBAACrJ,EAAA,EAAD,CACEoC,KAAK,QACLkC,KAAK,QACL9D,MAAOS,EAAE,SACT2B,YAAuB,IAAVka,EACbxc,SAAU,kBAACoB,GAAD,OAAQyX,EAAazX,EAAIob,IACnCvc,YAAW,kBAAao2B,GACxBt2B,MAAOw2B,EAAOL,MACd1D,SAAoB,IAAVhW,EACV1S,UAAqB,IAAV0S,EACXtX,MAAI,IAEN,gBAACxF,EAAA,EAAD,CACEoC,KAAK,OACLkC,KAAK,OACL9D,MAAOS,EAAE,aACT2B,YAAuB,IAAVka,EACbxc,SAAU,kBAACoB,GAAD,OAAQyX,EAAazX,EAAIob,IACnCzc,MAAOw2B,EAAOvyB,KACdwuB,WAAY+D,EAAOL,QAErB,gBAAC,EAAD,CACEl2B,SAAU,kBAACoS,GAAD,OAAgB6kB,EAAiB7kB,EAAMoK,IACjDzc,MAAOw2B,EAAOnkB,KACd9P,YAAuB,IAAVka,EACbkb,OAAK,IAEI,IAAVlb,GACC,gBAACuZ,EAAD,KACE,gBAAClW,EAAA,EAAD,CAAS1E,QAASxa,EAAE,iBAAkBwS,UAAU,OAC9C,gBAAC+H,EAAA,EAAD,CAAYjW,QAAS,iBAAC7D,GAAD,OAAQ01B,EAAa11B,EAAIob,KAC5C,gBAAC,YAAD,aAQZ,gBAAC5X,EAAA,EAAD,CAAM2iB,QAAQ,iBACX4O,EAAQjqB,QA9NG,GA+NV,gBAAClG,EAAA,EAAD,CAAQlE,KAAK,SAASmD,QAAS2xB,EAAW3wB,SAAO,GAC/C,gBAACgC,EAAA,EAAD,oBADF,KAIA,6BAGF,gBAACjC,EAAA,EAAD,CACElE,KAAK,SACLmH,SAAU0M,EACVgiB,UAAQ,QACRC,sBAAoB,SACpBC,oBAAkB,eAEjBliB,EAAW,GAAH,OAAMhV,EAAE,YAAR,KAAyBA,EAAE,kBAGxC,gC,2eCnPN,IAAMm3B,EAAsB,SAAtBA,oBAAuB,GAA+C,IAA7Cr0B,EAA6C,EAA7CA,WAC7B,OAAO,gBAAC,IAAD,CAAgBA,WAAYA,KAmDrC,IAAMkN,EAAiBlR,UAAOgH,IAAV,kFAAGhH,CAAH,gEAMLG,iBAtDf,SAASyQ,kBACP,IAAMvJ,EAAOC,YAAa,CACxBC,OAAO,IAEDrG,EAAMC,cAAND,EACF8D,EAAOoM,cACb,EAAkCnG,cAA1BoC,EAAR,EAAQA,YAAaxI,EAArB,EAAqBA,SACfI,EAAMoM,YAAUrM,EAAKf,IACrB4B,EAAQhF,WACZ,kBACEwM,EAAYG,YAAY8D,QAAmB,SAACC,EAAUvN,GAYpD,OAXYa,EAASK,UAAUlB,EAAWC,IAElCuN,QACND,EAASvP,KAAK,CACZK,KAAM,QACNoP,GAAIC,YAAgB1N,EAAWC,IAC/ByC,MAAO,gBAACwK,EAAD,KAAiBlN,EAAWO,MACnCjC,KAAM,gBAAC+1B,EAAD,CAAqBr0B,WAAYA,MAIpCuN,IACN,MACL,CAAClE,EAAYG,YAAa3I,IAG5B,OAAKI,EAAI4K,eAKP,gCACE,gBAAC,IAAexI,GACb,SAACrE,GAAD,OACC,gBAAC,IAAD,UAAQV,KAAM,gBAAC,WAAD,MAAckH,SAA2B,IAAjB3D,EAAM4G,QAAkBzJ,GAA9D,UACM9B,EAAE,WADR,SAKJ,gBAAC,IAAD,YAAiBmG,EAAjB,CAAuBI,aAAYvG,EAAE,kBACnC,gBAAC,IAAD,KAASA,EAAE,wBACX,gBAAC,IAAD,YAAcmG,EAAd,CAAoBxB,MAAOA,OAdxB,S,2mCC3CJ,IAAMonB,EAAa,iB,oRAAA,0BAAG,iBAC3BV,EACAhjB,GAF2B,kHAIpB,IAAI+uB,SAAQ,SAACC,EAASC,GAC3B,IAAIC,IAAWlM,EAAf,+BAA0BhjB,GAA1B,IAAmCmvB,QAASH,EAAS7zB,MAAO8zB,SALnC,iDAAH,gBAAbvL,cAAa,yC,mwECkBpB9mB,EADLhG,a,gpBAKCw4B,uBAAyB,WACvB,EAAKC,kBAAmB,G,EAG1BC,wBAA0B,WACxB,EAAKD,kBAAmB,G,sMAG1B,SAAAj0B,SACE,MAAiEC,KAAK5B,MAA9Da,EAAR,EAAQA,MAAO+xB,EAAf,EAAeA,iBAAkBxvB,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,cACzCyyB,EAAcj1B,EAAMi1B,YAEpB/uB,EADqB6rB,EAAiBM,QAAQryB,EAAMI,IAEvD8hB,MAAM,EAAGgT,KACTtrB,KAAI,SAACurB,GAAD,OAAQA,EAAGj0B,QACZk0B,EAAWH,EAAc/uB,EAAM0C,OAErC,OACE,gCACE,gBAAC,IAAD,CACE1D,MACE,gBAACmwB,EAAD,KACE,gBAAC,YAAD,CAAW/vB,KAAM,MAGrBzC,MACE,gBAACyyB,EAAD,CAAO3zB,QAASZ,KAAK+zB,wBAAyB90B,EAAMU,MAEtD+D,SACE,gCACGwwB,EADH,UACuC,IAAhBA,EAAoB,GAAK,KAGlD1vB,QACE,gBAAC,IAAD,CAAMC,MAAM,SAASC,IAAK,GACvBlD,GACC,gBAAC,IAAD,CACEZ,QAASZ,KAAK+zB,uBACd5uB,MAAOA,EACPkvB,SAAUA,IAGb5yB,EAAc,CACbuE,iBAAkBhG,KAAK+zB,4BAK/B,gBAAC,IAAD,CACEjyB,MAAM,gBACNC,eAAgB/B,KAAKi0B,wBACrBjyB,OAAQhC,KAAKg0B,kBAEb,gBAAC,IAAD,CAAc/0B,MAAOA,U,eAzDHhD,a,qeACzBkG,K,qFACkB,K,SA8DfmyB,EAAQl5B,kBAAOmF,KAAV,2EAAGnF,CAAH,yGAKK,SAACgD,GAAD,OAAWA,EAAMlC,MAAMu1B,uBAIjC8C,EAAQn5B,UAAO8hB,KAAV,2EAAG9hB,CAAH,wDAOIkH,gBAAWf,I,uhGCvF1B,IAqFeizB,EArFsB,SAA/BA,6BAAgC,GAIG,IAHvCC,EAGuC,EAHvCA,mBACAhF,EAEuC,EAFvCA,oBACGvb,EACoC,8BAC/B5X,EAAMC,cAAND,EACAmM,EAAgBpC,cAAhBoC,YACR,iBAAgC4I,oBAAS,GAAzC,GAAOqjB,EAAP,KAAiBtV,EAAjB,KACA,iBAAoC/N,qBAApC,GAAOgO,EAAP,KAAmBC,EAAnB,KACQ7f,EAAc6G,cAAd7G,UAERxD,IAAMkO,WAAU,WAAM,yEACpB,+GACO1B,EAAYgX,UAAaiV,GAAarV,EAD7C,iCAGMD,GAAY,GAHlB,SAIY3W,EAAY1J,UAAU,CAC1B2gB,MAAO,MALf,uDAQMjgB,EACEnD,EAAE,0DACF,CACEmB,KAAM,UAGV6hB,EAAc,EAAD,IAdnB,yBAgBMF,GAAY,GAhBlB,mFADoB,gCACLO,OADK,mCAqBpBA,KACC,CAAClgB,EAAW4f,EAAY/iB,EAAGo4B,EAAUjsB,IAExC,IAAM9D,EAAU1I,IAAM04B,SACpB,kBACElsB,EAAYmsB,kBAAkBloB,QAC5B,SAACmoB,EAAKz1B,GAAN,mCACKy1B,GADL,CAEE,CACEh5B,MACE,kBAAC0E,EAAA,EAAD,CAAMkE,MAAM,UACV,kBAAC,IAAD,KACE,kBAACsI,EAAA,EAAD,CAAgB3N,WAAYA,KAE7BA,EAAWO,MAGhBjE,MAAO0D,EAAWC,QAGtB,CACE,CACExD,MACE,kBAAC0E,EAAA,EAAD,CAAMkE,MAAM,UACV,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAU9G,MAAM,kBAEjBrB,EAAE,SAGPZ,MAAO,YAIf,CAAC+M,EAAYmsB,kBAAmBt4B,IAGlC,OAAIo4B,EACK,KAIP,kBAACxxB,EAAA,EAAD,UACExH,MAAO+zB,UAAuB,OAC9B9qB,QAASA,EACThJ,SAAU84B,EACV5vB,UAAWvI,EAAE,sBACb+2B,OAAK,GACDnf,K,mjBCxFK,SAAS4gB,WAAT,GAA6C,IAAvBzwB,EAAuB,EAAvBA,IAAQ6P,EAAe,wCAClD5X,EAAMC,cAAND,EAER,OACE,gBAACy4B,EAAD,KACE,gBAACxN,EAAA,EAAgBrT,EACf,gBAAC9P,EAAD,CAAQC,IAAKA,IACb,gBAAC9D,EAAA,EAAD,CAAM2K,MAAI,EAACzG,MAAM,SAASye,QAAQ,UAC/B5mB,EAAE,aAOb,I,IAAM04B,EAAe,sCAKf5wB,EAAShJ,UAAO4uB,IAAV,yEAAG5uB,CAAH,SACR45B,GAGED,EAAW35B,kBAAOmF,KAAV,2EAAGnF,CAAH,4RACV45B,GAIsB,SAAC52B,GAAD,OAAWA,EAAMlC,MAAMu1B,uBACjC,SAACrzB,GAAD,OAAWA,EAAMlC,MAAM4X,aAIjCkhB,GAcO,SAAC52B,GAAD,OAAWA,EAAMlC,MAAMsW,S,2KC3CpC,IAAMyiB,EAAM75B,kBAAOmF,KAAV,sEAAGnF,CAAH,iGAIH,SAACgD,GAAD,OACkB,IAAlBA,EAAM82B,QACF,cACAC,YAAe,GAAK/2B,EAAMlC,MAAMmC,WAEtC+2B,YAAW,SAAXA,CATK,8DAkBHC,EAASj6B,UAAOgH,IAAV,yEAAGhH,CAAH,0HAcRg6B,YAAW,SAAXA,CAdQ,mFAqBNE,EAAQl6B,kBAAOsF,KAAV,wEAAGtF,CAAH,wBA4BIm6B,EAxBqB,SAA9BA,WAA+B,GAO/B,IANJtW,EAMI,EANJA,QACAuW,EAKI,EALJA,YACA71B,EAII,EAJJA,KACA9D,EAGI,EAHJA,MACAytB,EAEI,EAFJA,OACA5a,EACI,EADJA,SAEA,OAAgB,IAAZuQ,EACK,KAGP,gBAACgW,EAAD,CAAKvwB,IAAK,GAAIwwB,QAAS5L,GACrB,gBAAC+L,EAAD,KACE,gBAACC,EAAD,CAAO7Z,GAAG,MACR,yBAAOga,QAAS91B,GAAO9D,IAEzB,gBAAC6E,EAAA,EAAD,CAAMjD,KAAK,aAAa+3B,IAE1B,gBAACH,EAAD,KAAS3mB,K,qlDCyGAnT,mBAnKf,SAASm6B,UAAU,MACTx1B,EAASmG,cAATnG,KACAT,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EACF8D,EAAOoM,cACPmpB,EAAOC,iBAAwB,MACrC,wBAAwBvkB,mBAASjR,EAAKT,MAAtC,GAAOA,EAAP,KAAaouB,EAAb,KACA,wBAAkC1c,mBAASjR,EAAK2yB,WAAhD,GAAOA,EAAP,KAAkB8C,EAAlB,KACA,wBAAkCxkB,mBAAiBjR,EAAKkE,WAAxD,GAAOA,EAAP,KAAkBwxB,EAAlB,KACA,wBAAsDzkB,mBACpDjR,EAAKqvB,qBADP,GAAOA,EAAP,KAA4BsG,EAA5B,KAIMlkB,EAAe5V,cAAA,mEACnB,iBAAOwY,GAAP,gGACMA,GACFA,EAAMxX,iBAFV,kBAMUiD,EAAK81B,WAAW,CACpBr2B,OACA2E,YACAyuB,YACAtD,wBAVN,OAYIhwB,EAAUnD,EAAE,kBAAmB,CAC7BmB,KAAM,YAbZ,gDAgBIgC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAjBZ,+DADmB,sDAsBnB,CAACyC,EAAMP,EAAM2E,EAAWyuB,EAAWtD,EAAqBhwB,EAAWnD,IAG/D4xB,EAAmBjyB,eACvB,SAACc,GACCgxB,EAAQhxB,EAAG6B,OAAOlD,SAEpB,IAGIu6B,EAAwBh6B,eAC5B,SAACc,GACC84B,EAAa94B,EAAG6B,OAAOlD,MAAMw6B,iBAE/B,IAGIC,EAAkB,mEAAG,kBAAO7xB,GAAP,iGACzBwxB,EAAaxxB,GADY,SAEnBpE,EAAK81B,WAAW,CACpB1xB,cAHuB,OAKzB7E,EAAUnD,EAAE,gBAAiB,CAC3BmB,KAAM,YANiB,kDAAH,gBAAlB04B,mBAAkB,sCAUlBC,EAAoBn6B,eACxB,SAAC6D,GACCL,EAAUK,GAASxD,EAAE,gCAEvB,CAACmD,EAAWnD,IAGRm4B,EAAqBx4B,cAAA,mEAAkB,kBAAOP,GAAP,0FAE3Cq6B,EADsC,SAAVr6B,EAAmB,KAAOA,GADX,kDAAlB,sDAGxB,IAEG26B,EAAO,UAAGV,EAAK94B,eAAR,aAAG,EAAcy5B,gBAE9B,OACE,gBAACntB,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,WAAYoB,KAAM,gBAAC,WAAD,CAAUC,MAAM,kBAChD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,YACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,iGAMF,wBAAM1B,SAAU2P,EAActU,IAAKo4B,GACjC,gBAAC,EAAD,CACE95B,MAAOS,EAAE,QACTqD,KAAK,YACL61B,YAAal5B,EACX,8DAGF,gBAACw4B,WAAD,CACElM,UAAWuN,EACXtN,QAASuN,EACT/xB,IAAKC,EACLilB,aAAc,KAGlB,gBAAC,EAAD,CACE1tB,MAAOS,EAAE,QACTqD,KAAK,OACL61B,YAAal5B,EACX,0DAGF,gBAACjB,EAAA,EAAD,CACEgE,GAAG,OACHk3B,aAAa,eACb76B,MAAOiE,EACPhE,SAAUuyB,EACVC,UAAQ,KAGZ,gBAAC,EAAD,CACElP,QAASuX,IAAIC,oBAAsBvR,IACnCrpB,MAAOS,EAAE,aACTqD,KAAK,YACL61B,YACEzC,EACE,gCACE,gBAACnvB,EAAA,EAAD,kDAAyD,IACzD,8BAASmvB,EAAT,oBAGFz2B,EAAE,kEAIN,gBAACjB,EAAA,EAAD,CACEgE,GAAG,YACH3D,MAAOq3B,GAAa,GACpBp3B,SAAUs6B,EACVM,aAAa,MACbG,UAAW,EACXtb,UAAW,MAGf,gBAAC,EAAD,CACEkO,QAAQ,EACRztB,MAAOS,EAAE,cACTqD,KAAK,sBACL61B,YAAal5B,EACX,2EAGF,gBAAC,EAAD,CACE+C,GAAG,sBACHo1B,mBAAoBA,EACpBhF,oBAAqBA,KAIzB,gBAAC9tB,EAAA,EAAD,CAAQlE,KAAK,SAASmH,SAAU1E,EAAKoR,WAAa+kB,GAC/Cn2B,EAAKoR,SAAL,UAAmBhV,EAAE,UAArB,KAAoCA,EAAE,c,2RC5KlC,SAASq6B,QAAQv4B,GAC9B,OACE,gBAACw4B,EAAD,iBACElU,MAAM,OACNC,OAAO,OACPkU,QAAQ,YACRC,MAAM,8BACF14B,GAEJ,gBAAC24B,EAAD,CACEC,KAAK,OACLC,YAAY,IACZC,cAAc,QACdC,GAAG,IACHC,GAAG,IACHC,EAAE,OAMV,IAAMT,EAAMx7B,UAAOk8B,IAAV,+DAAGl8B,CAAH,sIAcH27B,EAAS37B,UAAOm8B,OAAV,kEAAGn8B,CAAH,2QAeA,SAACgD,GAAD,OAAWA,EAAMlC,MAAMiH,iB,6TCJpBq0B,OApCf,SAASA,kBAAT,GAAoD,IAAvBn4B,EAAuB,EAAvBA,GAAIo4B,EAAmB,EAAnBA,SACvBn7B,EAAMC,cAAND,EACFmG,EAAOC,YAAa,CACxBC,OAAO,IAGT,OACE,gCACE,gBAACC,GAAA,EAAD,2BAAoBC,aAAYvG,EAAE,cAAkBmG,IACpD,gBAACK,EAAA,EAAD,6BAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,oBACnC,gBAACyG,GAAA,EAAD,6BACMN,EADN,CAEExB,MAAO,CACL,CACExD,KAAM,OACNqE,MAAOxF,EAAE,YACToB,KAAM,gBAAC,eAAD,MACNqS,KAAM,mCAAqC1Q,GAE7C,CACE5B,KAAM,aAER,CACEA,KAAM,SACNqE,MAAOxF,EAAE,UACToB,KAAM,gBAAC,YAAD,MACNsF,WAAW,EACXpC,QAAS62B,U,gKCtBvB,IA8Del8B,gBA9De,SAAxBm8B,sBAAyB,GAA2C,IAAzCC,EAAyC,EAAzCA,cAAetH,EAA0B,EAA1BA,aACtC/zB,EAAMC,cAAND,EACF6D,EAAOiG,cACPlK,EAAQC,qBACRy7B,EAAe,CACnBC,SAAUv7B,EAAE,cACZw7B,QAASx7B,EAAE,WACXy7B,UAAWz7B,EAAE,cACbwD,MAAOxD,EAAE,WAGL07B,EAAc,CAClBH,SAAU,gBAAClB,QAAD,MACVoB,UAAW,gBAACpB,QAAD,MACXmB,QAAS,gBAAC,cAAD,CAAan6B,MAAOzB,EAAMkhB,eACnC6a,SAAU,gBAAC,WAAD,CAAUt6B,MAAOzB,EAAMgI,UACjCpE,MAAO,gBAAC,cAAD,CAAanC,MAAOzB,EAAMszB,UAG7B1tB,EACmB,WAAvB61B,EAAcl6B,MAAqBk6B,EAAc77B,aAC7C67B,EAAch4B,KACdrD,EAAE,mBAER,OACE,gBAAC,IAAD,CACEwF,MAAOA,EACPqC,MAAO6zB,EAAYL,EAAc5sB,OACjCrH,SACE,gCAC2B,aAAxBi0B,EAAc5sB,OACb,gCAAG6sB,EAAaD,EAAc5sB,OAA9B,OAED4sB,EAAc73B,OAAS,gCAAG63B,EAAc73B,MAAjB,OACvBxD,EAAE,yBAA0B,CAC3BiJ,SACEpF,EAAKd,KAAOs4B,EAAcx3B,KAAKd,GAC3B/C,EAAE,OACFq7B,EAAcx3B,KAAKR,OAT7B,IAYE,gBAACkE,EAAA,EAAD,CAAMC,SAAU6zB,EAAcO,UAAWC,WAAS,EAACC,SAAO,IAZ5D,MAagBT,EAAcU,UAGhC7zB,QAC0B,aAAxBmzB,EAAc5sB,OAAwBslB,EACpC,gBAAC,IAAD,KACE,gBAAC,GAAD,CACEhxB,GAAIs4B,EAAct4B,GAClBo4B,SAAQ,iB,qVAAA,0BAAE,iBAAO16B,GAAP,gGACRA,EAAGE,iBADK,SAEFozB,EAAasH,GAFX,iDAAF,8DAMVv2B,O,ykDC6BG7F,oBAxFf,SAAS+8B,SACP,IAAQh8B,EAAMC,cAAND,EACF6D,EAAOiG,cACb,EAAwCC,cAAhC8kB,EAAR,EAAQA,eAAgB1iB,EAAxB,EAAwBA,YAChBhJ,EAAc6G,cAAd7G,UACR,uBAAgCxD,YAAe,GAA/C,GAAOizB,EAAP,KAAkBqJ,EAAlB,KACA,uBAAoCt8B,YAAe,GAAnD,GAAOu8B,EAAP,KAAoBC,EAApB,KAEM5I,EAAe5zB,cAAA,kEACnB,iBAAOc,GAAP,gGACEA,EAAGE,iBACHs7B,GAAW,GAFb,kBAKU9vB,EAAY2mB,SALtB,OAMIqJ,GAAa,GACbh5B,EAAUnD,EAAE,wBAPhB,uBASIi8B,GAAW,GATf,+EADmB,sDAanB,CAACj8B,EAAGmM,EAAahJ,IAGb4wB,EAAep0B,cAAA,kEACnB,kBAAO07B,GAAP,mHAEUxM,EAAerkB,OAAO6wB,GAFhC,OAGIl4B,EAAUnD,EAAE,mBAHhB,+CAKImD,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UANZ,+DADmB,sDAWnB,CAAC0tB,EAAgB1rB,EAAWnD,IAG9B,OACE,gBAAC6M,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,UAAWoB,KAAM,gBAAC,eAAD,CAAcC,MAAM,kBACnD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,WACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,sRACTC,OAAQ,CACNywB,UAAWv4B,EAAK0xB,OAElB3pB,WAAY,CACVC,GAAI,mCAIV,gBAACxG,EAAA,EAAD,CACElE,KAAK,SACLmD,QAASivB,EACTjrB,SAAUsqB,GAAasJ,EACvBt0B,SAAO,GAENs0B,EACGl8B,EAAE,oBACF4yB,EAAS,UACN5yB,EAAE,qBADI,KAETA,EAAE,gBAER,2BACA,gBAACwE,EAAA,EAAD,CACEG,MAAOkqB,EAAewN,QACtBx3B,MAAOgqB,EAAepsB,UACtB4F,QAAS,CACPlH,KAAM,UAER+L,QACE,0BACE,gBAAC5F,EAAA,EAAD,wBAGJvC,WAAY,oBAACC,GAAD,OACV,gBAAC,GAAD,CACEnE,IAAKmE,EAAKjC,GACVs4B,cAAer2B,EACf+uB,aAAcA,W,2lEC/BX90B,oBAlDf,SAASq9B,WACP,IAAQ14B,EAASmG,cAATnG,KACFE,EAAOoM,cACLlQ,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UACR,yBAAwB4R,mBAAS,CAC/BwnB,qBAAsBz4B,EAAKy4B,uBAD7B,GAAO1G,EAAP,KAAa2G,EAAb,KAIMtkB,EAAevY,cAAA,iB,8SAAA,0BACnB,iBAAOc,GAAP,sGACQg8B,EADR,+BACuB5G,GADvB,sBAC8Bp1B,EAAG6B,OAAOe,KAAO5C,EAAG6B,OAAO2I,UACvDuxB,EAAQC,GAFV,SAIQ74B,EAAK81B,WAAW+C,GAJxB,OAKEt5B,EAAUnD,EAAE,kBAAmB,CAC7BmB,KAAM,YANV,iDADmB,sDAUnB,CAACyC,EAAMiyB,EAAM1yB,EAAWnD,IAG1B,OACE,gBAAC6M,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,YAAaoB,KAAM,gBAAC,aAAD,CAAYC,MAAM,kBACnD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,aACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,qHAKF,gBAAC,EAAD,CACEjE,KAAK,uBACL9D,MAAOS,EAAE,yBACTk5B,YAAal5B,EACX,4GAGF,gBAAC8L,GAAA,EAAD,CACE/I,GAAG,uBACHM,KAAK,uBACL4H,QAAS4qB,EAAK0G,qBACdj0B,SAAUutB,EAAK0G,qBACfl9B,SAAU6Y,S,m8CCILjZ,oBA7Cf,SAASy9B,YAAT,GAAiD,IAA1B/5B,EAA0B,EAA1BA,MAAOiD,EAAmB,EAAnBA,SACpB5F,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UACFrD,EAAUC,eAChB,4BAAoCJ,YAAe,GAAnD,GAAOg9B,EAAP,KAAmBC,EAAnB,KAEMrnB,EAAY,iB,uTAAA,0BAAG,iBAAO9U,GAAP,gGACnBA,EAAGE,iBACHi8B,GAAc,GAFK,kBAKXj6B,EAAM6H,SALK,OAMjB1K,EAAQgB,KAAK+7B,gBACbj3B,IAPiB,gDASjBzC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAVS,yBAajBy7B,GAAc,GAbG,kFAAH,gBAAZrnB,aAAY,sCAiBlB,OACE,gBAACtR,EAAA,EAAD,CAAMC,QAAM,GACV,wBAAM0B,SAAU2P,GACd,gBAACnR,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,oKACTC,OAAQ,CACNvI,UAAWT,EAAMU,MAEnBuI,WAAY,CACVC,GAAI,mCAIV,gBAACxG,EAAA,EAAD,CAAQlE,KAAK,SAAS+xB,QAAM,GACzByJ,EAAa,GAAH,OAAM38B,EAAE,YAAR,KAAyBA,EAAE,2B,4zCCqBjCf,oBA5Df,SAAS69B,UAAT,GAA+C,IAA1Bn6B,EAA0B,EAA1BA,MAAOiD,EAAmB,EAAnBA,SAClBzC,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EACR,0BAAwBL,WAAegD,EAAMU,MAA7C,GAAOA,EAAP,KAAaouB,EAAb,KACA,0BAAgC9xB,YAAe,GAA/C,GAAOqV,EAAP,KAAiBC,EAAjB,KACMM,EAAe5V,cAAA,iB,iTAAA,0BACnB,iBAAOc,GAAP,gGACEA,EAAGE,iBACHsU,GAAY,GAFd,kBAKUtS,EAAMkI,KAAK,CACfxH,KAAMA,IANZ,OAQIuC,IARJ,gDAUIzC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAXZ,yBAcI8T,GAAY,GAdhB,kFADmB,sDAkBnB,CAACtS,EAAOiD,EAAUzC,EAAWE,IAGzBuuB,EAAmBjyB,eACvB,SAACc,GACCgxB,EAAQhxB,EAAG6B,OAAOlD,SAEpB,IAGF,OACE,wBAAMwG,SAAU2P,GACd,gBAACnR,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,oHAKF,gBAACrD,EAAA,EAAD,KACE,gBAAClF,EAAA,EAAD,CACEoC,KAAK,OACL5B,MAAOS,EAAE,QACTX,SAAUuyB,EACVxyB,MAAOiE,EACPwuB,UAAQ,EACR1oB,WAAS,EACT5E,MAAI,KAIR,gBAACc,EAAA,EAAD,CAAQlE,KAAK,SAASmH,SAAU0M,IAAa3R,GAC1C2R,EAAW,GAAH,OAAMhV,EAAE,UAAR,KAAuBA,EAAE,a,u5CCa3Bf,oBA/Df,SAAS89B,UAAT,GAAgD,IAA3Bp6B,EAA2B,EAA3BA,MAAO2G,EAAoB,EAApBA,UAClBtJ,EAAMC,cAAND,EACFmG,EAAOC,YAAa,CACxBC,OAAO,IAET,0BAA0C1G,YAAe,GAAzD,GAAOq9B,EAAP,KAAsBC,EAAtB,KACA,0BAA8Ct9B,YAAe,GAA7D,GAAOu9B,EAAP,KAAwBC,EAAxB,KACMp5B,EAAMoM,aAAUxN,EAAMI,IAE5B,OACE,gCACE,gBAACwC,GAAA,EAAD,CACEC,MAAOxF,EAAE,cACTyF,eAAgB,iCAAMw3B,GAAiB,IACvCv3B,OAAQs3B,GAER,gBAAC,GAAD,CAAWr6B,MAAOA,EAAOiD,SAAU,2BAAMq3B,GAAiB,OAE5D,gBAAC13B,GAAA,EAAD,CACEC,MAAOxF,EAAE,gBACTyF,eAAgB,iCAAM03B,GAAmB,IACzCz3B,OAAQw3B,EACR7X,YAAU,GAEV,gBAAC,GAAD,CAAa1iB,MAAOA,EAAOiD,SAAU,2BAAMu3B,GAAmB,OAEhE,gBAAC72B,GAAA,EAAD,mBAAoBC,aAAYvG,EAAE,cAAkBmG,IACpD,gBAACK,EAAA,EAAD,qBAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,mBACnC,gBAACyG,GAAA,EAAD,qBACMN,EADN,CAEExB,MAAO,CACL,CACExD,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,WAAP,KACLoB,KAAM,gBAAC,YAAD,MACNkD,QAASgF,EACTqZ,WAAYhgB,IAASoB,EAAIsR,OAE3B,CACElU,KAAM,aAER,CACEA,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,QAAP,KACLoB,KAAM,gBAAC,WAAD,MACNkD,QAAS,0BAAM24B,GAAiB,IAChCta,WAAYhgB,IAASoB,EAAIuM,SAE3B,CACEnP,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,UAAP,KACLoB,KAAM,gBAAC,YAAD,MACNsF,WAAW,EACXpC,QAAS,0BAAM64B,GAAmB,IAClCxa,WAAYhgB,IAASoB,EAAIyG,kB,gpCCcxBvL,oBAjEf,SAASm+B,SACP,IAAQp9B,EAAMC,cAAND,EACAwC,EAAWuH,cAAXvH,OACFsB,EAAOoM,cACPnM,EAAMoM,aAAUrM,EAAKf,IAC3B,uBAII7C,eAJJ,GACEgC,EADF,KAEED,EAFF,KAGEE,EAHF,KAMA,OACE,gBAAC0K,EAAA,EAAD,CACErH,MAAOxF,EAAE,UACToB,KAAM,gBAAC,YAAD,CAAWC,MAAM,iBACvB6G,QACE,gCACGnE,EAAII,aACH,gBAAC,IAAD,KACE,gBAACkB,EAAA,EAAD,CACElE,KAAK,SACLmD,QAASrC,EACTb,KAAM,gBAAC,WAAD,OAHR,UAKMpB,EAAE,aALR,SAYR,gBAAC8M,EAAA,EAAD,KAAU9M,EAAE,WACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,4EAIF,gBAAC6F,GAAA,EAAD,KAAanN,EAAE,eACf,gBAACwE,EAAA,EAAD,CACEG,MAAOnC,EAAO8J,YACd7H,MAAO,gBAACC,GAAA,EAAD,KAAQ1E,EAAE,oCACjB6E,MAAOrC,EAAOC,UACdsC,WAAY,oBAACC,GAAD,OACV,gBAACC,GAAA,EAAD,CACEpE,IAAKmE,EAAKjC,GACVJ,MAAOqC,EACPG,cAAe,8BAAGuE,EAAH,EAAGA,iBAAH,OACb,gBAAC,GAAD,CAAW/G,MAAOqC,EAAMsE,UAAWI,KAErCxE,cAAY,OAKlB,gBAACK,GAAA,EAAD,CACEC,MAAOxF,EAAE,kBACTyF,eAAgBtD,EAChBuD,OAAQxD,GAER,gBAACyD,GAAA,EAAD,CAAUC,SAAUzD,S,6oDCiB5B,IAAMk7B,GAAOv+B,kBAAOw+B,mBAAV,qEAAGx+B,CAAH,+DAGM,SAACgD,GAAD,OAAWA,EAAMlC,MAAM29B,MAAMC,QAIvC1nB,GAAoBhX,UAAOgH,IAAV,kFAAGhH,CAAH,8JAIP,SAACgD,GAAD,OACZA,EAAMiU,cACFjU,EAAMlC,MAAMu1B,oBACZrzB,EAAMlC,MAAM4X,cAEG,SAAC1V,GAAD,OAAWA,EAAMlC,MAAMmC,WAKjC,SAACD,GAAD,OAAYA,EAAM27B,UAAY,GAAM,KAG/B,SAAC37B,GAAD,OAAWA,EAAMlC,MAAMu1B,uBAI1Bl2B,gBA1Gf,SAASkX,aAAT,GAAuE,IAA/C7N,EAA+C,EAA/CA,SAAU1C,EAAqC,EAArCA,SAAUwM,EAA2B,EAA3BA,SAAUsrB,EAAiB,EAAjBA,OAC5C19B,EAAMC,cAAND,EACAmM,EAAgBpC,cAAhBoC,YACAhJ,EAAc6G,cAAd7G,UACR,6BAAoCxD,YAAe,GAAnD,GAAO4W,EAAP,KAAoB0a,EAApB,KAEM3a,EAAc3W,cAAA,iB,0TAAA,0BAClB,iBAAOwrB,GAAP,sGACMA,EAAM5f,OAAS,GADrB,uBAEIpI,EAAUnD,EAAE,yCAA0C,CACpDmB,KAAM,UAHZ,iCAOQkqB,EAAOF,EAAM,GAEnB8F,GAAa,GATf,kBAY6B9E,aAAWd,EAAM,CACxChoB,KAAMgoB,EAAKhoB,OAbjB,cAYUgpB,EAZV,iBAeUlgB,EAAYilB,OAAO/E,EAAWtpB,GAAI26B,GAf5C,QAgBI93B,IACAzC,EACEnD,EAAE,kEACF,CACEmB,KAAM,UACN2c,QAAS,MArBjB,kDAyBI3a,EAAU,KAAIsS,SAzBlB,yBA2BIwb,GAAa,GA3BjB,mFADkB,sDA+BlB,CAACjxB,EAAG4F,EAAUuG,EAAauxB,EAAQv6B,IAG/BuT,EAAkB/W,eAAkB,WACxCwD,EAAUnD,EAAE,uDAAwD,CAClEmB,KAAM,YAEP,CAACnB,EAAGmD,IAEP,OAAImF,EACK8J,EAIP,gCACGmE,GAAe,gBAACc,GAAA,EAAD,MAChB,gBAAC,KAAD,CACExD,OAAO,kBACPgD,eAAgBP,EAChBQ,eAAgBJ,EAChBpO,SAAUiO,IAET,gBAAGU,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,aAAhC,OACC,gBAACrB,GAAD,wBACMmB,IADN,CAEEwmB,UAAWlnB,EACXR,cAAeoB,EACfC,UAAW,IAEX,wBAAWF,KACX,gBAACjT,EAAA,EAAD,CAAMkE,MAAM,SAASC,IAAK,EAAGlE,QAAM,GACjC,gBAACm5B,GAAD,CAAMp1B,KAAM,GAAI5G,MAAM,SACrB+Q,W,gSC1Ef,IA4BMurB,GAAc7+B,kBAAO8+B,MAAV,kFAAG9+B,CAAH,8EASF++B,GArCyB,SAAlCA,eAAmC,GAAwB,IAAtBr4B,EAAsB,EAAtBA,MAAO4M,EAAe,EAAfA,SAC1CsgB,EAAaoL,aAAmB,CAAEC,UAAU,IAC5Cn+B,EAAQC,qBAEd,OACE,2BACE,gBAACkhB,GAAA,EAAe2R,GACb,SAAC5wB,GAAD,OACC,gBAACuD,EAAA,EAAD,wBACEjE,KAAM,gBAAC,mBAAD,CAAkBC,MAAOzB,EAAMyO,OACrC/I,SAAO,EACP04B,eAAa,GACTl8B,GAEH0D,MAIP,gBAACm4B,GAAgBjL,EACf,gBAACtuB,EAAA,EAAD,CAAMjD,KAAK,aACT,2BACCiR,MCFInT,oBAzBf,SAASg/B,qBACP,IAAQ9kB,EAAYpP,cAAZoP,QAER,OACE,gBAAClV,EAAA,EAAD,CAAMC,QAAM,GACV,gBAACE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAAC,GAAD,CAAcyE,SAAUuT,EAAQS,eAAgB8jB,OAAO,UACrD,gBAACp2B,EAAA,EAAD,0FAMJ,gBAAC,GAAD,CAAgB9B,MAAO,gBAAC8B,EAAA,EAAD,mCACrB,gBAACA,EAAA,EAAD,CACEoE,SAAS,wOACTE,WAAY,CACVC,GAAI,uCCWD5M,oBA5Bf,SAASi/B,sBACP,IAAQ/kB,EAAYpP,cAAZoP,QAER,OACE,gBAAClV,EAAA,EAAD,CAAMC,QAAM,GACV,gBAACE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAAC,GAAD,CACEyE,SAAUuT,EAAQS,eAClB8jB,OAAO,oBAEP,gBAACp2B,EAAA,EAAD,sFAMJ,gBAAC,GAAD,CAAgB9B,MAAO,gBAAC8B,EAAA,EAAD,6BACrB,gBAACA,EAAA,EAAD,CACEoE,SAAS,yOACTE,WAAY,CACVC,GAAI,uCCiFD5M,oBA5Ff,SAASk/B,SACP,IAAQn+B,EAAMC,cAAND,EACR,EAAoC+J,cAA5BoP,EAAR,EAAQA,QAAS0V,EAAjB,EAAiBA,eAEjB,OACE,gBAAChiB,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,UAAWoB,KAAM,gBAAC,kBAAD,CAAiBC,MAAM,kBACtD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,WACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,wNAOF,2BACE,gBAAC82B,EAAA,EAAD,CACEpR,QAAQ,EACRnlB,MAAO,gBAACw2B,GAAA,EAAD,CAAap2B,KAAM,GAAIyyB,KAAK,iBACnCl1B,MAAM,UACN4B,SAAUpH,EACR,kEAEFkI,QACE,gBAAC7C,EAAA,EAAD,CACElE,KAAK,SACLmD,QAAS,mBACP6U,EAAQO,UAAU,CAChBlU,MAAOxF,EAAE,eACTqlB,YAAY,EACZ1L,QAAS,gBAAC,GAAD,SAGbrU,SAAO,GAENtF,EAAE,UAXL,OAeJ,gBAACo+B,EAAA,EAAD,CACEpR,QAAQ,EACRnlB,MAAO,uBAAKE,IAAKu2B,aAAQ,sBAAuBlY,MAAO,KACvD5gB,MAAM,SACN4B,SAAUpH,EAAE,qCACZkI,QACE,gBAAC7C,EAAA,EAAD,CACElE,KAAK,SACLmD,QAAS,mBACP6U,EAAQO,UAAU,CAChBlU,MAAOxF,EAAE,eACTqlB,YAAY,EACZ1L,QAAS,gBAAC,GAAD,SAGbrU,SAAO,GAENtF,EAAE,UAXL,OAeJ,gBAACo+B,EAAA,EAAD,CACEpR,QAAQ,EACRnlB,MAAO,uBAAKE,IAAKu2B,aAAQ,0BAA2BlY,MAAO,KAC3D5gB,MAAM,aACN4B,SAAUpH,EAAE,2CACZkI,QACE,gBAAC7C,EAAA,EAAD,CAAQlE,KAAK,SAASmH,UAAQ,EAAChD,SAAO,GACnCtF,EAAE,mBAKX,2BACA,gBAACwE,EAAA,EAAD,CACEG,MAAOkqB,EAAe0P,QACtB15B,MAAOgqB,EAAepsB,UACtB4F,QAAS,CACPlH,KAAM,UAER+L,QACE,0BACE,gBAAC5F,EAAA,EAAD,wBAGJvC,WAAY,oBAACC,GAAD,OACV,gBAAC,GAAD,CAAuBnE,IAAKmE,EAAKjC,GAAIs4B,cAAer2B,W,4aCjG9D,IAAMw5B,GAAQ7+B,QACZ,kBACE,8EAkEW8+B,GA5DS,SAAlBA,gBACJ38B,GAEA,IAAM48B,EAAS/+B,WACT6N,EAAWC,eACX3N,EAAUC,eACV6N,EAASkkB,eAET+B,EAAmBl0B,eACvB,SAACoR,EAAM+iB,GACD/iB,EACFnD,EAAOmU,IAAI,OAAQhR,GAEnBnD,EAAOpD,OAAO,QAGhBoD,EAAOmU,IAAI,YAAa+R,EAAU8F,eAElC95B,EAAQyO,QAAQ,CACdY,SAAU3B,EAAS2B,SACnBnB,OAAQJ,EAAOM,eAGnB,CAACN,EAAQ9N,EAAS0N,EAAS2B,WAGvBwvB,EAAmBh/B,eACvB,SAACi/B,GACKA,EACFhxB,EAAOmU,IAAI,OAAQ6c,EAAK1wB,YAExBN,EAAOpD,OAAO,QAGhB1K,EAAQyO,QAAQ,CACdY,SAAU3B,EAAS2B,SACnBnB,OAAQJ,EAAOM,aAGbwwB,EAAOn+B,SACTs+B,aAAeH,EAAOn+B,QAAS,CAC7Bu+B,WAAY,YACZC,SAAU,OACVC,MAAO,YAIb,CAACpxB,EAAQ9N,EAAS0N,EAAS2B,WAG7B,OACE,gBAACqvB,GAAD,yBACEE,OAAQA,EACRO,aAAcpL,EACdqL,aAAcP,GACV78B,K,gYC8IK7C,oBAnMf,SAASkgC,SAAT,GAAmC,IAAft7B,EAAe,EAAfA,KACVgF,EAAUkB,cAAVlB,MACA7I,EAAMC,cAAND,EACFmG,EAAOC,YAAa,CACxBC,OAAO,IAEHtC,EAAMoM,aAAUtM,EAAKd,IACnBI,EAAc6G,cAAd7G,UAEFi8B,EAAgBz/B,eACpB,SAACc,GACCA,EAAGE,iBAGA6S,OAAO6rB,QACNr/B,EACE,yGACA,CACEiJ,SAAUpF,EAAKR,SAQvBwF,EAAMy2B,QAAQz7B,KAEhB,CAACgF,EAAOhF,EAAM7D,IAGVu/B,EAAe5/B,eACnB,SAACc,GACCA,EAAGE,iBAGA6S,OAAO6rB,QACNr/B,EAAE,yDAA0D,CAC1DiJ,SAAUpF,EAAKR,SAOrBwF,EAAM22B,OAAO37B,EAAM,YAErB,CAACgF,EAAOhF,EAAM7D,IAGVy/B,EAAe9/B,eACnB,SAACc,GACCA,EAAGE,iBAGA6S,OAAO6rB,QACNr/B,EACE,6GACA,CACEiJ,SAAUpF,EAAKR,SAQvBwF,EAAM22B,OAAO37B,EAAM,YAErB,CAACgF,EAAOhF,EAAM7D,IAGV0/B,EAAgB//B,eACpB,SAACc,GACCA,EAAGE,iBAGA6S,OAAO6rB,QACNr/B,EACE,uGAON6I,EAAM82B,QAAQ97B,KAEhB,CAACgF,EAAOhF,EAAM7D,IAGV4/B,EAAejgC,eACnB,SAACc,GACCA,EAAGE,iBACHkI,EAAM2B,OAAO3G,EAAM,CACjBg8B,cAAc,MAGlB,CAACh3B,EAAOhF,IAGJi8B,EAAqBngC,cAAA,iB,8SAAA,0BACzB,iBAAOc,GAAP,sGACEA,EAAGE,iBADL,kBAIUkI,EAAMk3B,aAAal8B,GAJ7B,OAKIV,EAAUnD,EAAE,wBAAD,OAAyB6D,EAAKR,OAAS,CAAElC,KAAM,YAL9D,gDAOIgC,EAAS,UACP,KAAIsS,eADG,QACQzV,EAAE,8CACjB,CACEmB,KAAM,UAVd,+DADyB,sDAgBzB,CAAC0H,EAAOhF,EAAM7D,EAAGmD,IAGb68B,EAAiBrgC,eACrB,SAACc,GACCA,EAAGE,iBACHkI,EAAMo3B,SAASp8B,KAEjB,CAACgF,EAAOhF,IAGV,OACE,gCACE,gBAACyC,GAAA,EAAD,kBAAoBC,aAAYvG,EAAE,cAAkBmG,IACpD,gBAACK,EAAA,EAAD,oBAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,kBACnC,gBAACyG,GAAA,EAAD,oBACMN,EADN,CAEExB,MAAO,CACL,CACExD,KAAM,SACNqE,MAAOxF,EAAE,+BAAgC,CACvCiJ,SAAUpF,EAAKR,OAEjBiB,QAASi7B,EACT5c,QAAS5e,EAAIy7B,QAAwB,WAAd37B,EAAK4N,MAE9B,CACEtQ,KAAM,SACNqE,MAAOxF,EAAE,+BAAgC,CACvCiJ,SAAUpF,EAAKR,OAEjBiB,QAASm7B,EACT9c,QAAS5e,EAAIy7B,QAAwB,WAAd37B,EAAK4N,MAE9B,CACEtQ,KAAM,SACNqE,MAAOxF,EAAE,gCAAiC,CACxCiJ,SAAUpF,EAAKR,OAEjBiB,QAAS86B,EACTzc,QAAS5e,EAAIu7B,SAAyB,UAAdz7B,EAAK4N,MAE/B,CACEtQ,KAAM,SACNqE,MAAOxF,EAAE,iBACTsE,QAASw7B,EACTnd,QAAS5e,EAAIg8B,cAEf,CACE5+B,KAAM,aAER,CACEA,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,iBAAP,KACL0G,WAAW,EACXpC,QAASs7B,EACTjd,QAAS9e,EAAK4D,WAEhB,CACEtG,KAAM,SACNqE,MAAOxF,EAAE,oBACTsE,QAAS07B,EACTrd,SAAU9e,EAAK4D,WAAa5D,EAAK0lB,aAEnC,CACEpoB,KAAM,SACNqE,MAAO,GAAF,OAAKxF,EAAE,mBAAP,KACL0G,WAAW,EACXpC,QAASo7B,EACT/c,SAAU9e,EAAK4D,YAAc5D,EAAK0lB,sB,msBCnHhD,IAAM2W,GAASphC,UAAOgH,IAAV,0EAAGhH,CAAH,wBAIGqhC,GAzEf,SAASA,YAAT,GAAoD,IAA7BC,EAA6B,EAA7BA,UAAcxoB,EAAe,0CAC1C5X,EAAMC,cAAND,EACFqgC,EAAcv2B,cACdw2B,EAAU3gC,WACd,iBACE,CACE,CACEoD,GAAI,OACJoe,OAAQnhB,EAAE,QACVugC,SAAU,OACVC,KAAMvhC,aACJ,gBAAGG,EAAH,EAAGA,MAAOqhC,EAAV,EAAUA,IAAV,OACE,gBAACx8B,EAAA,EAAD,CAAMkE,MAAM,SAASC,IAAK,GACxB,gBAAC,KAAD,CAAQL,IAAK04B,EAAIC,SAAS14B,UAAWC,KAAM,KAD7C,IACqD7I,EAAO,IACzDihC,EAAYt9B,KAAO09B,EAAIC,SAAS39B,IAAhC,WAA0C/C,EAAE,OAA5C,UAKTogC,EACI,CACEr9B,GAAI,QACJoe,OAAQnhB,EAAE,SACVugC,SAAU,QACVC,KAAMvhC,aAAS,gBAAGG,EAAH,EAAGA,MAAH,OAAkC,gCAAGA,YAEtD0F,EACJ,CACE/B,GAAI,eACJoe,OAAQnhB,EAAE,eACVugC,SAAU,eACVC,KAAMvhC,aAAS,gBAAGG,EAAH,EAAGA,MAAH,OACbA,EAAQ,gBAACmI,EAAA,EAAD,CAAMC,SAAUpI,EAAOy8B,WAAS,IAAM,SAGlD,CACE94B,GAAI,UACJoe,OAAQnhB,EAAE,QACVugC,SAAU,OACVC,KAAMvhC,aAAS,gBAAGwhC,EAAH,EAAGA,IAAH,OACb,gBAACP,GAAD,MACIO,EAAIC,SAASr5B,cAAgB,gBAACK,GAAA,EAAD,KAAQ1H,EAAE,YACxCygC,EAAIC,SAAS/4B,SAAW,gBAACD,GAAA,EAAD,CAAOE,SAAO,GAAE5H,EAAE,UAC1CygC,EAAIC,SAASC,UAAY,gBAACj5B,GAAA,EAAD,KAAQ1H,EAAE,WACnCygC,EAAIC,SAASnX,aAAe,gBAAC7hB,GAAA,EAAD,KAAQ1H,EAAE,mBAI7CogC,EACI,CACEjf,OAAQ,IACRof,SAAU,KACVlO,UAAW,UACXuO,eAAe,EACfJ,KAAMvhC,aACJ,gBAAGwhC,EAAH,EAAGA,IAAKrhC,EAAR,EAAQA,MAAR,OACEihC,EAAYt9B,KAAO3D,EACjB,gBAAC,GAAD,CAAUyE,KAAM48B,EAAIC,WAClB,cAGV57B,GACJgO,QAAO,SAAC+tB,GAAD,OAAOA,OAClB,CAAC7gC,EAAGogC,EAAWC,IAGjB,OAAO,gBAAC,GAAD,qBAAiBC,QAASA,GAAa1oB,K,+uBC3EhD,IA2CekpB,GA3CU,SAAnBA,iBAAoB,GAA4C,IAA1Ct0B,EAA0C,EAA1CA,UAAWJ,EAA+B,EAA/BA,SAAawL,EAAkB,+CAC5D5X,EAAMC,cAAND,EACFqI,EAAU1I,WACd,iBAAM,CACJ,CACEkB,IAAK,GACLtB,MAAOS,EAAE,WAEX,CACEa,IAAK,MACLtB,MAAOS,EAAE,aAEX,CACEa,IAAK,SACLtB,MAAOS,EAAE,WAEX,CACEa,IAAK,YACLtB,MAAOS,EAAE,cAEX,CACEa,IAAK,UACLtB,MAAOS,EAAE,YAEX,CACEa,IAAK,UACLtB,MAAOS,EAAE,eAGb,CAACA,IAGH,OACE,gBAACoyB,GAAA,EAAD,0BACE/pB,QAASA,EACTmE,UAAWA,EACXJ,SAAUA,EACVK,aAAczM,EAAE,WACZ4X,K,0yCC4JV,IAAMmpB,GAAwBjiC,kBAAOgiC,IAAV,iFAAGhiC,CAAH,kBAIZG,gBArLf,SAAS+hC,UACP,IAAMxzB,EAAWC,eACX3N,EAAUC,eAChB,wBAIIG,eAJJ,GACEyI,EADF,KAEED,EAFF,KAGEE,EAHF,KAKM9E,EAAOoM,cACLrH,EAAUkB,cAAVlB,MACA7I,EAAMC,cAAND,EACF4N,EAASkkB,eACf,wBAAkCnyB,YAAe,GAAjD,GAAOizB,EAAP,KAAkBC,EAAlB,KACA,wBAAwBlzB,WAAuB,IAA/C,GAAOk2B,EAAP,KAAa2G,EAAb,KACA,wBAAoC78B,WAAe,GAAnD,GAAOshC,EAAP,KAAmBC,EAAnB,KACA,wBAA8BvhC,WAAyB,IAAvD,GAAO4wB,EAAP,KAAgB4Q,EAAhB,KACMp9B,EAAMoM,aAAUrM,EAAKf,IACrBV,EAAQuL,EAAO3B,IAAI,UAAY,GAC/B6G,EAASlF,EAAO3B,IAAI,WAAa,GACjC8E,EAAOnD,EAAO3B,IAAI,SAAW,OAC7B6nB,GAAalmB,EAAO3B,IAAI,cAAgB,OAAOm1B,cAG/CxC,EAAOyC,SAASzzB,EAAO3B,IAAI,SAAW,IAAK,IAGjDtM,aAAgB,YACC,iB,2SAAA,0BAAG,yHAChBkzB,GAAa,GADG,kBAIShqB,EAAMpG,UAAU,CACrC8hB,OARM,GAQEqa,EACRxb,MATM,GAUNrS,OACA+iB,YACAzxB,QACAyQ,WAVY,OAIRwuB,EAJQ,OAYdJ,EAAcK,KAAKC,KAAKF,EAASG,MAAmBC,MAf5C,KAgBRP,EAAWG,EAAS/0B,KAAI,SAACo1B,GAAD,OAAaA,EAAE5+B,OAbzB,uBAed8vB,GAAa,GAfC,+EAAH,gBAAT+O,YAAS,mCAmBfA,KACC,CAACv/B,EAAO0O,EAAM+B,EAAQ8rB,EAAM9K,EAAWjrB,IAE1ClJ,aAAgB,WACd,IAAI0Q,EAAWxH,EAAMyD,YAEhBwG,EAEiB,QAAXA,EACTzC,EAAWxH,EAAMyD,YAAYwG,QAAO,SAAC6uB,GAAD,OAAOpR,EAAQjU,SAASqlB,EAAE5+B,OAC1C,WAAX+P,EACTzC,EAAWxH,EAAMg5B,OAAO/uB,QAAO,SAAC6uB,GAAD,OAAOpR,EAAQjU,SAASqlB,EAAE5+B,OACrC,cAAX+P,EACTzC,EAAWxH,EAAMi5B,UAAUhvB,QAAO,SAAC6uB,GAAD,OAAOpR,EAAQjU,SAASqlB,EAAE5+B,OACxC,YAAX+P,EACTzC,EAAWxH,EAAMk5B,QAAQjvB,QAAO,SAAC6uB,GAAD,OAAOpR,EAAQjU,SAASqlB,EAAE5+B,OACtC,YAAX+P,IACTzC,EAAWxH,EAAMm5B,QAAQlvB,QAAO,SAAC6uB,GAAD,OAAOpR,EAAQjU,SAASqlB,EAAE5+B,QAV1DsN,EAAWxH,EAAM4L,OAAO3B,QAAO,SAAC6uB,GAAD,OAAOpR,EAAQjU,SAASqlB,EAAE5+B,OAc3Dy5B,EAAQ,KAAOnsB,GAAU,SAACrL,GAAD,OAAUurB,EAAQ0R,QAAQj9B,EAAKjC,UACvD,CACD+P,EACAjK,EAAM4L,OACN5L,EAAMg5B,OACNh5B,EAAMyD,YACNzD,EAAMi5B,UACNj5B,EAAMk5B,QACNl5B,EAAMm5B,QACNzR,IAGF,IAAMnuB,EAAezC,eACnB,SAACmT,GACKA,GACFlF,EAAOmU,IAAI,SAAUjP,GACrBlF,EAAOpD,OAAO,SAEdoD,EAAOpD,OAAO,UAGhB1K,EAAQyO,QAAQ,CACdY,SAAU3B,EAAS2B,SACnBnB,OAAQJ,EAAOM,eAGnB,CAACN,EAAQ9N,EAAS0N,EAAS2B,WAGvB+yB,EAAeviC,eACnB,SAACwY,GACmBA,EAAM7V,OAAhBlD,OAGNwO,EAAOmU,IAAI,QAAS5J,EAAM7V,OAAOlD,OACjCwO,EAAOpD,OAAO,SAEdoD,EAAOpD,OAAO,SAGhB1K,EAAQyO,QAAQ,CACdY,SAAU3B,EAAS2B,SACnBnB,OAAQJ,EAAOM,eAGnB,CAACN,EAAQ9N,EAAS0N,EAAS2B,WAG7B,OACE,gBAACtC,EAAA,EAAD,CACErH,MAAOxF,EAAE,WACToB,KAAM,gBAAC,WAAD,CAAUC,MAAM,iBACtB6G,QACE,gCACGnE,EAAIijB,YACH,gBAAC,IAAD,KACE,gBAAC3hB,EAAA,EAAD,CACElE,KAAK,SACL61B,UAAQ,QACRC,sBAAoB,SACpBC,oBAAkB,aAClB5yB,QAASoE,EACTtH,KAAM,gBAAC,WAAD,OAELpB,EAAE,iBARL,QAeR,gBAAC8M,EAAA,EAAD,KAAU9M,EAAE,YACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,6HAEiDxD,EAAK0yB,cAFtD,gCAMF,gBAACvyB,EAAA,EAAD,CAAMmE,IAAK,GACT,gBAAC+5B,GAAA,EAAD,CACEpL,OAAK,EACL33B,MAAOiD,EACP/C,YAAW,UAAKU,EAAE,UAAP,KACXX,SAAU6iC,IAEZ,gBAACnB,GAAD,CAAuBv0B,UAAWsG,EAAQ1G,SAAUhK,KAEtD,gBAAC,GAAD,CACEyzB,KAAMA,EACNuK,UAAWr8B,EAAIq+B,OACfxP,UAAWA,EACXgM,KAAMA,EACNyD,SAxIQ,GAyIRpB,WAAYA,EACZqB,qBAAqB,QAEtBv+B,EAAIijB,YACH,gBAACzhB,GAAA,EAAD,CACEC,MAAOxF,EAAE,iBACTyF,eAAgBmD,EAChBlD,OAAQiD,GAER,gBAACS,GAAA,EAAD,CAAQxD,SAAUgD,S,yMChCb3J,oBAlJf,SAASsjC,gBACP,IAAQC,EAAyBz4B,cAAzBy4B,qBACAr/B,EAAc6G,cAAd7G,UACFU,EAAOiG,cACL9J,EAAMC,cAAND,EAEFqI,EAAU,CACd,CACE8P,MAAO,oBACP3S,MAAOxF,EAAE,sBACTk5B,YAAal5B,EACX,gEAGJ,CACEmY,MAAO,mBACP3S,MAAOxF,EAAE,oBACTk5B,YAAal5B,EACX,iEAGJ,CACEmY,MAAO,qBACP3S,MAAOxF,EAAE,sBACTk5B,YAAal5B,EACX,gEAGJ,CACEkT,WAAW,GAEb,CACEyP,QAASiG,IACTzQ,MAAO,oBACP3S,MAAOxF,EAAE,mBACTk5B,YAAal5B,EACX,sEAGJ,CACE2iB,QAASiG,IACTzQ,MAAO,kBACP3S,MAAOxF,EAAE,gBACTk5B,YAAal5B,EAAE,0DAInBL,aAAgB,WACd6iC,EAAqB//B,UAAU,MAC9B,CAAC+/B,IAEJ,IAAMC,EAAqB,MAAS,WAClCt/B,EAAUnD,EAAE,uBAAwB,CAClCmB,KAAM,cAEP,KAEG+W,EAAevY,cAAA,iB,6TAAA,0BACnB,iBAAOc,GAAP,kGACQiiC,EAAUF,EAAqBG,WAAWliC,EAAG6B,OAAOe,OAEtD5C,EAAG6B,OAAO2I,QAHhB,gCAIUu3B,EAAqB33B,KAAK,CAC9BsN,MAAO1X,EAAG6B,OAAOe,OALvB,iCAOaq/B,EAPb,gCAQUF,EAAqBh4B,OAAOk4B,GARtC,OAWED,IAXF,kDADmB,sDAcnB,CAACD,EAAsBC,IAEnBG,EAA+C,aAA3BpvB,OAAOhG,SAASQ,OAE1C,OACE,gBAACnB,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,iBAAkBoB,KAAM,gBAAC,YAAD,CAAWC,MAAM,kBACvD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,kBAEX4iC,GACC,gBAACC,GAAA,EAAD,KACE,gBAACv7B,EAAA,EAAD,4EAKJ,gBAAClD,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,gEAGD4yB,IAAI4I,cACH,gCACE,gBAAC,EAAD,CACEvjC,MAAOS,EAAE,iBACTqD,KAAK,QACL61B,YAAal5B,EACX,+DAGF,gBAACjB,EAAA,EAAD,CAAOoC,KAAK,QAAQ/B,MAAOyE,EAAK0xB,MAAOmB,UAAQ,KAGjD,0BAAK12B,EAAE,kBAENqI,EAAQkE,KAAI,SAACimB,GACZ,GAAIA,EAAOtf,YAAcsf,EAAOra,MAC9B,OAAO,2BAGT,IAAMuqB,EAAUF,EAAqBG,WAAWnQ,EAAOra,OAEvD,OACE,gBAAC,EAAD,CACEwK,QAAS6P,EAAO7P,QAChBpjB,MAAOizB,EAAOhtB,MACdnC,KAAMmvB,EAAOra,MACb+gB,YAAa1G,EAAO0G,aAEpB,gBAACptB,GAAA,EAAD,CACEjL,IAAK2xB,EAAOra,MACZpV,GAAIyvB,EAAOra,MACX9U,KAAMmvB,EAAOra,MACblN,UAAWy3B,EACXrjC,SAAU6Y,EACV5P,SACGo6B,GAAWA,EAAQ1tB,UACpBwtB,EAAqB3f,kBAQjC,gBAACggB,GAAA,EAAD,KACE,gBAACv7B,EAAA,EAAD,0J,k1CCrFKrI,oBAtDf,SAAS8jC,WAAT,GAA+C,IAAzBt9B,EAAyB,EAAzBA,eACpB,2BAAoC9F,YAAe,GAAnD,GAAOg9B,EAAP,KAAmBC,EAAnB,KACQh5B,EAASmG,cAATnG,KACAT,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EAEFuV,EAAe5V,cAAA,iB,oTAAA,0BACnB,iBAAOc,GAAP,gGACEA,EAAGE,iBACHi8B,GAAc,GAFhB,kBAKUh5B,EAAKo/B,aALf,OAMIp/B,EAAK8P,SANT,gDAQIvQ,EAAU,KAAMsS,QAAS,CACvBtU,KAAM,UATZ,yBAYIy7B,GAAc,GAZlB,kFADmB,sDAgBnB,CAACh5B,EAAMT,IAGT,OACE,gBAACoC,GAAA,EAAD,CAAOG,QAAM,EAACF,MAAOxF,EAAE,kBAAmByF,eAAgBA,GACxD,gBAACxB,EAAA,EAAD,CAAMC,QAAM,GACV,wBAAM0B,SAAU2P,GACd,gBAACnR,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,kNAOF,gBAAClD,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,6FACTE,WAAY,CACVC,GAAI,mCAIV,gBAACxG,EAAA,EAAD,CAAQlE,KAAK,SAAS+xB,QAAM,GACzByJ,EAAa,GAAH,OAAM38B,EAAE,YAAR,KAAyBA,EAAE,4B,qlDCzClD,IAiJMijC,GAAankC,UAAOgH,IAAV,sEAAGhH,CAAH,sBAIDG,gBArJC,SAAVikC,UAAgB,MACZt/B,EAASmG,cAATnG,KACFC,EAAOiG,cACPuvB,EAAO15B,SAA8B,MAC3C,wBAAwBA,WAAuBkE,EAAKR,MAAQ,IAA5D,GAAOA,EAAP,KAAaouB,EAAb,KACA,wBAAkC9xB,WAAuBkE,EAAKmE,WAA9D,GAAOA,EAAP,KAAkBwxB,EAAlB,KACA,wBAA8C75B,YAAe,GAA7D,GAAOwjC,EAAP,KAAwBC,EAAxB,KACA,wBAAgCzjC,WAAekE,EAAKw/B,UAApD,GAAOA,EAAP,KAAiBC,EAAjB,KACQngC,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EAEFuV,EAAY,mEAAG,iBAAO9U,GAAP,gGACnBA,EAAGE,iBADgB,kBAIXiD,EAAK2/B,WAAW,CACpBlgC,OACA2E,YACAq7B,aAPe,OASjBlgC,EAAUnD,EAAE,iBAAkB,CAC5BmB,KAAM,YAVS,gDAajBgC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAdS,+DAAH,gBAAZoU,aAAY,sCAuBZskB,EAAkB,mEAAG,kBAAO7xB,GAAP,iGACzBwxB,EAAaxxB,GADY,SAEnBpE,EAAK2/B,WAAW,CACpBv7B,cAHuB,OAKzB7E,EAAUnD,EAAE,2BAA4B,CACtCmB,KAAM,YANiB,kDAAH,gBAAlB04B,mBAAkB,sCAoBlB2J,EAAsB,SAAtBA,sBACJJ,GAAmB,SAAC1e,GAAD,OAAWA,MAG1BqV,EAAO,UAAGV,EAAK94B,eAAR,aAAG,EAAcy5B,gBACtBhlB,EAAapR,EAAboR,SAER,OACE,gBAACnI,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,WAAYoB,KAAM,gBAAC,cAAD,CAAaC,MAAM,kBACnD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,YAEZ,wBAAM4F,SAAU2P,EAActU,IAAKo4B,GACjC,gBAAC,EAAD,CACE95B,MAAOS,EAAE,SACTqD,KAAK,YACL61B,YAAal5B,EAAE,mDAEf,gBAACw4B,WAAD,CACElM,UAAWuN,EACXtN,QA7BgB,SAApBuN,kBAAqBt2B,GACzBL,EAAUK,GAASxD,EAAE,wCAAyC,CAC5DmB,KAAM,WA4BA4G,IAAKC,KAGT,gBAAC,EAAD,CACEzI,MAAOS,EAAE,aACTqD,KAAK,OACL61B,YAAal5B,EACX,6FAGF,gBAACjB,EAAA,EAAD,CACEgE,GAAG,OACHk3B,aAAa,OACb76B,MAAOiE,EACPhE,SA1De,SAAnBuyB,iBAAoBnxB,GACxBgxB,EAAQhxB,EAAG6B,OAAOlD,QA0DVyyB,UAAQ,KAIZ,gBAAC,EAAD,CACE7E,QAAQ,EACRztB,MAAOS,EAAE,YACTqD,KAAK,WACL61B,YACE,gCACE,gBAAC5xB,EAAA,EAAD,oHAEkD,IAChD,qBACEmM,KAAK,mCACLnR,OAAO,SACPmhC,IAAI,cAHN,sBAHF,OAeJ,gBAAC78B,EAAA,EAAD,CACE7D,GAAG,WACHsF,QAASq7B,KACTtkC,MAAOikC,EACPhkC,SApEmB,SAAvBskC,qBAAwBvkC,GAC5BkkC,EAAYlkC,IAoEJmJ,UAAWvI,EAAE,eAIjB,gBAACqF,EAAA,EAAD,CAAQlE,KAAK,SAASmH,SAAU0M,IAAa+kB,GAC1C/kB,EAAW,GAAH,OAAMhV,EAAE,UAAR,KAAuBA,EAAE,UAItC,gBAACijC,GAAD,KACE,0BAAKjjC,EAAE,mBACP,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,kFAKF,gBAACjC,EAAA,EAAD,CAAQf,QAASk/B,EAAqBl+B,SAAO,GAC1CtF,EAAE,kBADL,MAIDmjC,GAAmB,gBAAC,GAAD,CAAY19B,eAAgB+9B,Q,w+FCwKtD,IAAMpO,GAASt2B,kBAAO,OAAV,sEAAGA,CAAH,qBAIGG,gBAjTf,SAAS2kC,WAAW,QAClB,EAA0B75B,cAAlBnG,EAAR,EAAQA,KAAMuV,EAAd,EAAcA,QACRrV,EAAOoM,cACLlQ,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UACR,yBAAwB4R,mBAAS,CAC/B/J,QAASlH,EAAKkH,QACd64B,eAAgB//B,EAAK+/B,eACrBtN,YAAazyB,EAAKyyB,YAClBuN,gBAAiBhgC,EAAKggC,gBACtBC,uBAAwBjgC,EAAKigC,uBAC7BC,eAAgBlgC,EAAKkgC,eACrBC,eAAgBngC,EAAKmgC,iBAPvB,GAAOpO,EAAP,KAAa2G,EAAb,KAUM0H,EAAwBpgC,EAAK0yB,cAE7BiM,EAAqB9iC,WACzB,kBACE,MAAS,WACPwD,EAAUnD,EAAE,kBAAmB,CAC7BmB,KAAM,cAEP,OACL,CAACgC,EAAWnD,IAGd,yBAA4C+U,oBAAS,GAArD,GAAOovB,EAAP,KAAuBC,EAAvB,KAEMC,EAAW1kC,cAAA,oEACf,iBAAO88B,GAAP,yGAEID,EAAQC,GAFZ,SAGU74B,EAAK81B,WAAW+C,GAH1B,OAIIgG,IAJJ,gDAMIt/B,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAPZ,yBAUIijC,GAAkB,GAVtB,kFADe,sDAcf,CAACxgC,EAAM6+B,EAAoBt/B,IAGvB+U,EAAevY,cAAA,oEACnB,kBAAOc,GAAP,0GACQ4jC,EAAS,+CAAKxO,GAAN,8BAAap1B,EAAG6B,OAAOS,GAAKtC,EAAG6B,OAAO2I,WADtD,kDADmB,sDAInB,CAAC4qB,EAAMwO,IAGHC,EAA0B3kC,cAAA,oEAC9B,kBAAO4kC,GAAP,0GACQF,EAAS,+CAAKxO,GAAN,IAAYiO,gBAAiBS,KAD7C,kDAD8B,sDAI9B,CAAC1O,EAAMwO,IAGHG,EAA2B7kC,cAAA,oEAC/B,kBAAOc,GAAP,qGACQujC,GAAkBvjC,EAAG6B,OAAO2I,QAC5BwxB,EAFR,+CAEuB5G,GAFvB,IAE6BmO,oBAEvBA,EAJN,uBAKI7qB,EAAQO,UAAU,CAChB2L,YAAY,EACZ7f,MAAOxF,EAAE,wDACT2Z,QACE,gBAACqZ,GAAA,EAAD,CACEptB,SAAQ,mDAAE,8HACFy+B,EAAS5H,GADP,kDAGV3P,WAAY9sB,EAAE,sBACdizB,WAAU,UAAKjzB,EAAE,aAAP,KACVkzB,QAAM,GAEN,gBAAC5rB,EAAA,EAAD,CACEoE,SAAS,uHACTC,OAAQ,CACNu4B,yBAEFt4B,WAAY,CACVC,GAAI,qCAvBlB,0CAgCQw4B,EAAS5H,GAhCjB,kDAD+B,sDAmC/B,CAAC5G,EAAMwO,EAAUrkC,EAAGmZ,EAAS+qB,IAGzBO,EAAkB,oEAAG,kBAAO5oB,GAAP,iGACnB4gB,EADmB,yBAEpB5G,IAEGoO,gBAAkBxH,EAAQwH,eAAe7N,OAAOva,EAAO,GAE/D2gB,EAAQC,GACR2H,GAAkB,GAPO,kDAAH,gBAAlBK,mBAAkB,sCAmBlBC,EAA+B,SAA/BA,6BAAgC7oB,GAAD,OAAmB,SACtDpb,GAEA,IAAMg8B,EAAU,yBAAK5G,GAErB4G,EAAQwH,eAAgBpoB,GAASpb,EAAGO,cAAc5B,MAClDo9B,EAAQC,GACR2H,GAAkB,KAGpB,OACE,gBAACv3B,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,YAAaoB,KAAM,gBAAC,cAAD,CAAaC,MAAM,kBACpD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,aACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,wFAMF,gBAAC,EAAD,CACE/H,MAAOS,EAAE,8BACTqD,KAAK,cACL61B,YACEgB,IAAI4I,cACA9iC,EAAE,6DACFA,EAAE,gEAGR,gBAAC8L,GAAA,EAAD,CACE/I,GAAG,cACHkI,QAAS4qB,EAAKU,YACdl3B,SAAU6Y,EACV5P,UAAW4xB,IAAI4I,iBAGnB,gBAAC,EAAD,CACEvjC,MAAOS,EAAE,2BACTqD,KAAK,UACL61B,YAAal5B,EACX,sFAGF,gBAAC8L,GAAA,EAAD,CAAQ/I,GAAG,UAAUkI,QAAS4qB,EAAK7qB,QAAS3L,SAAU6Y,KAExD,gBAAC,EAAD,CACE3Y,MAAOS,EAAE,uBACTqD,KAAK,iBACL61B,YAAal5B,EACX,+EAGF,gBAAC8L,GAAA,EAAD,CACE/I,GAAG,iBACHkI,QAAS4qB,EAAKgO,eACdxkC,SAAU6Y,KAGd,gBAAC,EAAD,CACE3Y,MAAOS,EAAE,uBACTqD,KAAK,yBACL61B,YAAal5B,EACX,sEAGF,gBAAC8L,GAAA,EAAD,CACE/I,GAAG,yBACHkI,QAAS4qB,EAAKkO,uBACd1kC,SAAU6Y,KAGb0Q,KACC,gBAAC,EAAD,CACErpB,MAAOS,EAAE,4BACTqD,KAAK,eACL61B,YACE,gBAAC5xB,EAAA,EAAD,CACEoE,SAAS,uHACTC,OAAQ,CACNu4B,yBAEFt4B,WAAY,CACVC,GAAI,mCAKV,gBAACC,GAAA,EAAD,CACE/I,GAAG,eACHkI,SAAU4qB,EAAKmO,eACf3kC,SAAUmlC,KAKhB,gBAAC,EAAD,CACEjlC,MAAOS,EAAE,gBACTqD,KAAK,kBACL61B,YAAal5B,EACX,0GAGF,gBAAC4G,EAAA,EAAD,CACE7D,GAAG,kBACH3D,MAAOy2B,EAAKiO,gBACZz7B,QAAS,CACP,CACE9I,MAAOS,EAAE,UACTZ,MAAO,UAET,CACEG,MAAOS,EAAE,UACTZ,MAAO,WAGXC,SAAUilC,EACV/7B,UAAWvI,EAAE,gBACb+2B,OAAK,KAIT,gBAAC,EAAD,CACEx3B,MAAOS,EAAE,mBACTqD,KAAK,iBACL61B,YAAal5B,EACX,qKAGD61B,EAAKoO,gBACJpO,EAAKoO,eAAe13B,KAAI,SAAC4iB,EAAQtT,GAAT,OACtB,gBAAC5X,EAAA,EAAD,CAAMpD,IAAKgb,EAAOzT,IAAK,GACrB,gBAACrJ,EAAA,EAAD,CACE8B,IAAKgb,EACL9Y,GAAE,wBAAmB8Y,GACrBzc,MAAO+vB,EACPhmB,WAAYgmB,EACZ7vB,YAAY,cACZuyB,UAAQ,EACRttB,MAAI,EACJlF,SAAUqlC,EAA6B7oB,KAEzC,gBAACuZ,GAAD,KACE,gBAAClW,GAAA,EAAD,CAAS1E,QAASxa,EAAE,iBAAkBwS,UAAU,OAC9C,gBAAC+H,GAAA,EAAD,CAAYjW,QAAS,0BAAMmgC,EAAmB5oB,KAC5C,gBAAC,YAAD,aAOZ,gBAAC5X,EAAA,EAAD,CAAM2iB,QAAQ,gBAAgBxe,IAAK,EAAGyuB,MAAO,CAAE8N,SAAU,SACtD,UAAC9O,EAAKoO,sBAAN,OAAC,EAAqB14B,QACiC,KAAxDsqB,EAAKoO,eAAepO,EAAKoO,eAAe14B,OAAS,GAW/C,6BAVA,gBAAC+O,GAAA,EAAD,KACE,gBAACjV,EAAA,EAAD,CAAQlE,KAAK,SAASmD,QApKV,SAAlBsgC,kBACJ,IAAMnI,EAAU,+CACX5G,GADQ,IAEXoO,eAAgB,GAAF,kCAAOpO,EAAKoO,gBAAkB,IAA9B,CAAmC,OAGnDzH,EAAQC,IA8JkDn3B,SAAO,GACpD,UAAAuwB,EAAKoO,sBAAL,SAAqB14B,OACpB,gBAACjE,EAAA,EAAD,oBAEA,gBAACA,EAAA,EAAD,uBAQP68B,GACC,gBAAC7pB,GAAA,EAAD,KACE,gBAACjV,EAAA,EAAD,CACElE,KAAK,SACLmD,QAAS4T,EACT5P,SAAU1E,EAAKoR,UAEf,gBAAC1N,EAAA,EAAD,6B,0aClODrI,oBAxEf,SAAS4lC,UAAT,GAAqC,IAAhBC,EAAgB,EAAhBA,MACb3+B,EAAOC,YAAa,CACxBC,OAAO,IAED0+B,EAAWh7B,cAAXg7B,OACA5hC,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EACFF,EAAUC,eACVgE,EAAMoM,aAAU20B,EAAM/hC,IAEtBiiC,EAAqBrlC,eACzB,SAACc,GACCA,EAAGE,iBACHb,EAAQgB,KAAKgkC,EAAMG,eAErB,CAACnlC,EAASglC,IAGNlF,EAAejgC,cAAA,iB,iTAAA,0BACnB,iBAAOc,GAAP,gGACEA,EAAGE,iBADL,kBAIUokC,EAAOG,OAAOJ,GAJxB,OAKI3hC,EAAUnD,EAAE,sBAAuB,CACjCmB,KAAM,SANZ,gDASIgC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAVZ,+DADmB,sDAenB,CAACnB,EAAG+kC,EAAQD,EAAO3hC,IAGfkzB,EAAa12B,eAAkB,WACnCwD,EAAUnD,EAAE,qBAAsB,CAChCmB,KAAM,WAEP,CAACnB,EAAGmD,IAEP,OACE,gCACE,gBAACmD,GAAA,EAAD,mBAAoBC,aAAYvG,EAAE,cAAkBmG,IACpD,gBAACK,EAAA,EAAD,qBAAiBL,EAAjB,CAAuBI,aAAYvG,EAAE,mBACnC,gBAAC22B,GAAA,EAAD,CAAiBtoB,KAAMy2B,EAAM9xB,IAAK4jB,OAAQP,GACxC,gBAAC8O,GAAA,EAAD,qBAAch/B,EAAd,CAAoB/E,KAAM,gBAAC,WAAD,QACvBpB,EAAE,eAGP,gBAACmlC,GAAA,EAAD,qBAAch/B,EAAd,CAAoB7B,QAAS0gC,EAAoB5jC,KAAM,gBAAC,YAAD,QACpDpB,EAAE,mBAEJ+D,EAAImhC,QACH,gCACE,2BACA,gBAACC,GAAA,EAAD,qBACMh/B,EADN,CAEE7B,QAASs7B,EACTx+B,KAAM,gBAAC,YAAD,MACNsF,WAAS,IAER1G,EAAE,sB,msBCMFolC,OAxEf,SAASA,YAAT,GAAoD,IAA7BhF,EAA6B,EAA7BA,UAAcxoB,EAAe,0CAC1C5X,EAAMC,cAAND,EACFJ,EAAQC,qBAERygC,EAAU3gC,WACd,iBACE,CACE,CACEoD,GAAI,gBACJoe,OAAQnhB,EAAE,YACVugC,SAAU,gBACVK,eAAe,EACfJ,KAAMvhC,aAAS,gBAAGG,EAAH,EAAGA,MAAH,OAAkC,gCAAGA,OAEtD,CACE2D,GAAI,YACJoe,OAAQnhB,EAAE,eACVugC,SAAU,YACVC,KAAMvhC,aACJ,gBAAGG,EAAH,EAAGA,MAAOqhC,EAAV,EAAUA,IAAV,OACErhC,EACE,gCACE,gBAACmI,EAAA,EAAD,CAAMC,SAAUpI,EAAOy8B,WAAS,IAAI,IACnC77B,EAAE,gBAAiB,CAClBqD,KAAMo9B,EAAIC,SAAS2E,UAAUhiC,QAG/B,SAGV,CACEN,GAAI,iBACJoe,OAAQnhB,EAAE,iBACVugC,SAAU,iBACVC,KAAMvhC,aAAS,gBAAGG,EAAH,EAAGA,MAAH,OACbA,EAAQ,gBAACmI,EAAA,EAAD,CAAMC,SAAUpI,EAAOy8B,WAAS,IAAM,SAGlD,CACE94B,GAAI,wBACJoe,OAAQnhB,EAAE,iBACVugC,SAAU,wBACVC,KAAMvhC,aAAS,qBAAGG,MAEd,gBAAC6E,EAAA,EAAD,CAAMkE,MAAM,UACV,gBAAC,gBAAD,CAAe9G,MAAOzB,EAAMgI,WAE5B,SAGRw4B,EACI,CACEjf,OAAQ,IACRof,SAAU,KACVlO,UAAW,UACXuO,eAAe,EACfJ,KAAMvhC,aACJ,gBAAGwhC,EAAH,EAAGA,IAAH,OACE,gBAACx8B,EAAA,EAAD,CAAMkE,MAAM,UACV,gBAAC,GAAD,CAAW28B,MAAOrE,EAAIC,qBAK9B57B,GACJgO,QAAO,SAAC+tB,GAAD,OAAOA,OAClB,CAAC7gC,EAAGJ,EAAMgI,QAASw4B,IAGrB,OAAO,gBAAC,GAAD,qBAAiBE,QAASA,GAAa1oB,K,iyCCuBjC3Y,oBA1Ff,SAASqmC,SACP,IAAMxhC,EAAOoM,cACLlQ,EAAMC,cAAND,EACR,EAAyB+J,cAAjBg7B,EAAR,EAAQA,OAAQnhC,EAAhB,EAAgBA,KACV2hC,EAAoB3hC,EAAKE,MAAQF,EAAKE,KAAKkH,QAC3CjH,EAAMoM,aAAUrM,EAAKf,IAC3B,uBAAkCpD,YAAe,GAAjD,GAAOizB,EAAP,KAAkBC,EAAlB,KACA,uBAAwBlzB,WAAwB,IAAhD,GAAOk2B,EAAP,KAAa2G,EAAb,KACA,uBAAoC78B,WAAe,GAAnD,GAAOshC,EAAP,KAAmBC,EAAnB,KACA,uBAAgCvhC,WAAyB,IAAzD,GAAO6lC,EAAP,KAAiBC,EAAjB,KACM73B,EAASkkB,eACTzvB,EAAQuL,EAAO3B,IAAI,UAAY,GAC/B8E,EAAOnD,EAAO3B,IAAI,SAAW,YAC7B6nB,GAAalmB,EAAO3B,IAAI,cAAgB,QAAQm1B,cAGhDxC,EAAOyC,SAASzzB,EAAO3B,IAAI,SAAW,IAAK,IAkCjD,OA/BAtM,aAAgB,YACC,iB,wSAAA,0BAAG,yHAChBkzB,GAAa,GADG,kBAISkS,EAAOtiC,UAAU,CACtC8hB,OARM,GAQEqa,EACRxb,MATM,GAUNrS,OACA+iB,cARY,OAIRwN,EAJQ,OAUdJ,EAAcK,KAAKC,KAAKF,EAASG,MAAmBC,MAb5C,KAcR+D,EAAYnE,EAAS/0B,KAAI,SAACo1B,GAAD,OAAcA,EAAE5+B,OAX3B,uBAad8vB,GAAa,GAbC,+EAAH,gBAAT+O,YAAS,mCAiBfA,KACC,CAACv/B,EAAO0O,EAAM6tB,EAAM9K,EAAWiR,IAElCplC,aAAgB,WAEd68B,EACE,KACEuI,EAAOz4B,YAAYwG,QAAO,SAAC9N,GAAD,OAAUwgC,EAASlpB,SAAStX,EAAKjC,QAC3D,SAACiC,GAAD,OAAUwgC,EAASvD,QAAQj9B,EAAKjC,UAGnC,CAACgiC,EAAOz4B,YAAak5B,IAGtB,gBAAC34B,EAAA,EAAD,CAAOrH,MAAOxF,EAAE,eAAgBoB,KAAM,gBAAC,WAAD,CAAUC,MAAM,kBACpD,gBAACyL,EAAA,EAAD,KAAU9M,EAAE,gBAEX+D,EAAIq+B,SAAWmD,GACd,gCACE,gBAAC1C,GAAA,EAAD,CAAQzhC,KAAM,gBAAC,cAAD,CAAaC,MAAM,kBAC9BrB,EAAE,kCAAmC,IACtC,gBAACsH,EAAA,EAAD,CACEoE,SAAS,iGACTE,WAAY,CACVC,GAAI,gBAAC,KAAD,CAAM0E,GAAG,2BAInB,4BAIJ,gBAACnM,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,2KAOF,gBAAC,GAAD,CACEuuB,KAAMA,EACNuK,UAAWr8B,EAAIq+B,OACfxP,UAAWA,EACXgM,KAAMA,EACNyD,SAjEQ,GAkERpB,WAAYA,EACZqB,qBAAqB,Y,wBCpGdoD,I,UCAF5mC,UAAO6mC,GAAV,2DAAG7mC,CAAH,0CCIK,SAAS8mC,UAAT,GAAiD,QAA5BvkC,aAA4B,MAApB,UAAoB,EAC9D,OACE,uBACEq5B,KAAMr5B,EACN+kB,MAAM,OACNC,OAAO,OACPkU,QAAQ,YACRzS,QAAQ,OAER,wBAAM+d,EAAE,6xE,iBCsBCC,OAvBf,SAASA,YAAT,GAA8E,QAAvDr3B,aAAuD,MAA/C,GAA+C,EAA3Cs3B,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,YAAazmC,EAAsB,EAAtBA,MAAO6B,EAAe,EAAfA,KACrDpB,EAAMC,cAAND,EAeR,OACE,gBAACqF,EAAA,EAAD,CAAQf,QAdU,SAAd4d,cACCgY,IAAI+L,kBAITzyB,OAAOhG,SAASiG,KAAOyyB,aACrBz3B,EACAs3B,EACA7L,IAAI+L,gBACJD,KAK4B5kC,KAAMA,EAAMkE,SAAO,GAC9C/F,GAASS,EAAE,kB,6/CC+ElB,IAAMmmC,GAASrnC,UAAOgH,IAAV,wEAAGhH,CAAH,iCACD,SAACgD,GAAD,OAAWA,EAAMlC,MAAMyO,QAInBpP,gBA7Ff,SAASmnC,cAAT,GAA2D,IAAlCC,EAAkC,EAAlCA,YAAavjC,EAAqB,EAArBA,WAC5B9C,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UAEF+U,EAAY,iB,6TAAA,0BAAG,iBAAOzX,GAAP,gGACfA,EAAG6B,OAAO2I,QACZo7B,EAAYC,OAAS,+CAASD,EAAYC,QAArB,CAA6B7lC,EAAG6B,OAAOe,QAE5DgjC,EAAYC,OAASD,EAAYC,OAAOxzB,QACtC,SAACyzB,GAAD,OAAOA,IAAM9lC,EAAG6B,OAAOe,QALR,SASbgjC,EAAYx7B,OATC,OAWnB1H,EAAUnD,EAAE,kBAAmB,CAC7BmB,KAAM,YAZW,iDAAH,gBAAZ+W,aAAY,sCAgBZsuB,EAAU,CACd,oBAAqBxmC,EAAE,sBACvB,mBAAoBA,EAAE,qBAGlBymC,EAAUC,aAAgB,CAC9BC,OAAQ,EACRn0B,UAAW,iBAGb,OACE,gBAAC,IAAD,CACE3R,IAAKwlC,EAAYtjC,GACjByC,MACE,gBAACvB,EAAA,EAAD,CAAMkE,MAAM,SAASC,IAAK,GACxB,gBAACqI,EAAA,EAAD,CAAgB3N,WAAYA,IAD9B,IAC8CA,EAAWO,MAG3D+D,SACE,gCACE,gBAACE,EAAA,EAAD,CACEoE,SAAQ,uDACRC,OAAQ,CACNi7B,YAAaP,EAAYQ,SAASC,QAClCR,OAAQD,EAAYC,OAAO/5B,KAAI,SAAC9L,GAAD,OAAQ+lC,EAAQ/lC,MAAKmW,KAAK,OAE3DhL,WAAY,CACVC,GAAI,kCAEL,IACH,gBAACk7B,GAAA,EAAsBN,GACpB,SAAC3kC,GAAD,OACC,gBAACuC,GAAA,EAAevC,EACbukC,EAAYC,OAAO/5B,KAAI,SAAC9L,GAAD,OAAQ+lC,EAAQ/lC,MAAKmW,KAAK,UAIxD,gBAACowB,GAAA,EAAD,yBAAaP,EAAb,CAAsBlgC,aAAYvG,EAAE,cAClC,gBAACmmC,GAAD,KACE,0BAAKnmC,EAAE,kBACP,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACRnB,EAAE,2CAEL,gBAAC8L,GAAA,EAAD,CACEvM,MAAOS,EAAE,sBACTqD,KAAK,oBACL4H,QAASo7B,EAAYC,OAAOhqB,SAAS,qBACrCjd,SAAU6Y,IAEZ,gBAACpM,GAAA,EAAD,CACEvM,MAAOS,EAAE,oBACTqD,KAAK,mBACL4H,QAASo7B,EAAYC,OAAOhqB,SAAS,oBACrCjd,SAAU6Y,OAMpBhQ,QACE,gBAAC7C,EAAA,EAAD,CAAQf,QAAS+hC,EAAY77B,OAAQlF,SAAO,GACzCtF,EAAE,oB,woCC0Db,IAAMinC,GAAOnoC,UAAOooC,KAAV,kEAAGpoC,CAAH,oEAGM,SAACgD,GAAD,OAAWA,EAAMlC,MAAMunC,kBAIxBloC,gBAlJf,SAASmoC,QACP,IAAMtjC,EAAOoM,cACb,EAAsCnG,cAA9BoC,EAAR,EAAQA,YAAak7B,EAArB,EAAqBA,aACbrnC,EAAMC,cAAND,EAEFwD,EADQsuB,eACM7lB,IAAI,SAExBtM,aAAgB,WACdwM,EAAY1J,UAAU,CACpB2gB,MAAO,MAETikB,EAAa5kC,UAAU,CACrB2gB,MAAO,QAER,CAACjX,EAAak7B,IAEjB,IAAMC,EAAqB,KACzBD,EAAaE,mBACb,SAAC1G,GAAD,MAAkB,YAAXA,EAAE1/B,QAGLqmC,EAAqBr7B,EAAYG,YACpCC,KAA2C,SAACzJ,GAK3C,MAAO,CAACA,EAJY,KAAKukC,EAAaE,kBAAmB,CACvD/nC,aAAcsD,EAAWC,SAK5BgO,MAAK,SAAC02B,GAAD,OAAQA,EAAE,IAAM,EAAI,KAE5B,OACE,gBAAC56B,EAAA,EAAD,CAAOrH,MAAM,QAAQpE,KAAM,gBAACwkC,UAAD,CAAWvkC,MAAM,kBAC1C,gBAACyL,EAAA,EAAD,cAEW,kBAAVtJ,GACC,gBAACq/B,GAAA,EAAD,KACE,gBAACv7B,EAAA,EAAD,yGAMO,oBAAV9D,GACC,gBAACq/B,GAAA,EAAD,KACE,gBAACv7B,EAAA,EAAD,8FAMJ,gBAAClD,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,yJACTC,OAAQ,CACN+7B,QAAS,YAEX97B,WAAY,CACVC,GAAI,gBAACo7B,GAAD,UAIT/M,IAAI+L,gBACH,gCACE,yBACGqB,EACC,gBAACjiC,EAAA,EAAD,CAAQf,QAAS,0BAAMgjC,EAAmB98B,WACvCxK,EAAE,eAGL,gBAAC,GAAD,CACE+lC,OAAQ,CACN,WACA,aACA,eAKFC,YAAW,UAAK9L,IAAIyN,IAAT,wBACXl5B,MAAO3K,EAAKf,GACZ3B,KAAM,gBAACwkC,UAAD,CAAWvkC,MAAM,oBAI7B,8BAEA,0BAAKrB,EAAE,gBACP,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,mJAOF,gBAAC,GAAD,KACGkgC,EAAmBj7B,KAAI,YAA+B,+BAA7BzJ,EAA6B,KAAjBujC,EAAiB,KACrD,OAAIA,EAEA,gBAAC,GAAD,CACExlC,IAAKwlC,EAAYtjC,GACjBD,WAAYA,EACZujC,YAAaA,IAMjB,gBAAC,IAAD,CACExlC,IAAKiC,EAAWC,GAChByC,MAAO1C,EAAWO,KAClBwE,MAAO,gBAAC4I,EAAA,EAAD,CAAgB3N,WAAYA,IACnCoF,QACE,gBAAC,GAAD,CACE69B,OAAQ,CAAC,oBACTC,YAAW,UAAK9L,IAAIyN,IAAT,oBACXl5B,MAAO3L,EAAWC,GAClBxD,MAAOS,EAAE,oBASvB,gBAAC6iC,GAAA,EAAD,KACE,gBAACv7B,EAAA,EAAD,4J,80CC1EKsgC,OAhEf,SAASA,YAAT,GAA0C,IAAnBhiC,EAAmB,EAAnBA,SACrB,4BAAwBjG,WAAe,IAAvC,GAAO0D,EAAP,KAAaouB,EAAb,KACA,4BAAgC9xB,YAAe,GAA/C,GAAOqV,EAAP,KAAiBC,EAAjB,KACQ4yB,EAAY99B,cAAZ89B,QACA1kC,EAAc6G,cAAd7G,UACAnD,EAAMC,cAAND,EAEFuV,EAAe5V,cAAA,iB,uTAAA,0BACnB,iBAAOc,GAAP,gGACEA,EAAGE,iBACHsU,GAAY,GAFd,kBAKU4yB,EAAQhlC,OAAO,CACnBQ,SANN,OAQIF,EACEnD,EAAE,oBAAqB,CACrBmB,KAAM,aAGVyE,IAbJ,gDAeIzC,EAAU,KAAIsS,QAAS,CACrBtU,KAAM,UAhBZ,yBAmBI8T,GAAY,GAnBhB,kFADmB,sDAuBnB,CAACjV,EAAGmD,EAAWE,EAAMuC,EAAUiiC,IAG3BjW,EAAmBjyB,eAAkB,SAACwY,GAC1CsZ,EAAQtZ,EAAM7V,OAAOlD,SACpB,IAEH,OACE,wBAAMwG,SAAU2P,GACd,gBAACnR,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,uKAMF,gBAACrD,EAAA,EAAD,KACE,gBAAClF,EAAA,EAAD,CACEoC,KAAK,OACL5B,MAAM,OACNF,SAAUuyB,EACVxyB,MAAOiE,EACPwuB,UAAQ,EACR1oB,WAAS,EACT5E,MAAI,KAGR,gBAACc,EAAA,EAAD,CAAQlE,KAAK,SAASmH,SAAU0M,IAAa3R,GAC1C2R,EAAW,YAAc,Y,4JC7DnB,SAAS8yB,kBAAT,GAAuD,IAA1BhZ,EAA0B,EAA1BA,MAAOlpB,EAAmB,EAAnBA,SACzC5F,EAAMC,cAAND,EAEFuV,EAAY,iB,yUAAA,0BAAG,4HACbuZ,EAAMtkB,SADO,OAEnB5E,IAFmB,iDAAH,gBAAZ2P,eAAY,mCAKlB,OACE,gBAACyd,GAAA,EAAD,CACEptB,SAAU2P,EACVuX,WAAY9sB,EAAE,UACdizB,WAAU,UAAKjzB,EAAE,YAAP,KACVkzB,QAAM,GAELlzB,EAAE,6DAA8D,CAC/D+nC,UAAWjZ,EAAMzrB,Q,wsCCXzB,IAoDe2kC,GApDO,SAAhBA,cAAiB,GAAqB,IAAnBlZ,EAAmB,EAAnBA,MACf9uB,EAAMC,cAAND,EACAmD,EAAc6G,cAAd7G,UACAgW,EAAYpP,cAAZoP,QACR,8BAAoCxZ,YAAwB,GAA5D,GAAO01B,EAAP,KAAmBC,EAAnB,KAEA31B,aAAgB,WACV01B,GACF3X,YAAW,WACT4X,GAAc,KACb,OAEJ,CAACD,IAEJ,IAAMgB,EAAa12B,eAAkB,WACnC21B,GAAc,GACdnyB,EAAUnD,EAAE,iCAAkC,CAC5CmB,KAAM,cAEP,CAACgC,EAAWnD,IAETioC,EAAyBtoC,eAAkB,WAC/CwZ,EAAQO,UAAU,CAChBlU,MAAOxF,EAAE,gBACTqlB,YAAY,EACZ1L,QACE,gBAACmuB,kBAAD,CAAmBliC,SAAUuT,EAAQS,eAAgBkV,MAAOA,QAG/D,CAAC9uB,EAAGmZ,EAAS2V,IAEhB,OACE,gBAAC,IAAD,CACEjuB,IAAKiuB,EAAM/rB,GACXyC,MAAOspB,EAAMzrB,KACb+D,SAAU,4BAAO0nB,EAAMoZ,QACvBhgC,QACE,gCACE,gBAACyuB,GAAA,EAAD,CAAiBtoB,KAAMygB,EAAMoZ,OAAQtR,OAAQP,GAC3C,gBAAChxB,EAAA,EAAD,CAAQlE,KAAK,SAASC,KAAM,gBAAC,WAAD,MAAckE,SAAO,EAAC04B,eAAa,GAC/Ch+B,EAAbq1B,EAAe,SAAc,UAGlC,gBAAChwB,EAAA,EAAD,CAAQf,QAAS2jC,EAAwB3iC,SAAO,GAAhD,c,gpCCmBKrG,oBAzDf,SAASkpC,SACP,IAAMrkC,EAAOoM,cACLlQ,EAAMC,cAAND,EACA6nC,EAAY99B,cAAZ89B,QACR,uBAAgE3nC,eAAhE,GAAOkoC,EAAP,KAAqBC,EAArB,KAAyCC,EAAzC,KACMvkC,EAAMoM,aAAUrM,EAAKf,IAE3B,OACE,gBAAC8J,EAAA,EAAD,CACErH,MAAOxF,EAAE,cACToB,KAAM,gBAAC,WAAD,CAAUC,MAAM,iBACtB6G,QACE,gCACGnE,EAAIwkC,cACH,gBAAC,IAAD,KACE,gBAACljC,EAAA,EAAD,CACElE,KAAK,SACL/B,MAAK,UAAKY,EAAE,aAAP,KACLsE,QAAS+jC,OAOnB,gBAACv7B,EAAA,EAAD,KAAU9M,EAAE,eACZ,gBAACoE,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,CACEoE,SAAS,wMAGTE,WAAY,CACVC,GACE,qBAAG4H,KAAK,wCAAwCnR,OAAO,eAK/D,gBAACkC,EAAA,EAAD,CACEK,MAAOgjC,EAAQplC,UACfkC,MAAOkjC,EAAQv7B,YACfY,QAAS,gBAACC,GAAA,EAAD,CAAYC,QAAM,GAAEpN,EAAE,WAC/B+E,WAAY,oBAAC+pB,GAAD,OACV,gBAAC,GAAD,CAAejuB,IAAKiuB,EAAM/rB,GAAI+rB,MAAOA,OAGzC,gBAACvpB,GAAA,EAAD,CACEC,MAAOxF,EAAE,kBACTyF,eAAgB6iC,EAChB5iC,OAAQ0iC,GAER,gBAAC,GAAD,CAAaxiC,SAAU0iC,SCjEhB,SAASE,WAAT,GAAkD,QAA5BnnC,aAA4B,MAApB,UAAoB,EAC/D,OACE,uBACEq5B,KAAMr5B,EACN+kB,MAAM,OACNC,OAAO,OACPkU,QAAQ,YACRzS,QAAQ,OAER,wBAAM+d,EAAE,o0DCkBC4C,OAzBf,SAASA,SACP,IAAQzoC,EAAMC,cAAND,EACR,OACE,gBAAC6M,EAAA,EAAD,CAAOrH,MAAM,SAASpE,KAAM,gBAAConC,WAAD,CAAYnnC,MAAM,kBAC5C,gBAACyL,EAAA,EAAD,eACA,gBAAC1I,EAAA,EAAD,CAAMjD,KAAK,aACT,gBAACmG,EAAA,EAAD,0MAMF,yBACE,gBAACjC,EAAA,EAAD,CACEf,QAAS,0BACNkP,OAAOhG,SAASiG,KAAO,oCAGzBzT,EAAE,eALL,S,opCC6KOsoB,IAlIqB,SAA9BA,8BACJ,IAAMxkB,EAAOoM,cACPnM,EAAMoM,aAAUrM,EAAKf,IACnB/C,EAAMC,cAAND,EAEF0oC,EAAqB/oC,IAAM04B,SAC/B,iBAAO,CACL6K,QAAS,CACP7/B,KAAMrD,EAAE,WACR2oB,KAAM,YACNe,UAAWwZ,GACXyF,SAAS,EACThmC,MAAO3C,EAAE,WACToB,KAAMwnC,eAERrG,cAAe,CACbl/B,KAAMrD,EAAE,iBACR2oB,KAAM,0BACNe,UAAW6Y,GACXoG,SAAS,EACThmC,MAAO3C,EAAE,WACToB,KAAMynC,aAERC,IAAK,CACHzlC,KAAMrD,EAAE,cACR2oB,KAAM,mBACNe,UAAWye,GACXQ,QAAS5kC,EAAIwkC,aACb5lC,MAAO3C,EAAE,WACToB,KAAM2nC,YAGR3P,QAAS,CACP/1B,KAAMrD,EAAE,WACR2oB,KAAM,oBACNe,UAAW0P,EACXuP,QAAS5kC,EAAIuM,OACb3N,MAAO3C,EAAE,QACToB,KAAM4nC,YAERpF,SAAU,CACRvgC,KAAMrD,EAAE,YACR2oB,KAAM,qBACNe,UAAWka,GACX+E,QAAS5kC,EAAIuM,OACb3N,MAAO3C,EAAE,QACToB,KAAM6nC,eAER3M,SAAU,CACRj5B,KAAMrD,EAAE,YACR2oB,KAAM,qBACNe,UAAW4S,GACXqM,QAAS5kC,EAAIuM,OACb3N,MAAO3C,EAAE,QACToB,KAAM8nC,cAERlI,QAAS,CACP39B,KAAMrD,EAAE,WACR2oB,KAAM,oBACNe,UAAWsX,GACX2H,SAAS,EACThmC,MAAO3C,EAAE,QACToB,KAAM+nC,YAER/L,OAAQ,CACN/5B,KAAMrD,EAAE,UACR2oB,KAAM,mBACNe,UAAW0T,GACXuL,SAAS,EACThmC,MAAO3C,EAAE,QACToB,KAAMgoC,aAER9D,OAAQ,CACNjiC,KAAMrD,EAAE,eACR2oB,KAAM,mBACNe,UAAW4b,GACXqD,SAAS,EACThmC,MAAO3C,EAAE,QACToB,KAAMioC,YAERlL,OAAQ,CACN96B,KAAMrD,EAAE,UACR2oB,KAAM,mBACNe,UAAWyU,GACXwK,QAAS5kC,EAAIq+B,OACbz/B,MAAO3C,EAAE,QACToB,KAAMk8B,mBAERtB,OAAQ,CACN34B,KAAMrD,EAAE,UACR2oB,KAAM,mBACNe,UAAWsS,GACX2M,QAAS5kC,EAAI+uB,OACbnwB,MAAO3C,EAAE,QACToB,KAAMkoC,gBAGRlC,MAAO,CACL/jC,KAAM,QACNslB,KAAM,+BACNe,UAAW0d,GACXuB,QAAS5kC,EAAIuM,WAAa4pB,IAAI+L,iBAAmBrd,KACjDjmB,MAAO3C,EAAE,gBACToB,KAAMwkC,WAER6C,OAAQ,CACNplC,KAAM,SACNslB,KAAM,gCACNe,UAAW+e,GACXE,QAAS5kC,EAAIuM,QAAUsY,IACvBjmB,MAAO3C,EAAE,gBACToB,KAAMonC,eAGV,CAACzkC,EAAIwkC,aAAcxkC,EAAI+uB,OAAQ/uB,EAAIq+B,OAAQr+B,EAAIuM,OAAQtQ,IAazD,OAVuBL,IAAM04B,SAC3B,kBACEtmB,OAAOC,KAAK02B,GAAQt4B,QAClB,SAACmoB,EAAK13B,GAAN,OACE6nC,EAAO7nC,GAAK8nC,QAAZ,wDAA0BpQ,GAA1B,CAA+BmQ,EAAO7nC,KAAQ03B,IAChD,MAEJ,CAACmQ","file":"authenticated-routes.e36dbb6dd8387f2dbb41.js","sourcesContent":["import { observer } from \"mobx-react\";\nimport { SearchIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport styled, { useTheme } from \"styled-components\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport useKeyDown from \"~/hooks/useKeyDown\";\nimport { isModKey } from \"~/utils/keyboard\";\nimport { searchPath } from \"~/utils/routeHelpers\";\nimport Input, { Outline } from \"./Input\";\n\ntype Props = {\n  source: string;\n  placeholder?: string;\n  label?: string;\n  labelHidden?: boolean;\n  collectionId?: string;\n  value?: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => unknown;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => unknown;\n};\n\nfunction InputSearchPage({\n  onKeyDown,\n  value,\n  onChange,\n  placeholder,\n  label,\n  collectionId,\n  source,\n}: Props) {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const theme = useTheme();\n  const history = useHistory();\n  const { t } = useTranslation();\n  const [isFocused, setFocused, setUnfocused] = useBoolean(false);\n  const focus = React.useCallback(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  useKeyDown(\"f\", (ev: KeyboardEvent) => {\n    if (isModKey(ev)) {\n      ev.preventDefault();\n      focus();\n    }\n  });\n\n  const handleKeyDown = React.useCallback(\n    (ev: React.KeyboardEvent<HTMLInputElement>) => {\n      if (ev.key === \"Enter\") {\n        ev.preventDefault();\n        history.push(\n          searchPath(ev.currentTarget.value, {\n            collectionId,\n            ref: source,\n          })\n        );\n      }\n\n      if (onKeyDown) {\n        onKeyDown(ev);\n      }\n    },\n    [history, collectionId, source, onKeyDown]\n  );\n\n  return (\n    <InputMaxWidth\n      innerRef={inputRef}\n      type=\"search\"\n      placeholder={placeholder || `${t(\"Search\")}…`}\n      value={value}\n      onChange={onChange}\n      onKeyDown={handleKeyDown}\n      icon={\n        <SearchIcon\n          color={isFocused ? theme.inputBorderFocused : theme.inputBorder}\n        />\n      }\n      label={label}\n      onFocus={setFocused}\n      onBlur={setUnfocused}\n      margin={0}\n      labelHidden\n    />\n  );\n}\n\nconst InputMaxWidth = styled(Input)`\n  max-width: 30vw;\n\n  ${Outline} {\n    border-radius: 16px;\n  }\n`;\n\nexport default observer(InputSearchPage);\n","import styled from \"styled-components\";\n\nconst Divider = styled.hr`\n  border: 0;\n  border-bottom: 1px solid ${(props) => props.theme.divider};\n  margin: 0;\n  padding: 0;\n`;\n\nexport default Divider;\n","import { debounce } from \"lodash\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport RootStore from \"~/stores/RootStore\";\nimport Collection from \"~/models/Collection\";\nimport Group from \"~/models/Group\";\nimport GroupNew from \"~/scenes/GroupNew\";\nimport Button from \"~/components/Button\";\nimport ButtonLink from \"~/components/ButtonLink\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport GroupListItem from \"~/components/GroupListItem\";\nimport Input from \"~/components/Input\";\nimport Modal from \"~/components/Modal\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Text from \"~/components/Text\";\nimport withStores from \"~/components/withStores\";\n\ntype Props = WithTranslation &\n  RootStore & {\n    collection: Collection;\n    onSubmit: () => void;\n  };\n\n@observer\nclass AddGroupsToCollection extends React.Component<Props> {\n  @observable\n  newGroupModalOpen = false;\n\n  @observable\n  query = \"\";\n\n  handleNewGroupModalOpen = () => {\n    this.newGroupModalOpen = true;\n  };\n\n  handleNewGroupModalClose = () => {\n    this.newGroupModalOpen = false;\n  };\n\n  handleFilter = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    this.query = ev.target.value;\n    this.debouncedFetch();\n  };\n\n  debouncedFetch = debounce(() => {\n    this.props.groups.fetchPage({\n      query: this.query,\n    });\n  }, 250);\n\n  handleAddGroup = (group: Group) => {\n    const { t } = this.props;\n\n    try {\n      this.props.collectionGroupMemberships.create({\n        collectionId: this.props.collection.id,\n        groupId: group.id,\n        permission: \"read_write\",\n      });\n      this.props.toasts.showToast(\n        t(\"{{ groupName }} was added to the collection\", {\n          groupName: group.name,\n        }),\n        {\n          type: \"success\",\n        }\n      );\n    } catch (err) {\n      this.props.toasts.showToast(t(\"Could not add user\"), {\n        type: \"error\",\n      });\n      console.error(err);\n    }\n  };\n\n  render() {\n    const { groups, policies, collection, auth, t } = this.props;\n    const { user, team } = auth;\n    if (!user || !team) {\n      return null;\n    }\n\n    const can = policies.abilities(team.id);\n\n    return (\n      <Flex column>\n        {can.createGroup && (\n          <Text type=\"secondary\">\n            {t(\"Can’t find the group you’re looking for?\")}{\" \"}\n            <ButtonLink onClick={this.handleNewGroupModalOpen}>\n              {t(\"Create a group\")}\n            </ButtonLink>\n            .\n          </Text>\n        )}\n\n        <Input\n          type=\"search\"\n          placeholder={`${t(\"Search by group name\")}…`}\n          value={this.query}\n          onChange={this.handleFilter}\n          label={t(\"Search groups\")}\n          labelHidden\n          flex\n        />\n        <PaginatedList\n          empty={\n            this.query ? (\n              <Empty>{t(\"No groups matching your search\")}</Empty>\n            ) : (\n              <Empty>{t(\"No groups left to add\")}</Empty>\n            )\n          }\n          items={groups.notInCollection(collection.id, this.query)}\n          fetch={this.query ? undefined : groups.fetchPage}\n          renderItem={(item: Group) => (\n            <GroupListItem\n              key={item.id}\n              group={item}\n              showFacepile\n              renderActions={() => (\n                <ButtonWrap>\n                  <Button onClick={() => this.handleAddGroup(item)} neutral>\n                    {t(\"Add\")}\n                  </Button>\n                </ButtonWrap>\n              )}\n            />\n          )}\n        />\n        {can.createGroup && (\n          <Modal\n            title={t(\"Create a group\")}\n            onRequestClose={this.handleNewGroupModalClose}\n            isOpen={this.newGroupModalOpen}\n          >\n            <GroupNew onSubmit={this.handleNewGroupModalClose} />\n          </Modal>\n        )}\n      </Flex>\n    );\n  }\n}\n\nconst ButtonWrap = styled.div`\n  margin-left: 6px;\n`;\n\nexport default withTranslation()(withStores(AddGroupsToCollection));\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\n\ntype Props = {\n  onRemove: () => void;\n};\n\nfunction MemberMenu({ onRemove }: Props) {\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n  });\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Member options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"button\",\n              title: t(\"Remove\"),\n              dangerous: true,\n              onClick: onRemove,\n            },\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default MemberMenu;\n","import * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Membership from \"~/models/Membership\";\nimport User from \"~/models/User\";\nimport Avatar from \"~/components/Avatar\";\nimport Badge from \"~/components/Badge\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport InputSelect, { Props as SelectProps } from \"~/components/InputSelect\";\nimport ListItem from \"~/components/List/Item\";\nimport Time from \"~/components/Time\";\nimport MemberMenu from \"~/menus/MemberMenu\";\n\ntype Props = {\n  user: User;\n  membership?: Membership | undefined;\n  canEdit: boolean;\n  onAdd?: () => void;\n  onRemove?: () => void;\n  onUpdate?: (permission: string) => void;\n};\n\nconst MemberListItem = ({\n  user,\n  membership,\n  onRemove,\n  onUpdate,\n  onAdd,\n  canEdit,\n}: Props) => {\n  const { t } = useTranslation();\n  const PERMISSIONS = React.useMemo(\n    () => [\n      {\n        label: t(\"View only\"),\n        value: \"read\",\n      },\n      {\n        label: t(\"View and edit\"),\n        value: \"read_write\",\n      },\n    ],\n    [t]\n  );\n\n  return (\n    <ListItem\n      title={user.name}\n      subtitle={\n        <>\n          {user.lastActiveAt ? (\n            <Trans>\n              Active <Time dateTime={user.lastActiveAt} /> ago\n            </Trans>\n          ) : (\n            t(\"Never signed in\")\n          )}\n          {user.isInvited && <Badge>{t(\"Invited\")}</Badge>}\n          {user.isAdmin && <Badge primary={user.isAdmin}>{t(\"Admin\")}</Badge>}\n        </>\n      }\n      image={<Avatar src={user.avatarUrl} size={32} />}\n      actions={\n        <Flex align=\"center\" gap={8}>\n          {onUpdate && (\n            <Select\n              label={t(\"Permissions\")}\n              options={PERMISSIONS}\n              value={membership ? membership.permission : undefined}\n              onChange={onUpdate}\n              disabled={!canEdit}\n              ariaLabel={t(\"Permissions\")}\n              labelHidden\n              nude\n            />\n          )}\n          {canEdit && (\n            <>\n              {onRemove && <MemberMenu onRemove={onRemove} />}\n              {onAdd && (\n                <Button onClick={onAdd} neutral>\n                  {t(\"Add\")}\n                </Button>\n              )}\n            </>\n          )}\n        </Flex>\n      }\n    />\n  );\n};\n\nconst Select = styled(InputSelect)`\n  margin: 0;\n  font-size: 14px;\n  border-color: transparent;\n  box-shadow: none;\n  color: ${(props) => props.theme.textSecondary};\n\n  select {\n    margin: 0;\n  }\n` as React.ComponentType<SelectProps>;\n\nexport default MemberListItem;\n","import { debounce } from \"lodash\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport RootStore from \"~/stores/RootStore\";\nimport Collection from \"~/models/Collection\";\nimport User from \"~/models/User\";\nimport Invite from \"~/scenes/Invite\";\nimport ButtonLink from \"~/components/ButtonLink\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport Input from \"~/components/Input\";\nimport Modal from \"~/components/Modal\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Text from \"~/components/Text\";\nimport withStores from \"~/components/withStores\";\nimport MemberListItem from \"./components/MemberListItem\";\n\ntype Props = WithTranslation &\n  RootStore & {\n    collection: Collection;\n    onSubmit: () => void;\n  };\n\n@observer\nclass AddPeopleToCollection extends React.Component<Props> {\n  @observable\n  inviteModalOpen = false;\n\n  @observable\n  query = \"\";\n\n  handleInviteModalOpen = () => {\n    this.inviteModalOpen = true;\n  };\n\n  handleInviteModalClose = () => {\n    this.inviteModalOpen = false;\n  };\n\n  handleFilter = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    this.query = ev.target.value;\n    this.debouncedFetch();\n  };\n\n  debouncedFetch = debounce(() => {\n    this.props.users.fetchPage({\n      query: this.query,\n    });\n  }, 250);\n\n  handleAddUser = (user: User) => {\n    const { t } = this.props;\n\n    try {\n      this.props.memberships.create({\n        collectionId: this.props.collection.id,\n        userId: user.id,\n        permission: \"read_write\",\n      });\n      this.props.toasts.showToast(\n        t(\"{{ userName }} was added to the collection\", {\n          userName: user.name,\n        }),\n        {\n          type: \"success\",\n        }\n      );\n    } catch (err) {\n      this.props.toasts.showToast(t(\"Could not add user\"), {\n        type: \"error\",\n      });\n    }\n  };\n\n  render() {\n    const { users, collection, auth, t } = this.props;\n    const { user, team } = auth;\n    if (!user || !team) {\n      return null;\n    }\n\n    return (\n      <Flex column>\n        <Text type=\"secondary\">\n          {t(\"Need to add someone who’s not yet on the team yet?\")}{\" \"}\n          <ButtonLink onClick={this.handleInviteModalOpen}>\n            {t(\"Invite people to {{ teamName }}\", {\n              teamName: team.name,\n            })}\n          </ButtonLink>\n          .\n        </Text>\n        <Input\n          type=\"search\"\n          placeholder={`${t(\"Search by name\")}…`}\n          value={this.query}\n          onChange={this.handleFilter}\n          label={t(\"Search people\")}\n          autoFocus\n          labelHidden\n          flex\n        />\n        <PaginatedList\n          empty={\n            this.query ? (\n              <Empty>{t(\"No people matching your search\")}</Empty>\n            ) : (\n              <Empty>{t(\"No people left to add\")}</Empty>\n            )\n          }\n          items={users.notInCollection(collection.id, this.query)}\n          fetch={this.query ? undefined : users.fetchPage}\n          renderItem={(item: User) => (\n            <MemberListItem\n              key={item.id}\n              user={item}\n              onAdd={() => this.handleAddUser(item)}\n              canEdit\n            />\n          )}\n        />\n        <Modal\n          title={t(\"Invite people\")}\n          onRequestClose={this.handleInviteModalClose}\n          isOpen={this.inviteModalOpen}\n        >\n          <Invite onSubmit={this.handleInviteModalClose} />\n        </Modal>\n      </Flex>\n    );\n  }\n}\n\nexport default withTranslation()(withStores(AddPeopleToCollection));\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\n\ntype Props = {\n  onMembers: () => void;\n  onRemove: () => void;\n};\n\nfunction CollectionGroupMemberMenu({ onMembers, onRemove }: Props) {\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n  });\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Group member options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"button\",\n              title: t(\"Members\"),\n              onClick: onMembers,\n            },\n            {\n              type: \"separator\",\n            },\n            {\n              type: \"button\",\n              title: t(\"Remove\"),\n              dangerous: true,\n              onClick: onRemove,\n            },\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(CollectionGroupMemberMenu);\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport CollectionGroupMembership from \"~/models/CollectionGroupMembership\";\nimport Group from \"~/models/Group\";\nimport GroupListItem from \"~/components/GroupListItem\";\nimport InputSelect, { Props as SelectProps } from \"~/components/InputSelect\";\nimport CollectionGroupMemberMenu from \"~/menus/CollectionGroupMemberMenu\";\n\ntype Props = {\n  group: Group;\n  collectionGroupMembership: CollectionGroupMembership | null | undefined;\n  onUpdate: (permission: string) => void;\n  onRemove: () => void;\n};\n\nconst CollectionGroupMemberListItem = ({\n  group,\n  collectionGroupMembership,\n  onUpdate,\n  onRemove,\n}: Props) => {\n  const { t } = useTranslation();\n  const PERMISSIONS = React.useMemo(\n    () => [\n      {\n        label: t(\"View only\"),\n        value: \"read\",\n      },\n      {\n        label: t(\"View and edit\"),\n        value: \"read_write\",\n      },\n    ],\n    [t]\n  );\n\n  return (\n    <GroupListItem\n      group={group}\n      showAvatar\n      renderActions={({ openMembersModal }) => (\n        <>\n          <Select\n            label={t(\"Permissions\")}\n            options={PERMISSIONS}\n            value={\n              collectionGroupMembership\n                ? collectionGroupMembership.permission\n                : undefined\n            }\n            onChange={onUpdate}\n            ariaLabel={t(\"Permissions\")}\n            labelHidden\n            nude\n          />\n          <CollectionGroupMemberMenu\n            onMembers={openMembersModal}\n            onRemove={onRemove}\n          />\n        </>\n      )}\n    />\n  );\n};\n\nconst Select = styled(InputSelect)`\n  margin: 0;\n  font-size: 14px;\n  border-color: transparent;\n  box-shadow: none;\n  color: ${(props) => props.theme.textSecondary};\n\n  select {\n    margin: 0;\n  }\n` as React.ComponentType<SelectProps>;\n\nexport default CollectionGroupMemberListItem;\n","import { observer } from \"mobx-react\";\nimport { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Collection from \"~/models/Collection\";\nimport Group from \"~/models/Group\";\nimport User from \"~/models/User\";\nimport Button from \"~/components/Button\";\nimport Divider from \"~/components/Divider\";\nimport Flex from \"~/components/Flex\";\nimport InputSelectPermission from \"~/components/InputSelectPermission\";\nimport Labeled from \"~/components/Labeled\";\nimport Modal from \"~/components/Modal\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Switch from \"~/components/Switch\";\nimport Text from \"~/components/Text\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport AddGroupsToCollection from \"./AddGroupsToCollection\";\nimport AddPeopleToCollection from \"./AddPeopleToCollection\";\nimport CollectionGroupMemberListItem from \"./components/CollectionGroupMemberListItem\";\nimport MemberListItem from \"./components/MemberListItem\";\n\ntype Props = {\n  collection: Collection;\n};\n\nfunction CollectionPermissions({ collection }: Props) {\n  const { t } = useTranslation();\n  const user = useCurrentUser();\n  const {\n    memberships,\n    collectionGroupMemberships,\n    users,\n    groups,\n    auth,\n  } = useStores();\n  const { showToast } = useToasts();\n\n  const [\n    addGroupModalOpen,\n    handleAddGroupModalOpen,\n    handleAddGroupModalClose,\n  ] = useBoolean();\n\n  const [\n    addMemberModalOpen,\n    handleAddMemberModalOpen,\n    handleAddMemberModalClose,\n  ] = useBoolean();\n\n  const handleRemoveUser = React.useCallback(\n    async (user) => {\n      try {\n        await memberships.delete({\n          collectionId: collection.id,\n          userId: user.id,\n        });\n        showToast(\n          t(`{{ userName }} was removed from the collection`, {\n            userName: user.name,\n          }),\n          {\n            type: \"success\",\n          }\n        );\n      } catch (err) {\n        showToast(t(\"Could not remove user\"), {\n          type: \"error\",\n        });\n      }\n    },\n    [memberships, showToast, collection, t]\n  );\n\n  const handleUpdateUser = React.useCallback(\n    async (user, permission) => {\n      try {\n        await memberships.create({\n          collectionId: collection.id,\n          userId: user.id,\n          permission,\n        });\n        showToast(\n          t(`{{ userName }} permissions were updated`, {\n            userName: user.name,\n          }),\n          {\n            type: \"success\",\n          }\n        );\n      } catch (err) {\n        showToast(t(\"Could not update user\"), {\n          type: \"error\",\n        });\n      }\n    },\n    [memberships, showToast, collection, t]\n  );\n\n  const handleRemoveGroup = React.useCallback(\n    async (group) => {\n      try {\n        await collectionGroupMemberships.delete({\n          collectionId: collection.id,\n          groupId: group.id,\n        });\n        showToast(\n          t(`The {{ groupName }} group was removed from the collection`, {\n            groupName: group.name,\n          }),\n          {\n            type: \"success\",\n          }\n        );\n      } catch (err) {\n        showToast(t(\"Could not remove group\"), {\n          type: \"error\",\n        });\n      }\n    },\n    [collectionGroupMemberships, showToast, collection, t]\n  );\n\n  const handleUpdateGroup = React.useCallback(\n    async (group, permission) => {\n      try {\n        await collectionGroupMemberships.create({\n          collectionId: collection.id,\n          groupId: group.id,\n          permission,\n        });\n        showToast(\n          t(`{{ groupName }} permissions were updated`, {\n            groupName: group.name,\n          }),\n          {\n            type: \"success\",\n          }\n        );\n      } catch (err) {\n        showToast(t(\"Could not update user\"), {\n          type: \"error\",\n        });\n      }\n    },\n    [collectionGroupMemberships, showToast, collection, t]\n  );\n\n  const handleChangePermission = React.useCallback(\n    async (permission: string) => {\n      try {\n        await collection.save({\n          permission,\n        });\n        showToast(t(\"Default access permissions were updated\"), {\n          type: \"success\",\n        });\n      } catch (err) {\n        showToast(t(\"Could not update permissions\"), {\n          type: \"error\",\n        });\n      }\n    },\n    [collection, showToast, t]\n  );\n\n  const fetchOptions = React.useMemo(\n    () => ({\n      id: collection.id,\n    }),\n    [collection.id]\n  );\n\n  const handleSharingChange = React.useCallback(\n    async (ev: React.ChangeEvent<HTMLInputElement>) => {\n      try {\n        await collection.save({\n          sharing: ev.target.checked,\n        });\n        showToast(t(\"Public document sharing permissions were updated\"), {\n          type: \"success\",\n        });\n      } catch (err) {\n        showToast(t(\"Could not update public document sharing\"), {\n          type: \"error\",\n        });\n      }\n    },\n    [collection, showToast, t]\n  );\n\n  const collectionName = collection.name;\n  const collectionGroups = groups.inCollection(collection.id);\n  const collectionUsers = users.inCollection(collection.id);\n  const isEmpty = !collectionGroups.length && !collectionUsers.length;\n  const sharing = collection.sharing;\n  const teamSharingEnabled = !!auth.team && auth.team.sharing;\n\n  return (\n    <Flex column>\n      <InputSelectPermission\n        onChange={handleChangePermission}\n        value={collection.permission || \"\"}\n      />\n      <PermissionExplainer size=\"small\">\n        {!collection.permission && (\n          <Trans\n            defaults=\"The <em>{{ collectionName }}</em> collection is private. Team members have no access to it by default.\"\n            values={{\n              collectionName,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        )}\n        {collection.permission === \"read\" && (\n          <Trans\n            defaults=\"Team members can view documents in the <em>{{ collectionName }}</em> collection by default.\"\n            values={{\n              collectionName,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        )}\n        {collection.permission === \"read_write\" && (\n          <Trans\n            defaults=\"Team members can view and edit documents in the <em>{{ collectionName }}</em> collection by\n          default.\"\n            values={{\n              collectionName,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        )}\n      </PermissionExplainer>\n      <Switch\n        id=\"sharing\"\n        label={t(\"Public document sharing\")}\n        onChange={handleSharingChange}\n        checked={sharing && teamSharingEnabled}\n        disabled={!teamSharingEnabled}\n        note={\n          teamSharingEnabled ? (\n            <Trans>\n              When enabled, documents can be shared publicly on the internet.\n            </Trans>\n          ) : (\n            <Trans>\n              Public sharing is currently disabled in the team security\n              settings.\n            </Trans>\n          )\n        }\n      />\n      <Labeled label={t(\"Additional access\")}>\n        <Actions gap={8}>\n          <Button\n            type=\"button\"\n            onClick={handleAddGroupModalOpen}\n            icon={<PlusIcon />}\n            neutral\n          >\n            {t(\"Add groups\")}\n          </Button>\n          <Button\n            type=\"button\"\n            onClick={handleAddMemberModalOpen}\n            icon={<PlusIcon />}\n            neutral\n          >\n            {t(\"Add people\")}\n          </Button>\n        </Actions>\n      </Labeled>\n      <Divider />\n      {isEmpty && (\n        <Empty>\n          <Trans>\n            Add specific access for individual groups and team members\n          </Trans>\n        </Empty>\n      )}\n      <PaginatedList\n        items={collectionGroups}\n        fetch={collectionGroupMemberships.fetchPage}\n        options={fetchOptions}\n        renderItem={(group: Group) => (\n          <CollectionGroupMemberListItem\n            key={group.id}\n            group={group}\n            collectionGroupMembership={collectionGroupMemberships.get(\n              `${group.id}-${collection.id}`\n            )}\n            onRemove={() => handleRemoveGroup(group)}\n            onUpdate={(permission) => handleUpdateGroup(group, permission)}\n          />\n        )}\n      />\n      {collectionGroups.length ? <Divider /> : null}\n      <PaginatedList\n        key={`collection-users-${collection.permission || \"none\"}`}\n        items={collectionUsers}\n        fetch={memberships.fetchPage}\n        options={fetchOptions}\n        renderItem={(item: User) => (\n          <MemberListItem\n            key={item.id}\n            user={item}\n            membership={memberships.get(`${item.id}-${collection.id}`)}\n            canEdit={item.id !== user.id}\n            onRemove={() => handleRemoveUser(item)}\n            onUpdate={(permission) => handleUpdateUser(item, permission)}\n          />\n        )}\n      />\n      <Modal\n        title={t(`Add groups to {{ collectionName }}`, {\n          collectionName: collection.name,\n        })}\n        onRequestClose={handleAddGroupModalClose}\n        isOpen={addGroupModalOpen}\n      >\n        <AddGroupsToCollection\n          collection={collection}\n          onSubmit={handleAddGroupModalClose}\n        />\n      </Modal>\n      <Modal\n        title={t(`Add people to {{ collectionName }}`, {\n          collectionName: collection.name,\n        })}\n        onRequestClose={handleAddMemberModalClose}\n        isOpen={addMemberModalOpen}\n      >\n        <AddPeopleToCollection\n          collection={collection}\n          onSubmit={handleAddMemberModalClose}\n        />\n      </Modal>\n    </Flex>\n  );\n}\n\nconst Empty = styled(Text)`\n  margin-top: 8px;\n`;\n\nconst PermissionExplainer = styled(Text)`\n  margin-top: -8px;\n  margin-bottom: 24px;\n`;\n\nconst Actions = styled(Flex)`\n  margin-bottom: 12px;\n`;\n\nexport default observer(CollectionPermissions);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport FilterOptions from \"~/components/FilterOptions\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  collectionId: string | undefined;\n  onSelect: (key: string | undefined) => void;\n};\n\nfunction CollectionFilter(props: Props) {\n  const { t } = useTranslation();\n  const { collections } = useStores();\n  const { onSelect, collectionId } = props;\n  const options = React.useMemo(() => {\n    const collectionOptions = collections.orderedData.map((user) => ({\n      key: user.id,\n      label: user.name,\n    }));\n    return [\n      {\n        key: \"\",\n        label: t(\"Any collection\"),\n      },\n      ...collectionOptions,\n    ];\n  }, [collections.orderedData, t]);\n  return (\n    <FilterOptions\n      options={options}\n      activeKey={collectionId}\n      onSelect={onSelect}\n      defaultLabel={t(\"Any collection\")}\n      selectedPrefix={`${t(\"Collection\")}:`}\n    />\n  );\n}\n\nexport default observer(CollectionFilter);\n","import { observer } from \"mobx-react\";\nimport { ArchiveIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Empty from \"~/components/Empty\";\nimport Heading from \"~/components/Heading\";\nimport PaginatedDocumentList from \"~/components/PaginatedDocumentList\";\nimport Scene from \"~/components/Scene\";\nimport Subheading from \"~/components/Subheading\";\nimport useStores from \"~/hooks/useStores\";\n\nfunction Archive() {\n  const { t } = useTranslation();\n  const { documents } = useStores();\n  return (\n    <Scene icon={<ArchiveIcon color=\"currentColor\" />} title={t(\"Archive\")}>\n      <Heading>{t(\"Archive\")}</Heading>\n      <PaginatedDocumentList\n        documents={documents.archived}\n        fetch={documents.fetchArchived}\n        heading={<Subheading sticky>{t(\"Documents\")}</Subheading>}\n        empty={\n          <Empty>{t(\"The document archive is empty at the moment.\")}</Empty>\n        }\n        showCollection\n        showTemplate\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Archive);\n","import { observer } from \"mobx-react\";\nimport queryString from \"query-string\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport CenteredContent from \"~/components/CenteredContent\";\nimport Flex from \"~/components/Flex\";\nimport PlaceholderDocument from \"~/components/PlaceholderDocument\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport { editDocumentUrl } from \"~/utils/routeHelpers\";\n\nfunction DocumentNew() {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch<{ id?: string }>();\n  const { t } = useTranslation();\n  const { documents, collections } = useStores();\n  const { showToast } = useToasts();\n  const id = match.params.id || \"\";\n\n  useEffect(() => {\n    async function createDocument() {\n      const params = queryString.parse(location.search);\n\n      try {\n        const collection = await collections.fetch(id);\n        const document = await documents.create({\n          collectionId: collection.id,\n          parentDocumentId: params.parentDocumentId?.toString(),\n          templateId: params.templateId?.toString(),\n          template: params.template === \"true\" ? true : false,\n          title: \"\",\n          text: \"\",\n        });\n        history.replace(editDocumentUrl(document), location.state);\n      } catch (err) {\n        showToast(t(\"Couldn’t create the document, try again?\"), {\n          type: \"error\",\n        });\n        history.goBack();\n      }\n    }\n\n    createDocument();\n  });\n\n  return (\n    <Flex column auto>\n      <CenteredContent>\n        <PlaceholderDocument />\n      </CenteredContent>\n    </Flex>\n  );\n}\n\nexport default observer(DocumentNew);\n","import { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { EditIcon } from \"outline-icons\";\nimport queryString from \"query-string\";\nimport * as React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport RootStore from \"~/stores/RootStore\";\nimport CollectionFilter from \"~/scenes/Search/components/CollectionFilter\";\nimport DateFilter from \"~/scenes/Search/components/DateFilter\";\nimport { Action } from \"~/components/Actions\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport Heading from \"~/components/Heading\";\nimport InputSearchPage from \"~/components/InputSearchPage\";\nimport PaginatedDocumentList from \"~/components/PaginatedDocumentList\";\nimport Scene from \"~/components/Scene\";\nimport Subheading from \"~/components/Subheading\";\nimport withStores from \"~/components/withStores\";\nimport NewDocumentMenu from \"~/menus/NewDocumentMenu\";\n\ntype Props = WithTranslation & RouteComponentProps & RootStore;\n\n@observer\nclass Drafts extends React.Component<Props> {\n  @observable\n  params: URLSearchParams = new URLSearchParams(this.props.location.search);\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.location.search !== this.props.location.search) {\n      this.handleQueryChange();\n    }\n  }\n\n  handleQueryChange = () => {\n    this.params = new URLSearchParams(this.props.location.search);\n  };\n\n  handleFilterChange = (search: {\n    dateFilter?: string | null | undefined;\n    collectionId?: string | null | undefined;\n  }) => {\n    this.props.history.replace({\n      pathname: this.props.location.pathname,\n      search: queryString.stringify(\n        { ...queryString.parse(this.props.location.search), ...search },\n        {\n          skipEmptyString: true,\n        }\n      ),\n    });\n  };\n\n  get collectionId() {\n    const id = this.params.get(\"collectionId\");\n    return id ? id : undefined;\n  }\n\n  get dateFilter() {\n    const id = this.params.get(\"dateFilter\");\n    return (id ? id : undefined) as\n      | \"day\"\n      | \"week\"\n      | \"month\"\n      | \"year\"\n      | undefined;\n  }\n\n  render() {\n    const { t } = this.props;\n    const isFiltered = this.collectionId || this.dateFilter;\n    const options = {\n      dateFilter: this.dateFilter,\n      collectionId: this.collectionId,\n    };\n\n    return (\n      <Scene\n        icon={<EditIcon color=\"currentColor\" />}\n        title={t(\"Drafts\")}\n        actions={\n          <>\n            <Action>\n              <InputSearchPage source=\"drafts\" label={t(\"Search documents\")} />\n            </Action>\n            <Action>\n              <NewDocumentMenu />\n            </Action>\n          </>\n        }\n      >\n        <Heading>{t(\"Drafts\")}</Heading>\n        <Subheading sticky>\n          {t(\"Documents\")}\n          <Filters>\n            <CollectionFilter\n              collectionId={this.collectionId}\n              onSelect={(collectionId) =>\n                this.handleFilterChange({\n                  collectionId,\n                })\n              }\n            />\n            <DateFilter\n              dateFilter={this.dateFilter}\n              onSelect={(dateFilter) =>\n                this.handleFilterChange({\n                  dateFilter,\n                })\n              }\n            />\n          </Filters>\n        </Subheading>\n\n        <PaginatedDocumentList\n          empty={\n            <Empty>\n              {isFiltered\n                ? t(\"No documents found for your filters.\")\n                : t(\"You’ve not got any drafts at the moment.\")}\n            </Empty>\n          }\n          fetch={this.props.documents.fetchDrafts}\n          documents={this.props.documents.drafts(options)}\n          options={options}\n          showParentDocuments\n          showCollection\n        />\n      </Scene>\n    );\n  }\n}\n\nconst Filters = styled(Flex)`\n  opacity: 0.85;\n  transition: opacity 100ms ease-in-out;\n  position: absolute;\n  right: -8px;\n  bottom: 0;\n  padding: 0 0 6px;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport default withTranslation()(withStores(Drafts));\n","import { observer } from \"mobx-react\";\nimport { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MenuButton, useMenuState } from \"reakit/Menu\";\nimport styled from \"styled-components\";\nimport Button from \"~/components/Button\";\nimport CollectionIcon from \"~/components/CollectionIcon\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Header from \"~/components/ContextMenu/Header\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { MenuItem } from \"~/types\";\nimport { newDocumentPath } from \"~/utils/routeHelpers\";\n\nfunction NewTemplateMenu() {\n  const menu = useMenuState({\n    modal: true,\n  });\n  const { t } = useTranslation();\n  const team = useCurrentTeam();\n  const { collections, policies } = useStores();\n  const can = usePolicy(team.id);\n\n  const items = React.useMemo(\n    () =>\n      collections.orderedData.reduce<MenuItem[]>((filtered, collection) => {\n        const can = policies.abilities(collection.id);\n\n        if (can.update) {\n          filtered.push({\n            type: \"route\",\n            to: newDocumentPath(collection.id, {\n              template: true,\n            }),\n            title: <CollectionName>{collection.name}</CollectionName>,\n            icon: <CollectionIcon collection={collection} />,\n          });\n        }\n\n        return filtered;\n      }, []),\n    [collections.orderedData, policies]\n  );\n\n  if (!can.createDocument || items.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <MenuButton {...menu}>\n        {(props) => (\n          <Button icon={<PlusIcon />} {...props}>\n            {t(\"New template\")}…\n          </Button>\n        )}\n      </MenuButton>\n      <ContextMenu aria-label={t(\"New template\")} {...menu}>\n        <Header>{t(\"Choose a collection\")}</Header>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nconst CollectionName = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport default observer(NewTemplateMenu);\n","import { observer } from \"mobx-react\";\nimport { ShapesIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Action } from \"~/components/Actions\";\nimport Empty from \"~/components/Empty\";\nimport Heading from \"~/components/Heading\";\nimport PaginatedDocumentList from \"~/components/PaginatedDocumentList\";\nimport Scene from \"~/components/Scene\";\nimport Tab from \"~/components/Tab\";\nimport Tabs from \"~/components/Tabs\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport NewTemplateMenu from \"~/menus/NewTemplateMenu\";\n\nfunction Templates(props: RouteComponentProps<{ sort: string }>) {\n  const { documents } = useStores();\n  const { t } = useTranslation();\n  const team = useCurrentTeam();\n  const { fetchTemplates, templates, templatesAlphabetical } = documents;\n  const { sort } = props.match.params;\n  const can = usePolicy(team.id);\n\n  return (\n    <Scene\n      icon={<ShapesIcon color=\"currentColor\" />}\n      title={t(\"Templates\")}\n      actions={\n        <Action>\n          <NewTemplateMenu />\n        </Action>\n      }\n    >\n      <Heading>{t(\"Templates\")}</Heading>\n      <PaginatedDocumentList\n        heading={\n          <Tabs>\n            <Tab to=\"/templates\" exact>\n              {t(\"Recently updated\")}\n            </Tab>\n            <Tab to=\"/templates/alphabetical\" exact>\n              {t(\"Alphabetical\")}\n            </Tab>\n          </Tabs>\n        }\n        empty={\n          <Empty>\n            {t(\"There are no templates just yet.\")}{\" \"}\n            {can.createDocument &&\n              t(\n                \"You can create templates to help your team create consistent and accurate documentation.\"\n              )}\n          </Empty>\n        }\n        fetch={fetchTemplates}\n        documents={sort === \"alphabetical\" ? templatesAlphabetical : templates}\n        showCollection\n        showDraft\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Templates);\n","import { observer } from \"mobx-react\";\nimport { TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Empty from \"~/components/Empty\";\nimport Heading from \"~/components/Heading\";\nimport PaginatedDocumentList from \"~/components/PaginatedDocumentList\";\nimport Scene from \"~/components/Scene\";\nimport Subheading from \"~/components/Subheading\";\nimport useStores from \"~/hooks/useStores\";\n\nfunction Trash() {\n  const { t } = useTranslation();\n  const { documents } = useStores();\n  return (\n    <Scene icon={<TrashIcon color=\"currentColor\" />} title={t(\"Trash\")}>\n      <Heading>{t(\"Trash\")}</Heading>\n      <PaginatedDocumentList\n        documents={documents.deleted}\n        fetch={documents.fetchDeleted}\n        heading={<Subheading sticky>{t(\"Documents\")}</Subheading>}\n        empty={<Empty>{t(\"Trash is empty at the moment.\")}</Empty>}\n        showCollection\n        showTemplate\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Trash);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport CenteredContent from \"~/components/CenteredContent\";\nimport PageTitle from \"~/components/PageTitle\";\nimport useStores from \"~/hooks/useStores\";\n\nconst ErrorSuspended = () => {\n  const { t } = useTranslation();\n  const { auth } = useStores();\n\n  return (\n    <CenteredContent>\n      <PageTitle title={t(\"Your account has been suspended\")} />\n      <h1>\n        <span role=\"img\" aria-label={t(\"Warning Sign\")}>\n          ⚠️\n        </span>{\" \"}\n        {t(\"Your account has been suspended\")}\n      </h1>\n\n      <p>\n        <Trans\n          defaults=\"A team admin (<em>{{ suspendedContactEmail }}</em>) has suspended your account. To re-activate your account, please reach out to them directly.\"\n          values={{\n            suspendedContactEmail: auth.suspendedContactEmail,\n          }}\n          components={{\n            em: <strong />,\n          }}\n        />\n      </p>\n    </CenteredContent>\n  );\n};\n\nexport default observer(ErrorSuspended);\n","import * as React from \"react\";\nimport { getCookie } from \"tiny-cookie\";\n\ntype Session = {\n  url: string;\n  logoUrl: string;\n  name: string;\n  teamId: string;\n};\n\nfunction loadSessionsFromCookie(): Session[] {\n  const sessions = JSON.parse(getCookie(\"sessions\") || \"{}\");\n  return Object.keys(sessions).map((teamId) => ({\n    teamId,\n    ...sessions[teamId],\n  }));\n}\n\nexport default function useSessions(): [Session[], () => void] {\n  const [sessions, setSessions] = React.useState(loadSessionsFromCookie);\n  const reload = React.useCallback(() => {\n    setSessions(loadSessionsFromCookie());\n  }, []);\n  return [sessions, reload];\n}\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MenuButton, useMenuState } from \"reakit/Menu\";\nimport styled from \"styled-components\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport { createAction } from \"~/actions\";\nimport { navigateToSettings, logout } from \"~/actions/definitions/navigation\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePrevious from \"~/hooks/usePrevious\";\nimport useSessions from \"~/hooks/useSessions\";\nimport useStores from \"~/hooks/useStores\";\nimport separator from \"~/menus/separator\";\n\nconst OrganizationMenu: React.FC = ({ children }) => {\n  const [sessions] = useSessions();\n  const menu = useMenuState({\n    unstable_offset: [4, -4],\n    placement: \"bottom-start\",\n    modal: true,\n  });\n  const { ui } = useStores();\n  const { theme } = ui;\n  const team = useCurrentTeam();\n  const previousTheme = usePrevious(theme);\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    if (theme !== previousTheme) {\n      menu.hide();\n    }\n  }, [menu, theme, previousTheme]);\n\n  const actions = React.useMemo(() => {\n    const otherSessions = sessions.filter(\n      (session) => session.teamId !== team.id && session.url !== team.url\n    );\n\n    return [\n      navigateToSettings,\n      separator(),\n      ...(otherSessions.length\n        ? [\n            createAction({\n              name: t(\"Switch team\"),\n              section: \"account\",\n              children: otherSessions.map((session) => ({\n                id: session.url,\n                name: session.name,\n                section: \"account\",\n                icon: <Logo alt={session.name} src={session.logoUrl} />,\n                perform: () => (window.location.href = session.url),\n              })),\n            }),\n          ]\n        : []),\n      logout,\n    ];\n  }, [team.id, team.url, sessions, t]);\n\n  return (\n    <>\n      <MenuButton {...menu}>{children}</MenuButton>\n      <ContextMenu {...menu} aria-label={t(\"Account\")}>\n        <Template {...menu} items={undefined} actions={actions} />\n      </ContextMenu>\n    </>\n  );\n};\n\nconst Logo = styled(\"img\")`\n  border-radius: 2px;\n  width: 24px;\n  height: 24px;\n`;\n\nexport default observer(OrganizationMenu);\n","import { observer } from \"mobx-react\";\nimport { ArchiveIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport { archivePath } from \"~/utils/routeHelpers\";\nimport SidebarLink, { DragObject } from \"./SidebarLink\";\n\nfunction ArchiveLink() {\n  const { policies, documents } = useStores();\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n\n  const [{ isDocumentDropping }, dropToArchiveDocument] = useDrop({\n    accept: \"document\",\n    drop: async (item: DragObject) => {\n      const document = documents.get(item.id);\n      await document?.archive();\n      showToast(t(\"Document archived\"), {\n        type: \"success\",\n      });\n    },\n    canDrop: (item) => policies.abilities(item.id).archive,\n    collect: (monitor) => ({\n      isDocumentDropping: monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div ref={dropToArchiveDocument}>\n      <SidebarLink\n        to={archivePath()}\n        icon={<ArchiveIcon color=\"currentColor\" open={isDocumentDropping} />}\n        exact={false}\n        label={t(\"Archive\")}\n        active={documents.active?.isArchived && !documents.active?.isDeleted}\n        isActiveDrop={isDocumentDropping}\n      />\n    </div>\n  );\n}\n\nexport default observer(ArchiveLink);\n","import { observer } from \"mobx-react\";\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport Collection from \"~/models/Collection\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport { NavigationNode } from \"~/types\";\n\ntype Props = {\n  item:\n    | {\n        active: boolean | null | undefined;\n        children: Array<NavigationNode>;\n        collectionId: string;\n        depth: number;\n        id: string;\n        title: string;\n        url: string;\n      }\n    | {\n        id: string;\n        collectionId: string;\n        title: string;\n      };\n  collection: Collection;\n  onCancel: () => void;\n  onSubmit: () => void;\n};\n\nfunction DocumentReparent({ collection, item, onSubmit, onCancel }: Props) {\n  const [isSaving, setIsSaving] = useState(false);\n  const { showToast } = useToasts();\n  const { documents, collections } = useStores();\n  const { t } = useTranslation();\n  const prevCollection = collections.get(item.collectionId);\n  const accessMapping = {\n    read_write: t(\"view and edit access\"),\n    read: t(\"view only access\"),\n    null: t(\"no access\"),\n  };\n\n  const handleSubmit = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      setIsSaving(true);\n\n      try {\n        await documents.move(item.id, collection.id);\n        showToast(t(\"Document moved\"), {\n          type: \"info\",\n        });\n        onSubmit();\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      } finally {\n        setIsSaving(false);\n      }\n    },\n    [documents, item.id, collection.id, showToast, t, onSubmit]\n  );\n\n  return (\n    <Flex column>\n      <form onSubmit={handleSubmit}>\n        <Text type=\"secondary\">\n          <Trans\n            defaults=\"Heads up – moving the document <em>{{ title }}</em> to the <em>{{ newCollectionName }}</em> collection will grant all team members <em>{{ newPermission }}</em>, they currently have {{ prevPermission }}.\"\n            values={{\n              title: item.title,\n              prevCollectionName: prevCollection?.name,\n              newCollectionName: collection.name,\n              prevPermission:\n                accessMapping[prevCollection?.permission || \"null\"],\n              newPermission: accessMapping[collection.permission || \"null\"],\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        </Text>\n        <Button type=\"submit\">\n          {isSaving ? `${t(\"Moving\")}…` : t(\"Move document\")}\n        </Button>{\" \"}\n        <Button type=\"button\" onClick={onCancel} neutral>\n          {t(\"Cancel\")}\n        </Button>\n      </form>\n    </Flex>\n  );\n}\n\nexport default observer(DocumentReparent);\n","import invariant from \"invariant\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useTranslation } from \"react-i18next\";\nimport styled, { css } from \"styled-components\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport useImportDocument from \"~/hooks/useImportDocument\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  children: JSX.Element;\n  collectionId?: string;\n  documentId?: string;\n  disabled?: boolean;\n  activeClassName?: string;\n};\n\nfunction DropToImport({ disabled, children, collectionId, documentId }: Props) {\n  const { t } = useTranslation();\n  const { documents } = useStores();\n  const { showToast } = useToasts();\n  const { handleFiles, isImporting } = useImportDocument(\n    collectionId,\n    documentId\n  );\n  const targetId = collectionId || documentId;\n  invariant(targetId, \"Must provide either collectionId or documentId\");\n\n  const can = usePolicy(targetId);\n  const handleRejection = React.useCallback(() => {\n    showToast(\n      t(\"Document not supported – try Markdown, Plain text, HTML, or Word\"),\n      {\n        type: \"error\",\n      }\n    );\n  }, [t, showToast]);\n\n  if (disabled || !can.update) {\n    return children;\n  }\n\n  return (\n    <Dropzone\n      accept={documents.importFileTypes.join(\", \")}\n      onDropAccepted={handleFiles}\n      onDropRejected={handleRejection}\n      noClick\n      multiple\n    >\n      {({ getRootProps, getInputProps, isDragActive }) => (\n        <DropzoneContainer\n          {...getRootProps()}\n          $isDragActive={isDragActive}\n          tabIndex={-1}\n        >\n          <input {...getInputProps()} />\n          {isImporting && <LoadingIndicator />}\n          {children}\n        </DropzoneContainer>\n      )}\n    </Dropzone>\n  );\n}\n\nconst DropzoneContainer = styled.div<{ $isDragActive: boolean }>`\n  border-radius: 4px;\n\n  ${({ $isDragActive, theme }) =>\n    $isDragActive &&\n    css`\n      background: ${theme.slateDark};\n      a {\n        color: ${theme.white} !important;\n      }\n      svg {\n        fill: ${theme.white};\n      }\n    `}\n`;\n\nexport default observer(DropToImport);\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  onSubmit: (title: string) => Promise<void>;\n  onEditing?: (isEditing: boolean) => void;\n  title: string;\n  canUpdate: boolean;\n  maxLength?: number;\n};\n\nfunction EditableTitle({\n  title,\n  onSubmit,\n  canUpdate,\n  onEditing,\n  ...rest\n}: Props) {\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [originalValue, setOriginalValue] = React.useState(title);\n  const [value, setValue] = React.useState(title);\n  const { showToast } = useToasts();\n\n  React.useEffect(() => {\n    setValue(title);\n  }, [title]);\n\n  const handleChange = React.useCallback((event) => {\n    setValue(event.target.value);\n  }, []);\n\n  const handleDoubleClick = React.useCallback((event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setIsEditing(true);\n  }, []);\n\n  const handleKeyDown = React.useCallback(\n    (event) => {\n      if (event.key === \"Escape\") {\n        setIsEditing(false);\n        setValue(originalValue);\n      }\n    },\n    [originalValue]\n  );\n\n  const handleSave = React.useCallback(\n    async (ev) => {\n      ev.preventDefault();\n      setIsEditing(false);\n      const trimmedValue = value.trim();\n\n      if (trimmedValue === originalValue || trimmedValue.length === 0) {\n        setValue(originalValue);\n        return;\n      }\n\n      if (document) {\n        try {\n          await onSubmit(trimmedValue);\n          setOriginalValue(trimmedValue);\n        } catch (error) {\n          setValue(originalValue);\n          showToast(error.message, {\n            type: \"error\",\n          });\n          throw error;\n        }\n      }\n    },\n    [originalValue, showToast, value, onSubmit]\n  );\n\n  React.useEffect(() => {\n    onEditing?.(isEditing);\n  }, [onEditing, isEditing]);\n\n  return (\n    <>\n      {isEditing ? (\n        <form onSubmit={handleSave}>\n          <Input\n            dir=\"auto\"\n            type=\"text\"\n            value={value}\n            onKeyDown={handleKeyDown}\n            onChange={handleChange}\n            onBlur={handleSave}\n            autoFocus\n            {...rest}\n          />\n        </form>\n      ) : (\n        <span onDoubleClick={canUpdate ? handleDoubleClick : undefined}>\n          {value}\n        </span>\n      )}\n    </>\n  );\n}\n\nconst Input = styled.input`\n  color: ${(props) => props.theme.sidebarText};\n  background: ${(props) => props.theme.background};\n  width: calc(100% + 12px);\n  border-radius: 3px;\n  border: 1px solid ${(props) => props.theme.inputBorderFocused};\n  padding: 5px 6px;\n  margin: -4px;\n  height: 32px;\n\n  &:focus {\n    outline-color: ${(props) => props.theme.primary};\n  }\n`;\n\nexport default EditableTitle;\n","import styled from \"styled-components\";\n\nconst Relative = styled.div`\n  position: relative;\n`;\n\nexport default Relative;\n","import * as React from \"react\";\n\nconst StarredContext = React.createContext<boolean | undefined>(undefined);\n\nexport const useStarredContext = () => React.useContext(StarredContext);\n\nexport default StarredContext;\n","import { Location } from \"history\";\nimport { observer } from \"mobx-react\";\nimport { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Collection from \"~/models/Collection\";\nimport Document from \"~/models/Document\";\nimport DocumentReparent from \"~/scenes/DocumentReparent\";\nimport CollectionIcon from \"~/components/CollectionIcon\";\nimport Fade from \"~/components/Fade\";\nimport NudeButton from \"~/components/NudeButton\";\nimport { createDocument } from \"~/actions/definitions/documents\";\nimport useActionContext from \"~/hooks/useActionContext\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport CollectionMenu from \"~/menus/CollectionMenu\";\nimport { NavigationNode } from \"~/types\";\nimport DropToImport from \"./DropToImport\";\nimport EditableTitle from \"./EditableTitle\";\nimport Relative from \"./Relative\";\nimport SidebarLink, { DragObject } from \"./SidebarLink\";\nimport { useStarredContext } from \"./StarredContext\";\n\ntype Props = {\n  collection: Collection;\n  expanded?: boolean;\n  onDisclosureClick: (ev: React.MouseEvent<HTMLButtonElement>) => void;\n  activeDocument: Document | undefined;\n  isDraggingAnyCollection?: boolean;\n};\n\nconst CollectionLink: React.FC<Props> = ({\n  collection,\n  expanded,\n  onDisclosureClick,\n  isDraggingAnyCollection,\n}) => {\n  const itemRef = React.useRef<\n    NavigationNode & { depth: number; active: boolean; collectionId: string }\n  >();\n  const { dialogs, documents, collections } = useStores();\n  const [menuOpen, handleMenuOpen, handleMenuClose] = useBoolean();\n  const [isEditing, setIsEditing] = React.useState(false);\n  const canUpdate = usePolicy(collection.id).update;\n  const { t } = useTranslation();\n  const history = useHistory();\n  const inStarredSection = useStarredContext();\n\n  const handleTitleChange = React.useCallback(\n    async (name: string) => {\n      await collection.save({\n        name,\n      });\n      history.replace(collection.url, history.location.state);\n    },\n    [collection, history]\n  );\n\n  // Drop to re-parent document\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: \"document\",\n    drop: (item: DragObject, monitor) => {\n      const { id, collectionId } = item;\n      if (monitor.didDrop()) {\n        return;\n      }\n      if (!collection) {\n        return;\n      }\n\n      const document = documents.get(id);\n      if (collection.id === collectionId && !document?.parentDocumentId) {\n        return;\n      }\n\n      const prevCollection = collections.get(collectionId);\n\n      if (\n        prevCollection &&\n        prevCollection.permission === null &&\n        prevCollection.permission !== collection.permission\n      ) {\n        itemRef.current = item;\n\n        dialogs.openModal({\n          title: t(\"Move document\"),\n          content: (\n            <DocumentReparent\n              item={item}\n              collection={collection}\n              onSubmit={dialogs.closeAllModals}\n              onCancel={dialogs.closeAllModals}\n            />\n          ),\n        });\n      } else {\n        documents.move(id, collection.id);\n      }\n    },\n    canDrop: () => canUpdate,\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver({\n        shallow: true,\n      }),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const handleTitleEditing = React.useCallback((isEditing: boolean) => {\n    setIsEditing(isEditing);\n  }, []);\n\n  const context = useActionContext({\n    activeCollectionId: collection.id,\n    inStarredSection,\n  });\n\n  return (\n    <>\n      <Relative ref={drop}>\n        <DropToImport collectionId={collection.id}>\n          <SidebarLink\n            to={{\n              pathname: collection.url,\n              state: { starred: inStarredSection },\n            }}\n            expanded={expanded}\n            onDisclosureClick={onDisclosureClick}\n            icon={\n              <CollectionIcon collection={collection} expanded={expanded} />\n            }\n            showActions={menuOpen}\n            isActiveDrop={isOver && canDrop}\n            isActive={(match, location: Location<{ starred?: boolean }>) =>\n              !!match && location.state?.starred === inStarredSection\n            }\n            label={\n              <EditableTitle\n                title={collection.name}\n                onSubmit={handleTitleChange}\n                onEditing={handleTitleEditing}\n                canUpdate={canUpdate}\n              />\n            }\n            exact={false}\n            depth={0}\n            menu={\n              !isEditing &&\n              !isDraggingAnyCollection && (\n                <Fade>\n                  <NudeButton\n                    tooltip={{ tooltip: t(\"New doc\"), delay: 500 }}\n                    action={createDocument}\n                    context={context}\n                    hideOnActionDisabled\n                  >\n                    <PlusIcon />\n                  </NudeButton>\n                  <CollectionMenu\n                    collection={collection}\n                    onOpen={handleMenuOpen}\n                    onClose={handleMenuClose}\n                  />\n                </Fade>\n              )\n            }\n          />\n        </DropToImport>\n      </Relative>\n    </>\n  );\n};\n\nexport default observer(CollectionLink);\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  disabled?: boolean;\n  isActiveDrop: boolean;\n  innerRef: React.Ref<HTMLDivElement>;\n  position?: \"top\";\n};\n\nfunction DropCursor({ isActiveDrop, innerRef, position, disabled }: Props) {\n  return (\n    <Cursor\n      isOver={isActiveDrop}\n      disabled={disabled}\n      ref={innerRef}\n      position={position}\n    />\n  );\n}\n\n// transparent hover zone with a thin visible band vertically centered\nconst Cursor = styled.div<{\n  isOver?: boolean;\n  disabled?: boolean;\n  position?: \"top\";\n}>`\n  opacity: ${(props) => (props.isOver ? 1 : 0)};\n  transition: opacity 150ms;\n  position: absolute;\n  z-index: 1;\n\n  width: 100%;\n  height: 14px;\n  background: transparent;\n  ${(props) => (props.position === \"top\" ? \"top: -7px;\" : \"bottom: -7px;\")}\n\n  ::after {\n    background: ${(props) =>\n      props.disabled\n        ? props.theme.sidebarActiveBackground\n        : props.theme.slateDark};\n    position: absolute;\n    top: 6px;\n    content: \"\";\n    height: 2px;\n    border-radius: 2px;\n    width: 100%;\n  }\n`;\n\nexport default DropCursor;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  expanded: boolean;\n};\n\nconst Folder: React.FC<Props> = ({ expanded, children }) => {\n  const [openedOnce, setOpenedOnce] = React.useState(expanded);\n\n  // allows us to avoid rendering all children when the folder hasn't been opened\n  React.useEffect(() => {\n    if (expanded) {\n      setOpenedOnce(true);\n    }\n  }, [expanded]);\n\n  if (!openedOnce) {\n    return null;\n  }\n\n  return <Wrapper $expanded={expanded}>{children}</Wrapper>;\n};\n\nconst Wrapper = styled.div<{ $expanded?: boolean }>`\n  display: ${(props) => (props.$expanded ? \"block\" : \"none\")};\n`;\n\nexport default Folder;\n","import { Location } from \"history\";\nimport { observer } from \"mobx-react\";\nimport { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { MAX_TITLE_LENGTH } from \"@shared/constants\";\nimport { sortNavigationNodes } from \"@shared/utils/collections\";\nimport Collection from \"~/models/Collection\";\nimport Document from \"~/models/Document\";\nimport Fade from \"~/components/Fade\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Tooltip from \"~/components/Tooltip\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport DocumentMenu from \"~/menus/DocumentMenu\";\nimport { NavigationNode } from \"~/types\";\nimport { newDocumentPath } from \"~/utils/routeHelpers\";\nimport DropCursor from \"./DropCursor\";\nimport DropToImport from \"./DropToImport\";\nimport EditableTitle from \"./EditableTitle\";\nimport Folder from \"./Folder\";\nimport Relative from \"./Relative\";\nimport SidebarLink, { DragObject } from \"./SidebarLink\";\nimport { useStarredContext } from \"./StarredContext\";\n\ntype Props = {\n  node: NavigationNode;\n  collection?: Collection;\n  activeDocument: Document | null | undefined;\n  prefetchDocument?: (documentId: string) => Promise<Document | void>;\n  isDraft?: boolean;\n  depth: number;\n  index: number;\n  parentId?: string;\n};\n\nfunction InnerDocumentLink(\n  {\n    node,\n    collection,\n    activeDocument,\n    prefetchDocument,\n    isDraft,\n    depth,\n    index,\n    parentId,\n  }: Props,\n  ref: React.RefObject<HTMLAnchorElement>\n) {\n  const { showToast } = useToasts();\n  const { documents, policies } = useStores();\n  const { t } = useTranslation();\n  const canUpdate = usePolicy(node.id).update;\n  const isActiveDocument = activeDocument && activeDocument.id === node.id;\n  const hasChildDocuments =\n    !!node.children.length || activeDocument?.parentDocumentId === node.id;\n  const document = documents.get(node.id);\n  const { fetchChildDocuments } = documents;\n  const [isEditing, setIsEditing] = React.useState(false);\n  const inStarredSection = useStarredContext();\n\n  React.useEffect(() => {\n    if (isActiveDocument && hasChildDocuments) {\n      fetchChildDocuments(node.id);\n    }\n  }, [fetchChildDocuments, node, hasChildDocuments, isActiveDocument]);\n\n  const pathToNode = React.useMemo(\n    () => collection?.pathToDocument(node.id).map((entry) => entry.id),\n    [collection, node]\n  );\n\n  const showChildren = React.useMemo(() => {\n    return !!(\n      hasChildDocuments &&\n      activeDocument &&\n      collection &&\n      (collection\n        .pathToDocument(activeDocument.id)\n        .map((entry) => entry.id)\n        .includes(node.id) ||\n        isActiveDocument)\n    );\n  }, [hasChildDocuments, activeDocument, isActiveDocument, node, collection]);\n\n  const [expanded, setExpanded] = React.useState(showChildren);\n\n  React.useEffect(() => {\n    if (showChildren) {\n      setExpanded(showChildren);\n    }\n  }, [showChildren]);\n\n  // when the last child document is removed auto-close the local folder state\n  React.useEffect(() => {\n    if (expanded && !hasChildDocuments) {\n      setExpanded(false);\n    }\n  }, [expanded, hasChildDocuments]);\n\n  const handleDisclosureClick = React.useCallback(\n    (ev) => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      setExpanded(!expanded);\n    },\n    [expanded]\n  );\n\n  const handleMouseEnter = React.useCallback(() => {\n    prefetchDocument?.(node.id);\n  }, [prefetchDocument, node]);\n\n  const handleTitleChange = React.useCallback(\n    async (title: string) => {\n      if (!document) {\n        return;\n      }\n      await documents.update(\n        {\n          id: document.id,\n          text: document.text,\n          title,\n        },\n        {\n          lastRevision: document.revision,\n        }\n      );\n    },\n    [documents, document]\n  );\n  const [menuOpen, handleMenuOpen, handleMenuClose] = useBoolean();\n  const isMoving = documents.movingDocumentId === node.id;\n  const manualSort = collection?.sort.field === \"index\";\n\n  // Draggable\n  const [{ isDragging }, drag] = useDrag({\n    type: \"document\",\n    item: () => ({\n      ...node,\n      depth,\n      active: isActiveDocument,\n      collectionId: collection?.id || \"\",\n    }),\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n    canDrag: () => {\n      return (\n        !isDraft &&\n        (policies.abilities(node.id).move ||\n          policies.abilities(node.id).archive ||\n          policies.abilities(node.id).delete)\n      );\n    },\n  });\n\n  const hoverExpanding = React.useRef<ReturnType<typeof setTimeout>>();\n\n  // We set a timeout when the user first starts hovering over the document link,\n  // to trigger expansion of children. Clear this timeout when they stop hovering.\n  const resetHoverExpanding = React.useCallback(() => {\n    if (hoverExpanding.current) {\n      clearTimeout(hoverExpanding.current);\n      hoverExpanding.current = undefined;\n    }\n  }, []);\n\n  // Drop to re-parent\n  const [{ isOverReparent, canDropToReparent }, dropToReparent] = useDrop({\n    accept: \"document\",\n    drop: (item: DragObject, monitor) => {\n      if (monitor.didDrop()) {\n        return;\n      }\n      if (!collection) {\n        return;\n      }\n      documents.move(item.id, collection.id, node.id);\n    },\n    canDrop: (_item, monitor) =>\n      !isDraft &&\n      !!pathToNode &&\n      !pathToNode.includes(monitor.getItem<DragObject>().id),\n    hover: (_item, monitor) => {\n      // Enables expansion of document children when hovering over the document\n      // for more than half a second.\n      if (\n        hasChildDocuments &&\n        monitor.canDrop() &&\n        monitor.isOver({\n          shallow: true,\n        })\n      ) {\n        if (!hoverExpanding.current) {\n          hoverExpanding.current = setTimeout(() => {\n            hoverExpanding.current = undefined;\n\n            if (\n              monitor.isOver({\n                shallow: true,\n              })\n            ) {\n              setExpanded(true);\n            }\n          }, 500);\n        }\n      }\n    },\n    collect: (monitor) => ({\n      isOverReparent: monitor.isOver({\n        shallow: true,\n      }),\n      canDropToReparent: monitor.canDrop(),\n    }),\n  });\n\n  // Drop to reorder\n  const [{ isOverReorder, isDraggingAnyDocument }, dropToReorder] = useDrop({\n    accept: \"document\",\n    drop: (item: DragObject) => {\n      if (!manualSort) {\n        showToast(\n          t(\n            \"You can't reorder documents in an alphabetically sorted collection\"\n          ),\n          {\n            type: \"info\",\n            timeout: 5000,\n          }\n        );\n        return;\n      }\n\n      if (!collection) {\n        return;\n      }\n      if (item.id === node.id) {\n        return;\n      }\n\n      if (expanded) {\n        documents.move(item.id, collection.id, node.id, 0);\n        return;\n      }\n\n      documents.move(item.id, collection.id, parentId, index + 1);\n    },\n    collect: (monitor) => ({\n      isOverReorder: monitor.isOver(),\n      isDraggingAnyDocument: monitor.canDrop(),\n    }),\n  });\n\n  const nodeChildren = React.useMemo(() => {\n    const insertDraftDocument =\n      activeDocument?.isDraft &&\n      activeDocument?.isActive &&\n      activeDocument?.parentDocumentId === node.id;\n\n    return collection && insertDraftDocument\n      ? sortNavigationNodes(\n          [activeDocument?.asNavigationNode, ...node.children],\n          collection.sort,\n          false\n        )\n      : node.children;\n  }, [\n    activeDocument?.isActive,\n    activeDocument?.isDraft,\n    activeDocument?.parentDocumentId,\n    activeDocument?.asNavigationNode,\n    collection,\n    node,\n  ]);\n\n  const handleTitleEditing = React.useCallback((isEditing: boolean) => {\n    setIsEditing(isEditing);\n  }, []);\n\n  const title =\n    (activeDocument?.id === node.id ? activeDocument.title : node.title) ||\n    t(\"Untitled\");\n\n  const can = policies.abilities(node.id);\n  const isExpanded = expanded && !isDragging;\n  const hasChildren = nodeChildren.length > 0;\n\n  return (\n    <>\n      <Relative onDragLeave={resetHoverExpanding}>\n        <Draggable\n          key={node.id}\n          ref={drag}\n          $isDragging={isDragging}\n          $isMoving={isMoving}\n        >\n          <div ref={dropToReparent}>\n            <DropToImport documentId={node.id} activeClassName=\"activeDropZone\">\n              <SidebarLink\n                expanded={hasChildren ? isExpanded : undefined}\n                onDisclosureClick={handleDisclosureClick}\n                onMouseEnter={handleMouseEnter}\n                to={{\n                  pathname: node.url,\n                  state: {\n                    title: node.title,\n                    starred: inStarredSection,\n                  },\n                }}\n                label={\n                  <EditableTitle\n                    title={title}\n                    onSubmit={handleTitleChange}\n                    onEditing={handleTitleEditing}\n                    canUpdate={canUpdate}\n                    maxLength={MAX_TITLE_LENGTH}\n                  />\n                }\n                isActive={(match, location: Location<{ starred?: boolean }>) =>\n                  !!match && location.state?.starred === inStarredSection\n                }\n                isActiveDrop={isOverReparent && canDropToReparent}\n                depth={depth}\n                exact={false}\n                showActions={menuOpen}\n                scrollIntoViewIfNeeded={!inStarredSection}\n                isDraft={isDraft}\n                ref={ref}\n                menu={\n                  document &&\n                  !isMoving &&\n                  !isEditing &&\n                  !isDraggingAnyDocument ? (\n                    <Fade>\n                      {can.createChildDocument && (\n                        <Tooltip tooltip={t(\"New doc\")} delay={500}>\n                          <NudeButton\n                            type={undefined}\n                            aria-label={t(\"New nested document\")}\n                            as={Link}\n                            to={newDocumentPath(document.collectionId, {\n                              parentDocumentId: document.id,\n                            })}\n                          >\n                            <PlusIcon />\n                          </NudeButton>\n                        </Tooltip>\n                      )}\n                      <DocumentMenu\n                        document={document}\n                        onOpen={handleMenuOpen}\n                        onClose={handleMenuClose}\n                      />\n                    </Fade>\n                  ) : undefined\n                }\n              />\n            </DropToImport>\n          </div>\n        </Draggable>\n        {isDraggingAnyDocument && (\n          <DropCursor\n            disabled={!manualSort}\n            isActiveDrop={isOverReorder}\n            innerRef={dropToReorder}\n          />\n        )}\n      </Relative>\n      <Folder expanded={expanded && !isDragging}>\n        {nodeChildren.map((childNode, index) => (\n          <DocumentLink\n            key={childNode.id}\n            collection={collection}\n            node={childNode}\n            activeDocument={activeDocument}\n            prefetchDocument={prefetchDocument}\n            isDraft={childNode.isDraft}\n            depth={depth + 1}\n            index={index}\n            parentId={node.id}\n          />\n        ))}\n      </Folder>\n    </>\n  );\n}\n\nconst Draggable = styled.div<{ $isDragging?: boolean; $isMoving?: boolean }>`\n  opacity: ${(props) => (props.$isDragging || props.$isMoving ? 0.5 : 1)};\n  pointer-events: ${(props) => (props.$isMoving ? \"none\" : \"all\")};\n`;\n\nconst DocumentLink = observer(React.forwardRef(InnerDocumentLink));\n\nexport default DocumentLink;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Text from \"~/components/Text\";\n\nconst EmptyCollectionPlaceholder = () => {\n  const { t } = useTranslation();\n  return (\n    <Empty type=\"tertiary\" size=\"small\">\n      {t(\"Empty\")}\n    </Empty>\n  );\n};\n\nconst Empty = styled(Text)`\n  margin-left: 46px;\n  margin-bottom: 0;\n  line-height: 34px;\n  font-style: italic;\n`;\n\nexport default EmptyCollectionPlaceholder;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport Collection from \"~/models/Collection\";\nimport Document from \"~/models/Document\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport DocumentLink from \"./DocumentLink\";\nimport DropCursor from \"./DropCursor\";\nimport EmptyCollectionPlaceholder from \"./EmptyCollectionPlaceholder\";\nimport Folder from \"./Folder\";\nimport { DragObject } from \"./SidebarLink\";\nimport useCollectionDocuments from \"./useCollectionDocuments\";\n\ntype Props = {\n  collection: Collection;\n  expanded: boolean;\n  prefetchDocument?: (documentId: string) => Promise<Document | void>;\n};\n\nfunction CollectionLinkChildren({\n  collection,\n  expanded,\n  prefetchDocument,\n}: Props) {\n  const can = usePolicy(collection.id);\n  const { showToast } = useToasts();\n  const manualSort = collection.sort.field === \"index\";\n  const { documents } = useStores();\n  const { t } = useTranslation();\n\n  const childDocuments = useCollectionDocuments(collection, documents.active);\n\n  // Drop to reorder document\n  const [{ isOverReorder, isDraggingAnyDocument }, dropToReorder] = useDrop({\n    accept: \"document\",\n    drop: (item: DragObject) => {\n      if (!manualSort) {\n        showToast(\n          t(\n            \"You can't reorder documents in an alphabetically sorted collection\"\n          ),\n          {\n            type: \"info\",\n            timeout: 5000,\n          }\n        );\n        return;\n      }\n\n      if (!collection) {\n        return;\n      }\n      documents.move(item.id, collection.id, undefined, 0);\n    },\n    collect: (monitor) => ({\n      isOverReorder: !!monitor.isOver(),\n      isDraggingAnyDocument: !!monitor.canDrop(),\n    }),\n  });\n\n  return (\n    <Folder expanded={expanded}>\n      {isDraggingAnyDocument && can.update && (\n        <DropCursor\n          disabled={!manualSort}\n          isActiveDrop={isOverReorder}\n          innerRef={dropToReorder}\n          position=\"top\"\n        />\n      )}\n      {childDocuments.map((node, index) => (\n        <DocumentLink\n          key={node.id}\n          node={node}\n          collection={collection}\n          activeDocument={documents.active}\n          prefetchDocument={prefetchDocument}\n          isDraft={node.isDraft}\n          depth={2}\n          index={index}\n        />\n      ))}\n      {childDocuments.length === 0 && <EmptyCollectionPlaceholder />}\n    </Folder>\n  );\n}\n\nexport default observer(CollectionLinkChildren);\n","import * as React from \"react\";\nimport { sortNavigationNodes } from \"@shared/utils/collections\";\nimport Collection from \"~/models/Collection\";\nimport Document from \"~/models/Document\";\n\nexport default function useCollectionDocuments(\n  collection: Collection | undefined,\n  activeDocument: Document | undefined\n) {\n  return React.useMemo(() => {\n    if (!collection) {\n      return [];\n    }\n\n    const insertDraftDocument =\n      activeDocument?.isActive &&\n      activeDocument?.isDraft &&\n      activeDocument?.collectionId === collection.id &&\n      !activeDocument?.parentDocumentId;\n\n    return insertDraftDocument\n      ? sortNavigationNodes(\n          [activeDocument.asNavigationNode, ...collection.sortedDocuments],\n          collection.sort,\n          false\n        )\n      : collection.sortedDocuments;\n  }, [\n    activeDocument?.isActive,\n    activeDocument?.isDraft,\n    activeDocument?.collectionId,\n    activeDocument?.parentDocumentId,\n    activeDocument?.asNavigationNode,\n    collection,\n    collection?.sortedDocuments,\n    collection?.id,\n    collection?.sort,\n  ]);\n}\n","import fractionalIndex from \"fractional-index\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useDrop, useDrag, DropTargetMonitor } from \"react-dnd\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Collection from \"~/models/Collection\";\nimport Document from \"~/models/Document\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport CollectionLink from \"./CollectionLink\";\nimport CollectionLinkChildren from \"./CollectionLinkChildren\";\nimport DropCursor from \"./DropCursor\";\nimport Relative from \"./Relative\";\nimport { DragObject } from \"./SidebarLink\";\n\ntype Props = {\n  collection: Collection;\n  activeDocument: Document | undefined;\n  prefetchDocument: (id: string) => Promise<Document | void>;\n  belowCollection: Collection | void;\n};\n\nfunction useLocationStateStarred() {\n  const location = useLocation<{\n    starred?: boolean;\n  }>();\n  return location.state?.starred;\n}\n\nfunction DraggableCollectionLink({\n  collection,\n  activeDocument,\n  prefetchDocument,\n  belowCollection,\n}: Props) {\n  const locationStateStarred = useLocationStateStarred();\n  const { ui, collections } = useStores();\n  const [expanded, setExpanded] = React.useState(\n    collection.id === ui.activeCollectionId && !locationStateStarred\n  );\n  const can = usePolicy(collection.id);\n  const belowCollectionIndex = belowCollection ? belowCollection.index : null;\n\n  // Drop to reorder collection\n  const [\n    { isCollectionDropping, isDraggingAnyCollection },\n    dropToReorderCollection,\n  ] = useDrop({\n    accept: \"collection\",\n    drop: (item: DragObject) => {\n      collections.move(\n        item.id,\n        fractionalIndex(collection.index, belowCollectionIndex)\n      );\n    },\n    canDrop: (item) => {\n      return (\n        collection.id !== item.id &&\n        (!belowCollection || item.id !== belowCollection.id)\n      );\n    },\n    collect: (monitor: DropTargetMonitor<Collection, Collection>) => ({\n      isCollectionDropping: monitor.isOver(),\n      isDraggingAnyCollection: monitor.getItemType() === \"collection\",\n    }),\n  });\n\n  // Drag to reorder collection\n  const [{ isCollectionDragging }, dragToReorderCollection] = useDrag({\n    type: \"collection\",\n    item: () => {\n      return {\n        id: collection.id,\n      };\n    },\n    collect: (monitor) => ({\n      isCollectionDragging: monitor.isDragging(),\n    }),\n    canDrag: () => {\n      return can.move;\n    },\n  });\n\n  // If the current collection is active and relevant to the sidebar section we\n  // are in then expand it automatically\n  React.useEffect(() => {\n    if (collection.id === ui.activeCollectionId && !locationStateStarred) {\n      setExpanded(true);\n    }\n  }, [collection.id, ui.activeCollectionId, locationStateStarred]);\n\n  const handleDisclosureClick = React.useCallback((ev) => {\n    ev.preventDefault();\n    setExpanded((e) => !e);\n  }, []);\n\n  const displayChildDocuments = expanded && !isCollectionDragging;\n\n  return (\n    <>\n      <Draggable\n        key={collection.id}\n        ref={dragToReorderCollection}\n        $isDragging={isCollectionDragging}\n      >\n        <CollectionLink\n          collection={collection}\n          expanded={displayChildDocuments}\n          activeDocument={activeDocument}\n          onDisclosureClick={handleDisclosureClick}\n          isDraggingAnyCollection={isDraggingAnyCollection}\n        />\n      </Draggable>\n      <Relative>\n        <CollectionLinkChildren\n          collection={collection}\n          expanded={displayChildDocuments}\n          prefetchDocument={prefetchDocument}\n        />\n        {isDraggingAnyCollection && (\n          <DropCursor\n            isActiveDrop={isCollectionDropping}\n            innerRef={dropToReorderCollection}\n          />\n        )}\n      </Relative>\n    </>\n  );\n}\n\nconst Draggable = styled(\"div\")<{ $isDragging: boolean }>`\n  opacity: ${(props) => (props.$isDragging ? 0.5 : 1)};\n  pointer-events: ${(props) => (props.$isDragging ? \"none\" : \"auto\")};\n`;\n\nexport default observer(DraggableCollectionLink);\n","import { CollapsedIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport usePersistedState from \"~/hooks/usePersistedState\";\n\ntype Props = {\n  /** Unique header id – if passed the header will become toggleable */\n  id?: string;\n  title: React.ReactNode;\n};\n\n/**\n * Toggleable sidebar header\n */\nexport const Header: React.FC<Props> = ({ id, title, children }) => {\n  const [firstRender, setFirstRender] = React.useState(true);\n  const [expanded, setExpanded] = usePersistedState(\n    `sidebar-header-${id}`,\n    true\n  );\n\n  React.useEffect(() => {\n    if (!expanded) {\n      setFirstRender(false);\n    }\n  }, [expanded]);\n\n  const handleClick = React.useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded, setExpanded]);\n\n  return (\n    <>\n      <H3>\n        <Button onClick={handleClick} disabled={!id}>\n          {title}\n          {id && (\n            <Disclosure expanded={expanded} color=\"currentColor\" size={20} />\n          )}\n        </Button>\n      </H3>\n      {expanded && (firstRender ? children : <Fade>{children}</Fade>)}\n    </>\n  );\n};\n\nexport const fadeAndSlideDown = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(-8px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`;\n\nconst Fade = styled.span`\n  animation: ${fadeAndSlideDown} 100ms ease-in-out;\n`;\n\nconst Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  font-size: 13px;\n  font-weight: 600;\n  user-select: none;\n  color: ${(props) => props.theme.textTertiary};\n  letter-spacing: 0.03em;\n  margin: 0;\n  padding: 4px 2px 4px 12px;\n  height: 22px;\n  border: 0;\n  background: none;\n  border-radius: 4px;\n  -webkit-appearance: none;\n  transition: all 100ms ease;\n\n  &:not(:disabled):hover,\n  &:not(:disabled):active {\n    color: ${(props) => props.theme.textSecondary};\n    cursor: pointer;\n  }\n`;\n\nconst Disclosure = styled(CollapsedIcon)<{ expanded?: boolean }>`\n  transition: opacity 100ms ease, transform 100ms ease, fill 50ms !important;\n  ${({ expanded }) => !expanded && \"transform: rotate(-90deg);\"};\n  opacity: 0;\n`;\n\nconst H3 = styled.h3`\n  margin: 0;\n\n  &:hover {\n    ${Disclosure} {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default Header;\n","import * as React from \"react\";\nimport { Primitive } from \"utility-types\";\nimport Logger from \"~/utils/Logger\";\nimport Storage from \"~/utils/Storage\";\nimport useEventListener from \"./useEventListener\";\n\n/**\n * A hook with the same API as `useState` that persists its value locally and\n * syncs the value between browser tabs.\n *\n * @param key Key to store value under\n * @param defaultValue An optional default value if no key exists\n * @returns Tuple of the current value and a function to update it\n */\nexport default function usePersistedState(\n  key: string,\n  defaultValue: Primitive\n) {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    if (typeof window === \"undefined\") {\n      return defaultValue;\n    }\n    return Storage.get(key) ?? defaultValue;\n  });\n\n  const setValue = (value: Primitive | ((value: Primitive) => void)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n      Storage.set(key, valueToStore);\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      Logger.debug(\"misc\", \"Failed to persist state\", { error });\n    }\n  };\n\n  // Listen to the key changing in other tabs so we can keep UI in sync\n  useEventListener(\"storage\", (event: StorageEvent) => {\n    if (event.key === key && event.newValue) {\n      setStoredValue(JSON.parse(event.newValue));\n    }\n  });\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport PlaceholderText from \"~/components/PlaceholderText\";\n\nfunction PlaceholderCollections() {\n  return (\n    <Wrapper>\n      <PlaceholderText />\n      <PlaceholderText delay={0.2} />\n      <PlaceholderText delay={0.4} />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  margin: 4px 12px;\n  width: 75%;\n`;\n\nexport default PlaceholderCollections;\n","import invariant from \"invariant\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { actionToMenuItem } from \"~/actions\";\nimport useActionContext from \"~/hooks/useActionContext\";\nimport { Action } from \"~/types\";\nimport SidebarLink from \"./SidebarLink\";\n\ntype Props = {\n  action: Action;\n  depth?: number;\n};\n\nfunction SidebarAction({ action, ...rest }: Props) {\n  const context = useActionContext({\n    isContextMenu: false,\n    isCommandBar: false,\n    activeCollectionId: undefined,\n    activeDocumentId: undefined,\n  });\n  const menuItem = actionToMenuItem(action, context);\n  invariant(menuItem.type === \"button\", \"passed action must be a button\");\n\n  if (!menuItem.visible) {\n    return null;\n  }\n\n  return (\n    <SidebarLink\n      onClick={menuItem.onClick}\n      icon={menuItem.icon}\n      label={menuItem.title}\n      {...rest}\n    />\n  );\n}\n\nexport default observer(SidebarAction);\n","import fractionalIndex from \"fractional-index\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport Collection from \"~/models/Collection\";\nimport Fade from \"~/components/Fade\";\nimport Flex from \"~/components/Flex\";\nimport { createCollection } from \"~/actions/definitions/collections\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport DraggableCollectionLink from \"./DraggableCollectionLink\";\nimport DropCursor from \"./DropCursor\";\nimport Header from \"./Header\";\nimport PlaceholderCollections from \"./PlaceholderCollections\";\nimport Relative from \"./Relative\";\nimport SidebarAction from \"./SidebarAction\";\nimport { DragObject } from \"./SidebarLink\";\n\nfunction Collections() {\n  const [isFetching, setFetching] = React.useState(false);\n  const [fetchError, setFetchError] = React.useState();\n  const { documents, collections } = useStores();\n  const { showToast } = useToasts();\n  const isPreloaded = !!collections.orderedData.length;\n  const { t } = useTranslation();\n  const orderedCollections = collections.orderedData;\n\n  React.useEffect(() => {\n    async function load() {\n      if (!collections.isLoaded && !isFetching && !fetchError) {\n        try {\n          setFetching(true);\n          await collections.fetchPage({\n            limit: 100,\n          });\n        } catch (error) {\n          showToast(\n            t(\"Collections could not be loaded, please reload the app\"),\n            {\n              type: \"error\",\n            }\n          );\n          setFetchError(error);\n        } finally {\n          setFetching(false);\n        }\n      }\n    }\n\n    load();\n  }, [collections, isFetching, showToast, fetchError, t]);\n\n  const [\n    { isCollectionDropping, isDraggingAnyCollection },\n    dropToReorderCollection,\n  ] = useDrop({\n    accept: \"collection\",\n    drop: async (item: DragObject) => {\n      collections.move(\n        item.id,\n        fractionalIndex(null, orderedCollections[0].index)\n      );\n    },\n    canDrop: (item) => {\n      return item.id !== orderedCollections[0].id;\n    },\n    collect: (monitor) => ({\n      isCollectionDropping: monitor.isOver(),\n      isDraggingAnyCollection: monitor.getItemType() === \"collection\",\n    }),\n  });\n\n  const content = (\n    <>\n      {isDraggingAnyCollection && (\n        <DropCursor\n          isActiveDrop={isCollectionDropping}\n          innerRef={dropToReorderCollection}\n          position=\"top\"\n        />\n      )}\n      {orderedCollections.map((collection: Collection, index: number) => (\n        <DraggableCollectionLink\n          key={collection.id}\n          collection={collection}\n          activeDocument={documents.active}\n          prefetchDocument={documents.prefetchDocument}\n          belowCollection={orderedCollections[index + 1]}\n        />\n      ))}\n      <SidebarAction action={createCollection} depth={0} />\n    </>\n  );\n\n  if (!collections.isLoaded || fetchError) {\n    return (\n      <Flex column>\n        <Header id=\"collections\" title={t(\"Collections\")}>\n          <PlaceholderCollections />\n        </Header>\n      </Flex>\n    );\n  }\n\n  return (\n    <Flex column>\n      <Header id=\"collections\" title={t(\"Collections\")}>\n        <Relative>{isPreloaded ? content : <Fade>{content}</Fade>}</Relative>\n      </Header>\n    </Flex>\n  );\n}\n\nexport default observer(Collections);\n","import fractionalIndex from \"fractional-index\";\nimport { Location } from \"history\";\nimport { observer } from \"mobx-react\";\nimport { StarredIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { useLocation } from \"react-router-dom\";\nimport styled, { useTheme } from \"styled-components\";\nimport parseTitle from \"@shared/utils/parseTitle\";\nimport Star from \"~/models/Star\";\nimport EmojiIcon from \"~/components/EmojiIcon\";\nimport Fade from \"~/components/Fade\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport useStores from \"~/hooks/useStores\";\nimport DocumentMenu from \"~/menus/DocumentMenu\";\nimport CollectionLink from \"./CollectionLink\";\nimport CollectionLinkChildren from \"./CollectionLinkChildren\";\nimport DocumentLink from \"./DocumentLink\";\nimport DropCursor from \"./DropCursor\";\nimport Folder from \"./Folder\";\nimport Relative from \"./Relative\";\nimport SidebarLink from \"./SidebarLink\";\n\ntype Props = {\n  star: Star;\n};\n\nfunction useLocationStateStarred() {\n  const location = useLocation<{\n    starred?: boolean;\n  }>();\n  return location.state?.starred;\n}\n\nfunction StarredLink({ star }: Props) {\n  const theme = useTheme();\n  const { ui, collections, documents } = useStores();\n  const [menuOpen, handleMenuOpen, handleMenuClose] = useBoolean();\n  const { documentId, collectionId } = star;\n  const collection = collections.get(collectionId);\n  const locationStateStarred = useLocationStateStarred();\n  const [expanded, setExpanded] = useState(\n    star.collectionId === ui.activeCollectionId && !!locationStateStarred\n  );\n\n  React.useEffect(() => {\n    if (star.collectionId === ui.activeCollectionId && locationStateStarred) {\n      setExpanded(true);\n    }\n  }, [star.collectionId, ui.activeCollectionId, locationStateStarred]);\n\n  useEffect(() => {\n    async function load() {\n      if (documentId) {\n        await documents.fetch(documentId);\n      }\n    }\n\n    load();\n  }, [documentId, documents]);\n\n  const handleDisclosureClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLButtonElement>) => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      setExpanded((prevExpanded) => !prevExpanded);\n    },\n    []\n  );\n\n  // Draggable\n  const [{ isDragging }, drag] = useDrag({\n    type: \"star\",\n    item: () => star,\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n    canDrag: () => true,\n  });\n\n  // Drop to reorder\n  const [{ isOverReorder, isDraggingAny }, dropToReorder] = useDrop({\n    accept: \"star\",\n    drop: (item: Star) => {\n      const next = star?.next();\n\n      item?.save({\n        index: fractionalIndex(star?.index || null, next?.index || null),\n      });\n    },\n    collect: (monitor) => ({\n      isOverReorder: !!monitor.isOver(),\n      isDraggingAny: !!monitor.canDrop(),\n    }),\n  });\n\n  const displayChildDocuments = expanded && !isDragging;\n\n  if (documentId) {\n    const document = documents.get(documentId);\n    if (!document) {\n      return null;\n    }\n\n    const collection = collections.get(document.collectionId);\n    const { emoji } = parseTitle(document.title);\n    const label = emoji\n      ? document.title.replace(emoji, \"\")\n      : document.titleWithDefault;\n    const childDocuments = collection\n      ? collection.getDocumentChildren(documentId)\n      : [];\n    const hasChildDocuments = childDocuments.length > 0;\n\n    return (\n      <>\n        <Draggable key={star.id} ref={drag} $isDragging={isDragging}>\n          <SidebarLink\n            depth={0}\n            to={{\n              pathname: document.url,\n              state: { starred: true },\n            }}\n            expanded={hasChildDocuments && !isDragging ? expanded : undefined}\n            onDisclosureClick={handleDisclosureClick}\n            icon={\n              emoji ? (\n                <EmojiIcon emoji={emoji} />\n              ) : (\n                <StarredIcon color={theme.yellow} />\n              )\n            }\n            isActive={(match, location: Location<{ starred?: boolean }>) =>\n              !!match && location.state?.starred === true\n            }\n            label={label}\n            exact={false}\n            showActions={menuOpen}\n            menu={\n              document && !isDragging ? (\n                <Fade>\n                  <DocumentMenu\n                    document={document}\n                    onOpen={handleMenuOpen}\n                    onClose={handleMenuClose}\n                  />\n                </Fade>\n              ) : undefined\n            }\n          />\n        </Draggable>\n        <Relative>\n          <Folder expanded={displayChildDocuments}>\n            {childDocuments.map((node, index) => (\n              <DocumentLink\n                key={node.id}\n                node={node}\n                collection={collection}\n                activeDocument={documents.active}\n                isDraft={node.isDraft}\n                depth={2}\n                index={index}\n              />\n            ))}\n          </Folder>\n          {isDraggingAny && (\n            <DropCursor isActiveDrop={isOverReorder} innerRef={dropToReorder} />\n          )}\n        </Relative>\n      </>\n    );\n  }\n\n  if (collection) {\n    return (\n      <>\n        <Draggable key={star?.id} ref={drag} $isDragging={isDragging}>\n          <CollectionLink\n            collection={collection}\n            expanded={isDragging ? undefined : displayChildDocuments}\n            activeDocument={documents.active}\n            onDisclosureClick={handleDisclosureClick}\n            isDraggingAnyCollection={isDraggingAny}\n          />\n        </Draggable>\n        <Relative>\n          <CollectionLinkChildren\n            collection={collection}\n            expanded={displayChildDocuments}\n          />\n          {isDraggingAny && (\n            <DropCursor isActiveDrop={isOverReorder} innerRef={dropToReorder} />\n          )}\n        </Relative>\n      </>\n    );\n  }\n\n  return null;\n}\n\nconst Draggable = styled.div<{ $isDragging?: boolean }>`\n  position: relative;\n  opacity: ${(props) => (props.$isDragging ? 0.5 : 1)};\n`;\n\nexport default observer(StarredLink);\n","import fractionalIndex from \"fractional-index\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport Star from \"~/models/Star\";\nimport Flex from \"~/components/Flex\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport DropCursor from \"./DropCursor\";\nimport Header from \"./Header\";\nimport PlaceholderCollections from \"./PlaceholderCollections\";\nimport Relative from \"./Relative\";\nimport SidebarLink from \"./SidebarLink\";\nimport StarredContext from \"./StarredContext\";\nimport StarredLink from \"./StarredLink\";\n\nconst STARRED_PAGINATION_LIMIT = 10;\n\nfunction Starred() {\n  const [fetchError, setFetchError] = React.useState();\n  const [displayedStarsCount, setDisplayedStarsCount] = React.useState(\n    STARRED_PAGINATION_LIMIT\n  );\n  const { showToast } = useToasts();\n  const { stars } = useStores();\n  const { t } = useTranslation();\n\n  const fetchResults = React.useCallback(\n    async (offset = 0) => {\n      try {\n        await stars.fetchPage({\n          limit: STARRED_PAGINATION_LIMIT + 1,\n          offset,\n        });\n      } catch (error) {\n        showToast(t(\"Starred documents could not be loaded\"), {\n          type: \"error\",\n        });\n        setFetchError(error);\n      }\n    },\n    [stars, showToast, t]\n  );\n\n  React.useEffect(() => {\n    fetchResults();\n  }, [fetchResults]);\n\n  const handleShowMore = async () => {\n    await fetchResults(displayedStarsCount);\n    setDisplayedStarsCount((prev) => prev + STARRED_PAGINATION_LIMIT);\n  };\n\n  // Drop to reorder document\n  const [{ isOverReorder, isDraggingAnyStar }, dropToReorder] = useDrop({\n    accept: \"star\",\n    drop: async (item: Star) => {\n      item?.save({ index: fractionalIndex(null, stars.orderedData[0].index) });\n    },\n    collect: (monitor) => ({\n      isOverReorder: !!monitor.isOver(),\n      isDraggingAnyStar: monitor.getItemType() === \"star\",\n    }),\n  });\n\n  if (!stars.orderedData.length) {\n    return null;\n  }\n\n  return (\n    <StarredContext.Provider value={true}>\n      <Flex column>\n        <Header id=\"starred\" title={t(\"Starred\")}>\n          <Relative>\n            {isDraggingAnyStar && (\n              <DropCursor\n                isActiveDrop={isOverReorder}\n                innerRef={dropToReorder}\n                position=\"top\"\n              />\n            )}\n            {stars.orderedData.slice(0, displayedStarsCount).map((star) => (\n              <StarredLink key={star.id} star={star} />\n            ))}\n            {stars.orderedData.length > displayedStarsCount && (\n              <SidebarLink\n                onClick={handleShowMore}\n                label={`${t(\"Show more\")}…`}\n                disabled={stars.isFetching}\n                depth={0}\n              />\n            )}\n            {(stars.isFetching || fetchError) && !stars.orderedData.length && (\n              <Flex column>\n                <PlaceholderCollections />\n              </Flex>\n            )}\n          </Relative>\n        </Header>\n      </Flex>\n    </StarredContext.Provider>\n  );\n}\n\nexport default observer(Starred);\n","import { observer } from \"mobx-react\";\nimport { TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { useTranslation } from \"react-i18next\";\nimport Document from \"~/models/Document\";\nimport DocumentDelete from \"~/scenes/DocumentDelete\";\nimport Modal from \"~/components/Modal\";\nimport useStores from \"~/hooks/useStores\";\nimport { trashPath } from \"~/utils/routeHelpers\";\nimport SidebarLink, { DragObject } from \"./SidebarLink\";\n\nfunction TrashLink() {\n  const { policies, documents } = useStores();\n  const { t } = useTranslation();\n  const [document, setDocument] = useState<Document>();\n\n  const [{ isDocumentDropping }, dropToTrashDocument] = useDrop({\n    accept: \"document\",\n    drop: (item: DragObject) => {\n      const doc = documents.get(item.id);\n\n      // without setTimeout it was not working in firefox v89.0.2-ubuntu\n      // on dropping mouseup is considered as clicking outside the modal, and it immediately closes\n      setTimeout(() => doc && setDocument(doc), 1);\n    },\n    canDrop: (item) => policies.abilities(item.id).delete,\n    collect: (monitor) => ({\n      isDocumentDropping: monitor.isOver(),\n    }),\n  });\n\n  return (\n    <>\n      <div ref={dropToTrashDocument}>\n        <SidebarLink\n          to={trashPath()}\n          icon={<TrashIcon color=\"currentColor\" open={isDocumentDropping} />}\n          exact={false}\n          label={t(\"Trash\")}\n          active={documents.active?.isDeleted}\n          isActiveDrop={isDocumentDropping}\n        />\n      </div>\n      {document && (\n        <Modal\n          title={t(\"Delete {{ documentName }}\", {\n            documentName: document.noun,\n          })}\n          onRequestClose={() => setDocument(undefined)}\n          isOpen\n          isCentered\n        >\n          <DocumentDelete\n            document={document}\n            onSubmit={() => setDocument(undefined)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default observer(TrashLink);\n","import { observer } from \"mobx-react\";\nimport { EditIcon, SearchIcon, ShapesIcon, HomeIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Flex from \"~/components/Flex\";\nimport Scrollable from \"~/components/Scrollable\";\nimport Text from \"~/components/Text\";\nimport { inviteUser } from \"~/actions/definitions/users\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport OrganizationMenu from \"~/menus/OrganizationMenu\";\nimport {\n  homePath,\n  draftsPath,\n  templatesPath,\n  searchPath,\n} from \"~/utils/routeHelpers\";\nimport TeamLogo from \"../TeamLogo\";\nimport Sidebar from \"./Sidebar\";\nimport ArchiveLink from \"./components/ArchiveLink\";\nimport Collections from \"./components/Collections\";\nimport Section from \"./components/Section\";\nimport SidebarAction from \"./components/SidebarAction\";\nimport SidebarButton, { SidebarButtonProps } from \"./components/SidebarButton\";\nimport SidebarLink from \"./components/SidebarLink\";\nimport Starred from \"./components/Starred\";\nimport TrashLink from \"./components/TrashLink\";\n\nfunction AppSidebar() {\n  const { t } = useTranslation();\n  const { documents } = useStores();\n  const team = useCurrentTeam();\n  const can = usePolicy(team.id);\n\n  React.useEffect(() => {\n    documents.fetchDrafts();\n    documents.fetchTemplates();\n  }, [documents]);\n\n  const [dndArea, setDndArea] = React.useState();\n  const handleSidebarRef = React.useCallback((node) => setDndArea(node), []);\n  const html5Options = React.useMemo(\n    () => ({\n      rootElement: dndArea,\n    }),\n    [dndArea]\n  );\n\n  return (\n    <Sidebar ref={handleSidebarRef}>\n      {dndArea && (\n        <DndProvider backend={HTML5Backend} options={html5Options}>\n          <OrganizationMenu>\n            {(props: SidebarButtonProps) => (\n              <SidebarButton\n                {...props}\n                title={team.name}\n                image={\n                  <StyledTeamLogo\n                    src={team.avatarUrl}\n                    width={32}\n                    height={32}\n                    alt={t(\"Logo\")}\n                  />\n                }\n                showDisclosure\n              />\n            )}\n          </OrganizationMenu>\n          <Scrollable flex shadow>\n            <Section>\n              <SidebarLink\n                to={homePath()}\n                icon={<HomeIcon color=\"currentColor\" />}\n                exact={false}\n                label={t(\"Home\")}\n              />\n              <SidebarLink\n                to={searchPath()}\n                icon={<SearchIcon color=\"currentColor\" />}\n                label={t(\"Search\")}\n                exact={false}\n              />\n              {can.createDocument && (\n                <SidebarLink\n                  to={draftsPath()}\n                  icon={<EditIcon color=\"currentColor\" />}\n                  label={\n                    <Flex align=\"center\" justify=\"space-between\">\n                      {t(\"Drafts\")}\n                      <Drafts size=\"xsmall\" type=\"tertiary\">\n                        {documents.totalDrafts}\n                      </Drafts>\n                    </Flex>\n                  }\n                />\n              )}\n            </Section>\n            <Section>\n              <Starred />\n            </Section>\n            <Section auto>\n              <Collections />\n            </Section>\n            <Section>\n              {can.createDocument && (\n                <>\n                  <SidebarLink\n                    to={templatesPath()}\n                    icon={<ShapesIcon color=\"currentColor\" />}\n                    exact={false}\n                    label={t(\"Templates\")}\n                    active={\n                      documents.active\n                        ? documents.active.isTemplate &&\n                          !documents.active.isDeleted &&\n                          !documents.active.isArchived\n                        : undefined\n                    }\n                  />\n                  <ArchiveLink />\n                  <TrashLink />\n                </>\n              )}\n              <SidebarAction action={inviteUser} />\n            </Section>\n          </Scrollable>\n        </DndProvider>\n      )}\n    </Sidebar>\n  );\n}\n\nconst StyledTeamLogo = styled(TeamLogo)`\n  margin-right: 4px;\n  background: white;\n`;\n\nconst Drafts = styled(Text)`\n  margin: 0 4px;\n`;\n\nexport default observer(AppSidebar);\n","import Sidebar from \"./App\";\n\nexport default Sidebar;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Badge from \"~/components/Badge\";\nimport { version } from \"../../../../package.json\";\nimport SidebarLink from \"./SidebarLink\";\n\nexport default function Version() {\n  const [releasesBehind, setReleasesBehind] = React.useState(0);\n  const { t } = useTranslation();\n\n  React.useEffect(() => {\n    async function loadReleases() {\n      const res = await fetch(\n        \"https://api.github.com/repos/outline/outline/releases\"\n      );\n      const releases = await res.json();\n\n      if (Array.isArray(releases)) {\n        const computedReleasesBehind = releases\n          .map((release) => release.tag_name)\n          .findIndex((tagName) => tagName === `v${version}`);\n\n        if (computedReleasesBehind >= 0) {\n          setReleasesBehind(computedReleasesBehind);\n        }\n      }\n    }\n\n    loadReleases();\n  }, []);\n\n  return (\n    <SidebarLink\n      href=\"https://github.com/outline/outline/releases\"\n      label={\n        <>\n          v{version}\n          <br />\n          <LilBadge>\n            {releasesBehind === 0\n              ? t(\"Up to date\")\n              : t(`{{ releasesBehind }} versions behind`, {\n                  releasesBehind,\n                  count: releasesBehind,\n                })}\n          </LilBadge>\n        </>\n      }\n    />\n  );\n}\n\nconst LilBadge = styled(Badge)`\n  margin-left: 0;\n`;\n","import { groupBy } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport { BackIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Flex from \"~/components/Flex\";\nimport Scrollable from \"~/components/Scrollable\";\nimport useAuthorizedSettingsConfig from \"~/hooks/useAuthorizedSettingsConfig\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\nimport Sidebar from \"./Sidebar\";\nimport Header from \"./components/Header\";\nimport Section from \"./components/Section\";\nimport SidebarButton from \"./components/SidebarButton\";\nimport SidebarLink from \"./components/SidebarLink\";\nimport Version from \"./components/Version\";\n\nfunction SettingsSidebar() {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const configs = useAuthorizedSettingsConfig();\n  const groupedConfig = groupBy(configs, \"group\");\n\n  const returnToApp = React.useCallback(() => {\n    history.push(\"/home\");\n  }, [history]);\n\n  return (\n    <Sidebar>\n      <SidebarButton\n        title={t(\"Return to App\")}\n        image={<StyledBackIcon color=\"currentColor\" />}\n        onClick={returnToApp}\n        minHeight={48}\n      />\n\n      <Flex auto column>\n        <Scrollable shadow>\n          {Object.keys(groupedConfig).map((header) => (\n            <Section key={header}>\n              <Header title={header}>\n                {groupedConfig[header].map((item) => (\n                  <SidebarLink\n                    key={item.path}\n                    to={item.path}\n                    icon={<item.icon color=\"currentColor\" />}\n                    label={item.name}\n                  />\n                ))}\n              </Header>\n            </Section>\n          ))}\n          {!isCloudHosted && (\n            <Section>\n              <Header title={t(\"Installation\")} />\n              <Version />\n            </Section>\n          )}\n        </Scrollable>\n      </Flex>\n    </Sidebar>\n  );\n}\n\nconst StyledBackIcon = styled(BackIcon)`\n  margin-left: 4px;\n`;\n\nexport default observer(SettingsSidebar);\n","import { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RootStore from \"~/stores/RootStore\";\nimport ErrorSuspended from \"~/scenes/ErrorSuspended\";\nimport Layout from \"~/components/Layout\";\nimport RegisterKeyDown from \"~/components/RegisterKeyDown\";\nimport Sidebar from \"~/components/Sidebar\";\nimport SettingsSidebar from \"~/components/Sidebar/Settings\";\nimport history from \"~/utils/history\";\nimport {\n  searchPath,\n  matchDocumentSlug as slug,\n  newDocumentPath,\n  settingsPath,\n} from \"~/utils/routeHelpers\";\nimport Fade from \"./Fade\";\nimport withStores from \"./withStores\";\n\nconst DocumentHistory = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"document-history\" */\n      \"~/components/DocumentHistory\"\n    )\n);\nconst CommandBar = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"command-bar\" */\n      \"~/components/CommandBar\"\n    )\n);\n\ntype Props = WithTranslation & RootStore;\n\n@observer\nclass AuthenticatedLayout extends React.Component<Props> {\n  scrollable: HTMLDivElement | null | undefined;\n\n  @observable\n  keyboardShortcutsOpen = false;\n\n  goToSearch = (ev: KeyboardEvent) => {\n    if (!ev.metaKey && !ev.ctrlKey) {\n      ev.preventDefault();\n      ev.stopPropagation();\n      history.push(searchPath());\n    }\n  };\n\n  goToNewDocument = (event: KeyboardEvent) => {\n    if (event.metaKey || event.altKey) {\n      return;\n    }\n\n    const { activeCollectionId } = this.props.ui;\n    if (!activeCollectionId) {\n      return;\n    }\n    const can = this.props.policies.abilities(activeCollectionId);\n    if (!can.update) {\n      return;\n    }\n    history.push(newDocumentPath(activeCollectionId));\n  };\n\n  render() {\n    const { auth } = this.props;\n    const { user, team } = auth;\n    const showSidebar = auth.authenticated && user && team;\n    if (auth.isSuspended) {\n      return <ErrorSuspended />;\n    }\n\n    const sidebar = showSidebar ? (\n      <Fade>\n        <Switch>\n          <Route path={settingsPath()} component={SettingsSidebar} />\n          <Route component={Sidebar} />\n        </Switch>\n      </Fade>\n    ) : undefined;\n\n    const rightRail = (\n      <React.Suspense fallback={null}>\n        <Switch>\n          <Route\n            path={`/doc/${slug}/history/:revisionId?`}\n            component={DocumentHistory}\n          />\n        </Switch>\n      </React.Suspense>\n    );\n\n    return (\n      <Layout title={team?.name} sidebar={sidebar} rightRail={rightRail}>\n        <RegisterKeyDown trigger=\"n\" handler={this.goToNewDocument} />\n        <RegisterKeyDown trigger=\"t\" handler={this.goToSearch} />\n        <RegisterKeyDown trigger=\"/\" handler={this.goToSearch} />\n        {this.props.children}\n        <CommandBar />\n      </Layout>\n    );\n  }\n}\n\nexport default withTranslation()(withStores(AuthenticatedLayout));\n","import * as React from \"react\";\nimport { Switch, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport Archive from \"~/scenes/Archive\";\nimport DocumentNew from \"~/scenes/DocumentNew\";\nimport Drafts from \"~/scenes/Drafts\";\nimport Error404 from \"~/scenes/Error404\";\nimport Templates from \"~/scenes/Templates\";\nimport Trash from \"~/scenes/Trash\";\nimport Layout from \"~/components/AuthenticatedLayout\";\nimport CenteredContent from \"~/components/CenteredContent\";\nimport PlaceholderDocument from \"~/components/PlaceholderDocument\";\nimport Route from \"~/components/ProfiledRoute\";\nimport SocketProvider from \"~/components/SocketProvider\";\nimport { matchDocumentSlug as slug } from \"~/utils/routeHelpers\";\n\nconst SettingsRoutes = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"settings\" */\n      \"./settings\"\n    )\n);\nconst Document = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"document\" */\n      \"~/scenes/Document\"\n    )\n);\nconst Collection = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"collection\" */\n      \"~/scenes/Collection\"\n    )\n);\nconst Home = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"home\" */\n      \"~/scenes/Home\"\n    )\n);\nconst Search = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"search\" */\n      \"~/scenes/Search\"\n    )\n);\n\nconst RedirectDocument = ({\n  match,\n}: RouteComponentProps<{ documentSlug: string }>) => (\n  <Redirect\n    to={\n      match.params.documentSlug ? `/doc/${match.params.documentSlug}` : \"/home\"\n    }\n  />\n);\n\nexport default function AuthenticatedRoutes() {\n  return (\n    <SocketProvider>\n      <Layout>\n        <React.Suspense\n          fallback={\n            <CenteredContent>\n              <PlaceholderDocument />\n            </CenteredContent>\n          }\n        >\n          <Switch>\n            <Redirect from=\"/dashboard\" to=\"/home\" />\n            <Route path=\"/home/:tab\" component={Home} />\n            <Route path=\"/home\" component={Home} />\n            <Route exact path=\"/templates\" component={Templates} />\n            <Route exact path=\"/templates/:sort\" component={Templates} />\n            <Route exact path=\"/drafts\" component={Drafts} />\n            <Route exact path=\"/archive\" component={Archive} />\n            <Route exact path=\"/trash\" component={Trash} />\n            <Redirect exact from=\"/starred\" to=\"/home\" />\n            <Redirect exact from=\"/collections/*\" to=\"/collection/*\" />\n            <Route exact path=\"/collection/:id/new\" component={DocumentNew} />\n            <Route exact path=\"/collection/:id/:tab\" component={Collection} />\n            <Route exact path=\"/collection/:id\" component={Collection} />\n            <Route exact path={`/d/${slug}`} component={RedirectDocument} />\n            <Route\n              exact\n              path={`/doc/${slug}/history/:revisionId?`}\n              component={Document}\n            />\n            <Route exact path={`/doc/${slug}/edit`} component={Document} />\n            <Route path={`/doc/${slug}`} component={Document} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/search/:term\" component={Search} />\n            <Route path=\"/404\" component={Error404} />\n            <SettingsRoutes />\n            <Route component={Error404} />\n          </Switch>\n        </React.Suspense>\n      </Layout>\n    </SocketProvider>\n  );\n}\n","import { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport stores from \"~/stores\";\nimport Invite from \"~/scenes/Invite\";\nimport { createAction } from \"~/actions\";\nimport { UserSection } from \"~/actions/sections\";\n\nexport const inviteUser = createAction({\n  name: ({ t }) => `${t(\"Invite people\")}…`,\n  icon: <PlusIcon />,\n  keywords: \"team member user\",\n  section: UserSection,\n  visible: ({ stores }) =>\n    stores.policies.abilities(stores.auth.team?.id || \"\").inviteUser,\n  perform: ({ t }) => {\n    stores.dialogs.openModal({\n      title: t(\"Invite people\"),\n      content: <Invite onSubmit={stores.dialogs.closeAllModals} />,\n    });\n  },\n});\n\nexport const rootUserActions = [inviteUser];\n","import invariant from \"invariant\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport Dropzone from \"react-dropzone\";\nimport styled from \"styled-components\";\nimport RootStore from \"~/stores/RootStore\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport Modal from \"~/components/Modal\";\nimport withStores from \"~/components/withStores\";\nimport { compressImage } from \"~/utils/compressImage\";\nimport { uploadFile, dataUrlToBlob } from \"~/utils/files\";\n\nexport type Props = {\n  onSuccess: (url: string) => void | Promise<void>;\n  onError: (error: string) => void;\n  submitText?: string;\n  borderRadius?: number;\n};\n\n@observer\nclass ImageUpload extends React.Component<RootStore & Props> {\n  @observable\n  isUploading = false;\n\n  @observable\n  isCropping = false;\n\n  @observable\n  zoom = 1;\n\n  @observable\n  file: File;\n\n  avatarEditorRef = React.createRef<AvatarEditor>();\n\n  static defaultProps = {\n    submitText: \"Crop Image\",\n    borderRadius: 150,\n  };\n\n  onDropAccepted = async (files: File[]) => {\n    this.isCropping = true;\n    this.file = files[0];\n  };\n\n  handleCrop = () => {\n    this.isUploading = true;\n    // allow the UI to update before converting the canvas to a Blob\n    // for large images this can cause the page rendering to hang.\n    setImmediate(this.uploadImage);\n  };\n\n  uploadImage = async () => {\n    const canvas = this.avatarEditorRef.current?.getImage();\n    invariant(canvas, \"canvas is not defined\");\n    const imageBlob = dataUrlToBlob(canvas.toDataURL());\n\n    try {\n      const compressed = await compressImage(imageBlob, {\n        maxHeight: 512,\n        maxWidth: 512,\n      });\n      const attachment = await uploadFile(compressed, {\n        name: this.file.name,\n        public: true,\n      });\n      this.props.onSuccess(attachment.url);\n    } catch (err) {\n      this.props.onError(err.message);\n    } finally {\n      this.isUploading = false;\n      this.isCropping = false;\n    }\n  };\n\n  handleClose = () => {\n    this.isUploading = false;\n    this.isCropping = false;\n  };\n\n  handleZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target;\n\n    if (target instanceof HTMLInputElement) {\n      this.zoom = parseFloat(target.value);\n    }\n  };\n\n  renderCropping() {\n    const { ui, submitText } = this.props;\n    return (\n      <Modal isOpen onRequestClose={this.handleClose} title=\"\">\n        <Flex auto column align=\"center\" justify=\"center\">\n          {this.isUploading && <LoadingIndicator />}\n          <AvatarEditorContainer>\n            <AvatarEditor\n              ref={this.avatarEditorRef}\n              image={this.file}\n              width={250}\n              height={250}\n              border={25}\n              borderRadius={this.props.borderRadius}\n              color={\n                ui.theme === \"light\" ? [255, 255, 255, 0.6] : [0, 0, 0, 0.6]\n              } // RGBA\n              scale={this.zoom}\n              rotate={0}\n            />\n          </AvatarEditorContainer>\n          <RangeInput\n            type=\"range\"\n            min=\"0.1\"\n            max=\"2\"\n            step=\"0.01\"\n            defaultValue=\"1\"\n            onChange={this.handleZoom}\n          />\n          <CropButton onClick={this.handleCrop} disabled={this.isUploading}>\n            {this.isUploading ? \"Uploading…\" : submitText}\n          </CropButton>\n        </Flex>\n      </Modal>\n    );\n  }\n\n  render() {\n    if (this.isCropping) {\n      return this.renderCropping();\n    }\n\n    return (\n      <Dropzone\n        accept=\"image/png, image/jpeg\"\n        onDropAccepted={this.onDropAccepted}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {this.props.children}\n          </div>\n        )}\n      </Dropzone>\n    );\n  }\n}\n\nconst AvatarEditorContainer = styled(Flex)`\n  margin-bottom: 30px;\n`;\n\nconst RangeInput = styled.input`\n  display: block;\n  width: 300px;\n  margin-bottom: 30px;\n  height: 4px;\n  cursor: pointer;\n  color: inherit;\n  border-radius: 99999px;\n  background-color: #dee1e3;\n  appearance: none;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: ${(props) => props.theme.text};\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst CropButton = styled(Button)`\n  width: 300px;\n`;\n\nexport default withStores(ImageUpload);\n","import styled from \"styled-components\";\n\nconst TeamLogo = styled.img<{ width?: number; height?: number; size?: string }>`\n  width: ${(props) =>\n    props.width ? `${props.width}px` : props.size || \"auto\"};\n  height: ${(props) =>\n    props.height ? `${props.height}px` : props.size || \"38px\"};\n  border-radius: 4px;\n  border: 1px solid ${(props) => props.theme.divider};\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nexport default TeamLogo;\n","let hidden = \"hidden\";\nlet visibilityChange = \"visibilitychange\";\n\nif (\"hidden\" in document) {\n  hidden = \"hidden\";\n  visibilityChange = \"visibilitychange\";\n} else if (\"mozHidden\" in document) {\n  // Firefox up to v17\n  hidden = \"mozHidden\";\n  visibilityChange = \"mozvisibilitychange\";\n} else if (\"webkitHidden\" in document) {\n  // Chrome up to v32, Android up to v4.4, Blackberry up to v10\n  hidden = \"webkitHidden\";\n  visibilityChange = \"webkitvisibilitychange\";\n}\n\nexport function getVisibilityListener(): string {\n  return visibilityChange;\n}\n\nexport function getPageVisible(): boolean {\n  return !document[hidden];\n}\n","import invariant from \"invariant\";\nimport { find } from \"lodash\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport io from \"socket.io-client\";\nimport RootStore from \"~/stores/RootStore\";\nimport withStores from \"~/components/withStores\";\nimport { getVisibilityListener, getPageVisible } from \"~/utils/pageVisibility\";\n\ntype SocketWithAuthentication = {\n  authenticated?: boolean;\n  disconnected: boolean;\n  disconnect: () => void;\n  close: () => void;\n  on: (event: string, callback: (data: any) => void) => void;\n  emit: (event: string, data: any) => void;\n  io: any;\n};\n\nexport const SocketContext: any = React.createContext<SocketWithAuthentication | null>(\n  null\n);\n\ntype Props = RootStore;\n\n@observer\nclass SocketProvider extends React.Component<Props> {\n  @observable\n  socket: SocketWithAuthentication | null;\n\n  componentDidMount() {\n    this.createConnection();\n    document.addEventListener(getVisibilityListener(), this.checkConnection);\n  }\n\n  componentWillUnmount() {\n    if (this.socket) {\n      this.socket.authenticated = false;\n      this.socket.disconnect();\n    }\n\n    document.removeEventListener(getVisibilityListener(), this.checkConnection);\n  }\n\n  checkConnection = () => {\n    if (this.socket?.disconnected && getPageVisible()) {\n      // null-ifying this reference is important, do not remove. Without it\n      // references to old sockets are potentially held in context\n      this.socket.close();\n      this.socket = null;\n      this.createConnection();\n    }\n  };\n\n  createConnection = () => {\n    this.socket = io(window.location.origin, {\n      path: \"/realtime\",\n      transports: [\"websocket\"],\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 30000,\n    });\n    invariant(this.socket, \"Socket should be defined\");\n\n    this.socket.authenticated = false;\n    const {\n      auth,\n      toasts,\n      documents,\n      collections,\n      groups,\n      pins,\n      stars,\n      memberships,\n      policies,\n      presence,\n      views,\n      fileOperations,\n    } = this.props;\n    if (!auth.token) {\n      return;\n    }\n\n    this.socket.on(\"connect\", () => {\n      // immediately send current users token to the websocket backend where it\n      // is verified, if all goes well an 'authenticated' message will be\n      // received in response\n      this.socket?.emit(\"authentication\", {\n        token: auth.token,\n      });\n    });\n\n    this.socket.on(\"disconnect\", () => {\n      // when the socket is disconnected we need to clear all presence state as\n      // it's no longer reliable.\n      presence.clear();\n    });\n\n    // on reconnection, reset the transports option, as the Websocket\n    // connection may have failed (caused by proxy, firewall, browser, ...)\n    this.socket.on(\"reconnect_attempt\", () => {\n      if (this.socket) {\n        this.socket.io.opts.transports = auth?.team?.domain\n          ? [\"websocket\"]\n          : [\"websocket\", \"polling\"];\n      }\n    });\n\n    this.socket.on(\"authenticated\", () => {\n      if (this.socket) {\n        this.socket.authenticated = true;\n      }\n    });\n\n    this.socket.on(\"unauthorized\", (err: Error) => {\n      if (this.socket) {\n        this.socket.authenticated = false;\n      }\n      toasts.showToast(err.message, {\n        type: \"error\",\n      });\n      throw err;\n    });\n\n    this.socket.on(\"entities\", async (event: any) => {\n      if (event.documentIds) {\n        for (const documentDescriptor of event.documentIds) {\n          const documentId = documentDescriptor.id;\n          let document = documents.get(documentId) || {};\n\n          if (event.event === \"documents.delete\") {\n            const document = documents.get(documentId);\n\n            if (document) {\n              document.deletedAt = documentDescriptor.updatedAt;\n            }\n\n            policies.remove(documentId);\n            continue;\n          }\n\n          // if we already have the latest version (it was us that performed\n          // the change) then we don't need to update anything either.\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'title' does not exist on type '{}'.\n          const { title, updatedAt } = document;\n\n          if (updatedAt === documentDescriptor.updatedAt) {\n            continue;\n          }\n\n          // otherwise, grab the latest version of the document\n          try {\n            document = await documents.fetch(documentId, {\n              force: true,\n            });\n          } catch (err) {\n            if (err.statusCode === 404 || err.statusCode === 403) {\n              documents.remove(documentId);\n              return;\n            }\n          }\n\n          // if the title changed then we need to update the collection also\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'title' does not exist on type '{}'.\n          if (title !== document.title) {\n            if (!event.collectionIds) {\n              event.collectionIds = [];\n            }\n\n            const existing = find(event.collectionIds, {\n              // @ts-expect-error ts-migrate(2339) FIXME: Property 'collectionId' does not exist on type '{}... Remove this comment to see the full error message\n              id: document.collectionId,\n            });\n\n            if (!existing) {\n              event.collectionIds.push({\n                // @ts-expect-error ts-migrate(2339) FIXME: Property 'collectionId' does not exist on type '{}... Remove this comment to see the full error message\n                id: document.collectionId,\n              });\n            }\n          }\n        }\n      }\n\n      if (event.collectionIds) {\n        for (const collectionDescriptor of event.collectionIds) {\n          const collectionId = collectionDescriptor.id;\n          const collection = collections.get(collectionId);\n\n          if (event.event === \"collections.delete\") {\n            if (collection) {\n              collection.deletedAt = collectionDescriptor.updatedAt;\n            }\n\n            const deletedDocuments = documents.inCollection(collectionId);\n            deletedDocuments.forEach((doc) => {\n              doc.deletedAt = collectionDescriptor.updatedAt;\n              policies.remove(doc.id);\n            });\n            documents.removeCollectionDocuments(collectionId);\n            memberships.removeCollectionMemberships(collectionId);\n            collections.remove(collectionId);\n            policies.remove(collectionId);\n            continue;\n          }\n\n          // if we already have the latest version (it was us that performed\n          // the change) then we don't need to update anything either.\n\n          if (collection?.updatedAt === collectionDescriptor.updatedAt) {\n            continue;\n          }\n\n          try {\n            await collections.fetch(collectionId, {\n              force: true,\n            });\n          } catch (err) {\n            if (err.statusCode === 404 || err.statusCode === 403) {\n              documents.removeCollectionDocuments(collectionId);\n              memberships.removeCollectionMemberships(collectionId);\n              collections.remove(collectionId);\n              policies.remove(collectionId);\n              return;\n            }\n          }\n        }\n      }\n\n      if (event.groupIds) {\n        for (const groupDescriptor of event.groupIds) {\n          const groupId = groupDescriptor.id;\n          const group = groups.get(groupId) || {};\n          // if we already have the latest version (it was us that performed\n          // the change) then we don't need to update anything either.\n          // @ts-expect-error ts-migrate(2339) FIXME: Property 'updatedAt' does not exist on type '{}'.\n          const { updatedAt } = group;\n\n          if (updatedAt === groupDescriptor.updatedAt) {\n            continue;\n          }\n\n          try {\n            await groups.fetch(groupId, {\n              force: true,\n            });\n          } catch (err) {\n            if (err.statusCode === 404 || err.statusCode === 403) {\n              groups.remove(groupId);\n            }\n          }\n        }\n      }\n\n      if (event.teamIds) {\n        await auth.fetch();\n      }\n    });\n\n    this.socket.on(\"pins.create\", (event: any) => {\n      pins.add(event);\n    });\n\n    this.socket.on(\"pins.update\", (event: any) => {\n      pins.add(event);\n    });\n\n    this.socket.on(\"pins.delete\", (event: any) => {\n      pins.remove(event.modelId);\n    });\n\n    this.socket.on(\"stars.create\", (event: any) => {\n      stars.add(event);\n    });\n\n    this.socket.on(\"stars.update\", (event: any) => {\n      stars.add(event);\n    });\n\n    this.socket.on(\"stars.delete\", (event: any) => {\n      stars.remove(event.modelId);\n    });\n\n    this.socket.on(\"documents.permanent_delete\", (event: any) => {\n      documents.remove(event.documentId);\n    });\n\n    // received when a user is given access to a collection\n    // if the user is us then we go ahead and load the collection from API.\n    this.socket.on(\"collections.add_user\", (event: any) => {\n      if (auth.user && event.userId === auth.user.id) {\n        collections.fetch(event.collectionId, {\n          force: true,\n        });\n      }\n\n      // Document policies might need updating as the permission changes\n      documents.inCollection(event.collectionId).forEach((document) => {\n        policies.remove(document.id);\n      });\n    });\n\n    // received when a user is removed from having access to a collection\n    // to keep state in sync we must update our UI if the user is us,\n    // or otherwise just remove any membership state we have for that user.\n    this.socket.on(\"collections.remove_user\", (event: any) => {\n      if (auth.user && event.userId === auth.user.id) {\n        collections.remove(event.collectionId);\n        memberships.removeCollectionMemberships(event.collectionId);\n        documents.removeCollectionDocuments(event.collectionId);\n      } else {\n        memberships.remove(`${event.userId}-${event.collectionId}`);\n      }\n    });\n\n    this.socket.on(\"collections.update_index\", (event: any) => {\n      const collection = collections.get(event.collectionId);\n\n      if (collection) {\n        collection.updateIndex(event.index);\n      }\n    });\n\n    this.socket.on(\"fileOperations.create\", async (event: any) => {\n      const user = auth.user;\n      if (user) {\n        fileOperations.add({ ...event, user });\n      }\n    });\n\n    this.socket.on(\"fileOperations.update\", async (event: any) => {\n      const user = auth.user;\n      if (user) {\n        fileOperations.add({ ...event, user });\n      }\n    });\n\n    // received a message from the API server that we should request\n    // to join a specific room. Forward that to the ws server.\n    this.socket.on(\"join\", (event: any) => {\n      this.socket?.emit(\"join\", event);\n    });\n\n    // received a message from the API server that we should request\n    // to leave a specific room. Forward that to the ws server.\n    this.socket.on(\"leave\", (event: any) => {\n      this.socket?.emit(\"leave\", event);\n    });\n\n    // received whenever we join a document room, the payload includes\n    // userIds that are present/viewing and those that are editing.\n    this.socket.on(\"document.presence\", (event: any) => {\n      presence.init(event.documentId, event.userIds, event.editingIds);\n    });\n\n    // received whenever a new user joins a document room, aka they\n    // navigate to / start viewing a document\n    this.socket.on(\"user.join\", (event: any) => {\n      presence.touch(event.documentId, event.userId, event.isEditing);\n      views.touch(event.documentId, event.userId);\n    });\n\n    // received whenever a new user leaves a document room, aka they\n    // navigate away / stop viewing a document\n    this.socket.on(\"user.leave\", (event: any) => {\n      presence.leave(event.documentId, event.userId);\n      views.touch(event.documentId, event.userId);\n    });\n\n    // received when another client in a document room wants to change\n    // or update it's presence. Currently the only property is whether\n    // the client is in editing state or not.\n    this.socket.on(\"user.presence\", (event: any) => {\n      presence.touch(event.documentId, event.userId, event.isEditing);\n    });\n  };\n\n  render() {\n    return (\n      <SocketContext.Provider value={this.socket}>\n        {this.props.children}\n      </SocketContext.Provider>\n    );\n  }\n}\n\nexport default withStores(SocketProvider);\n","import invariant from \"invariant\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\nlet importingLock = false;\n\nexport default function useImportDocument(\n  collectionId?: string,\n  documentId?: string\n): {\n  handleFiles: (files: File[]) => Promise<void>;\n  isImporting: boolean;\n} {\n  const { documents } = useStores();\n  const { showToast } = useToasts();\n  const [isImporting, setImporting] = React.useState(false);\n  const { t } = useTranslation();\n  const history = useHistory();\n  const handleFiles = React.useCallback(\n    async (files = []) => {\n      if (importingLock) {\n        return;\n      }\n\n      // Because this is the onChange handler it's possible for the change to be\n      // from previously selecting a file to not selecting a file – aka empty\n      if (!files.length) {\n        return;\n      }\n\n      setImporting(true);\n      importingLock = true;\n\n      try {\n        let cId = collectionId;\n        const redirect = files.length === 1;\n\n        if (documentId && !collectionId) {\n          const document = await documents.fetch(documentId);\n          invariant(document, \"Document not available\");\n          cId = document.collectionId;\n        }\n\n        for (const file of files) {\n          const doc = await documents.import(file, documentId, cId, {\n            publish: true,\n          });\n\n          if (redirect) {\n            history.push(doc.url);\n          }\n        }\n      } catch (err) {\n        showToast(`${t(\"Could not import file\")}. ${err.message}`, {\n          type: \"error\",\n        });\n      } finally {\n        setImporting(false);\n        importingLock = false;\n      }\n    },\n    [t, documents, history, showToast, collectionId, documentId]\n  );\n\n  return {\n    handleFiles,\n    isImporting,\n  };\n}\n","import styled from \"styled-components\";\n\nconst Heading = styled.h1<{ centered?: boolean }>`\n  display: flex;\n  align-items: center;\n  user-select: none;\n  ${(props) => (props.centered ? \"text-align: center;\" : \"\")}\n`;\n\nexport default Heading;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n};\n\nconst ButtonLink: React.FC<Props> = React.forwardRef(\n  (props: Props, ref: React.Ref<HTMLButtonElement>) => {\n    return <Button {...props} ref={ref} />;\n  }\n);\n\nconst Button = styled.button`\n  margin: 0;\n  padding: 0;\n  border: 0;\n  color: ${(props) => props.theme.link};\n  line-height: inherit;\n  background: none;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport default ButtonLink;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Group from \"~/models/Group\";\nimport GroupMembers from \"~/scenes/GroupMembers\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Input from \"~/components/Input\";\nimport Modal from \"~/components/Modal\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  onSubmit: () => void;\n};\n\nfunction GroupNew({ onSubmit }: Props) {\n  const { groups } = useStores();\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n  const [name, setName] = React.useState<string | undefined>();\n  const [isSaving, setIsSaving] = React.useState(false);\n  const [group, setGroup] = React.useState();\n\n  const handleSubmit = async (ev: React.SyntheticEvent) => {\n    ev.preventDefault();\n    setIsSaving(true);\n\n    const group = new Group(\n      {\n        name: name,\n      },\n      groups\n    );\n\n    try {\n      setGroup(await group.save());\n    } catch (err) {\n      showToast(err.message, {\n        type: \"error\",\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleNameChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setName(ev.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Text type=\"secondary\">\n          <Trans>\n            Groups are for organizing your team. They work best when centered\n            around a function or a responsibility — Support or Engineering for\n            example.\n          </Trans>\n        </Text>\n        <Flex>\n          <Input\n            type=\"text\"\n            label=\"Name\"\n            onChange={handleNameChange}\n            value={name}\n            required\n            autoFocus\n            flex\n          />\n        </Flex>\n        <Text type=\"secondary\">\n          <Trans>You’ll be able to add people to the group next.</Trans>\n        </Text>\n\n        <Button type=\"submit\" disabled={isSaving || !name}>\n          {isSaving ? `${t(\"Creating\")}…` : t(\"Continue\")}\n        </Button>\n      </form>\n      <Modal\n        title={t(\"Group members\")}\n        onRequestClose={onSubmit}\n        isOpen={!!group}\n      >\n        {group && <GroupMembers group={group} />}\n      </Modal>\n    </>\n  );\n}\n\nexport default observer(GroupNew);\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { DateFilter as TDateFilter } from \"@shared/types\";\nimport FilterOptions from \"~/components/FilterOptions\";\n\ntype Props = {\n  dateFilter: string | null | undefined;\n  onSelect: (key: TDateFilter) => void;\n};\n\nconst DateFilter = ({ dateFilter, onSelect }: Props) => {\n  const { t } = useTranslation();\n  const options = React.useMemo(\n    () => [\n      {\n        key: \"\",\n        label: t(\"Any time\"),\n      },\n      {\n        key: \"day\",\n        label: t(\"Past day\"),\n      },\n      {\n        key: \"week\",\n        label: t(\"Past week\"),\n      },\n      {\n        key: \"month\",\n        label: t(\"Past month\"),\n      },\n      {\n        key: \"year\",\n        label: t(\"Past year\"),\n      },\n    ],\n    [t]\n  );\n\n  return (\n    <FilterOptions\n      options={options}\n      activeKey={dateFilter}\n      onSelect={onSelect}\n      defaultLabel={t(\"Any time\")}\n    />\n  );\n};\n\nexport default DateFilter;\n","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import * as React from \"react\";\nimport { useMenuState, MenuButton } from \"reakit/Menu\";\nimport styled from \"styled-components\";\nimport Button, { Inner } from \"~/components/Button\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport MenuItem from \"~/components/ContextMenu/MenuItem\";\nimport Text from \"~/components/Text\";\n\ntype TFilterOption = {\n  key: string;\n  label: string;\n  note?: string;\n};\n\ntype Props = {\n  options: TFilterOption[];\n  activeKey: string | null | undefined;\n  defaultLabel?: string;\n  selectedPrefix?: string;\n  className?: string;\n  onSelect: (key: string | null | undefined) => void;\n};\n\nconst FilterOptions = ({\n  options,\n  activeKey = \"\",\n  defaultLabel = \"Filter options\",\n  selectedPrefix = \"\",\n  className,\n  onSelect,\n}: Props) => {\n  const menu = useMenuState({\n    modal: true,\n  });\n  const selected =\n    options.find((option) => option.key === activeKey) || options[0];\n\n  const selectedLabel = selected ? `${selectedPrefix} ${selected.label}` : \"\";\n\n  return (\n    <Wrapper>\n      <MenuButton {...menu}>\n        {(props) => (\n          <StyledButton {...props} className={className} neutral disclosure>\n            {activeKey ? selectedLabel : defaultLabel}\n          </StyledButton>\n        )}\n      </MenuButton>\n      <ContextMenu aria-label={defaultLabel} {...menu}>\n        {options.map((option) => (\n          <MenuItem\n            key={option.key}\n            onClick={() => {\n              onSelect(option.key);\n              menu.hide();\n            }}\n            selected={option.key === activeKey}\n            {...menu}\n          >\n            {option.note ? (\n              <LabelWithNote>\n                {option.label}\n                <Note>{option.note}</Note>\n              </LabelWithNote>\n            ) : (\n              option.label\n            )}\n          </MenuItem>\n        ))}\n      </ContextMenu>\n    </Wrapper>\n  );\n};\n\nconst Note = styled(Text)`\n  margin-top: 2px;\n  margin-bottom: 0;\n  line-height: 1.2em;\n  font-size: 14px;\n  font-weight: 400;\n  color: ${(props) => props.theme.textTertiary};\n`;\n\nconst LabelWithNote = styled.div`\n  font-weight: 500;\n  text-align: left;\n\n  &:hover ${Note} {\n    color: ${(props) => props.theme.white50};\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  box-shadow: none;\n  text-transform: none;\n  border-color: transparent;\n  height: auto;\n\n  &:hover {\n    background: transparent;\n  }\n\n  ${Inner} {\n    line-height: 24px;\n    min-height: auto;\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin-right: 8px;\n`;\n\nexport default FilterOptions;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Collection from \"~/models/Collection\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Text from \"~/components/Text\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  collection: Collection;\n  onSubmit: () => void;\n};\n\nfunction CollectionExport({ collection, onSubmit }: Props) {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n\n  const handleSubmit = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      setIsLoading(true);\n      await collection.export();\n\n      setIsLoading(false);\n      showToast(\n        t(\"Export started, you will receive an email when it’s complete.\")\n      );\n      onSubmit();\n    },\n    [collection, onSubmit, showToast, t]\n  );\n\n  return (\n    <Flex column>\n      <form onSubmit={handleSubmit}>\n        <Text type=\"secondary\">\n          <Trans\n            defaults=\"Exporting the collection <em>{{collectionName}}</em> may take a few seconds. Your documents will be a zip of folders with files in Markdown format. Please visit the Export section on settings to get the zip.\"\n            values={{\n              collectionName: collection.name,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        </Text>\n        <Button type=\"submit\" disabled={isLoading} primary>\n          {isLoading ? `${t(\"Exporting\")}…` : t(\"Export Collection\")}\n        </Button>\n      </form>\n    </Flex>\n  );\n}\n\nexport default observer(CollectionExport);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Collection from \"~/models/Collection\";\nimport ConfirmationDialog from \"~/components/ConfirmationDialog\";\nimport Text from \"~/components/Text\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useStores from \"~/hooks/useStores\";\nimport { homePath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  collection: Collection;\n  onSubmit: () => void;\n};\n\nfunction CollectionDeleteDialog({ collection, onSubmit }: Props) {\n  const team = useCurrentTeam();\n  const { ui } = useStores();\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  const handleSubmit = async () => {\n    const redirect = collection.id === ui.activeCollectionId;\n    await collection.delete();\n    onSubmit();\n    if (redirect) {\n      history.push(homePath());\n    }\n  };\n\n  return (\n    <ConfirmationDialog\n      onSubmit={handleSubmit}\n      submitText={t(\"I’m sure – Delete\")}\n      savingText={`${t(\"Deleting\")}…`}\n      danger\n    >\n      <>\n        <Text type=\"secondary\">\n          <Trans\n            defaults=\"Are you sure about that? Deleting the <em>{{collectionName}}</em> collection is permanent and cannot be restored, however documents within will be moved to the trash.\"\n            values={{\n              collectionName: collection.name,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        </Text>\n        {team.defaultCollectionId === collection.id ? (\n          <Text type=\"secondary\">\n            <Trans\n              defaults=\"Also, <em>{{collectionName}}</em> is being used as the start view – deleting it will reset the start view to the Home page.\"\n              values={{\n                collectionName: collection.name,\n              }}\n              components={{\n                em: <strong />,\n              }}\n            />\n          </Text>\n        ) : null}\n      </>\n    </ConfirmationDialog>\n  );\n}\n\nexport default observer(CollectionDeleteDialog);\n","import { observer } from \"mobx-react\";\nimport {\n  NewDocumentIcon,\n  EditIcon,\n  TrashIcon,\n  ImportIcon,\n  ExportIcon,\n  PadlockIcon,\n  AlphabeticalSortIcon,\n  ManualSortIcon,\n  UnstarredIcon,\n  StarredIcon,\n} from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMenuState, MenuButton, MenuButtonHTMLProps } from \"reakit/Menu\";\nimport { VisuallyHidden } from \"reakit/VisuallyHidden\";\nimport getDataTransferFiles from \"@shared/utils/getDataTransferFiles\";\nimport Collection from \"~/models/Collection\";\nimport CollectionEdit from \"~/scenes/CollectionEdit\";\nimport CollectionExport from \"~/scenes/CollectionExport\";\nimport CollectionPermissions from \"~/scenes/CollectionPermissions\";\nimport CollectionDeleteDialog from \"~/components/CollectionDeleteDialog\";\nimport ContextMenu, { Placement } from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport { MenuItem } from \"~/types\";\nimport { newDocumentPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  collection: Collection;\n  placement?: Placement;\n  modal?: boolean;\n  label?: (props: MenuButtonHTMLProps) => React.ReactNode;\n  onOpen?: () => void;\n  onClose?: () => void;\n};\n\nfunction CollectionMenu({\n  collection,\n  label,\n  modal = true,\n  placement,\n  onOpen,\n  onClose,\n}: Props) {\n  const menu = useMenuState({\n    modal,\n    placement,\n  });\n  const team = useCurrentTeam();\n  const { documents, dialogs } = useStores();\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n  const history = useHistory();\n  const file = React.useRef<HTMLInputElement>(null);\n\n  const handlePermissions = React.useCallback(() => {\n    dialogs.openModal({\n      title: t(\"Collection permissions\"),\n      content: <CollectionPermissions collection={collection} />,\n    });\n  }, [collection, dialogs, t]);\n\n  const handleEdit = React.useCallback(() => {\n    dialogs.openModal({\n      title: t(\"Edit collection\"),\n      content: (\n        <CollectionEdit\n          collectionId={collection.id}\n          onSubmit={dialogs.closeAllModals}\n        />\n      ),\n    });\n  }, [collection.id, dialogs, t]);\n\n  const handleExport = React.useCallback(() => {\n    dialogs.openModal({\n      title: t(\"Export collection\"),\n      content: (\n        <CollectionExport\n          collection={collection}\n          onSubmit={dialogs.closeAllModals}\n        />\n      ),\n    });\n  }, [collection, dialogs, t]);\n\n  const handleNewDocument = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      history.push(newDocumentPath(collection.id));\n    },\n    [history, collection.id]\n  );\n\n  const stopPropagation = React.useCallback((ev: React.SyntheticEvent) => {\n    ev.stopPropagation();\n  }, []);\n\n  const handleImportDocument = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      ev.stopPropagation();\n\n      // simulate a click on the file upload input element\n      if (file.current) {\n        file.current.click();\n      }\n    },\n    [file]\n  );\n\n  const handleFilePicked = React.useCallback(\n    async (ev: React.FormEvent<HTMLInputElement>) => {\n      const files = getDataTransferFiles(ev);\n\n      // Because this is the onChange handler it's possible for the change to be\n      // from previously selecting a file to not selecting a file – aka empty\n      if (!files.length) {\n        return;\n      }\n\n      try {\n        const file = files[0];\n        const document = await documents.import(file, null, collection.id, {\n          publish: true,\n        });\n        history.push(document.url);\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n        throw err;\n      }\n    },\n    [history, showToast, collection.id, documents]\n  );\n\n  const handleChangeSort = React.useCallback(\n    (field: string) => {\n      menu.hide();\n      return collection.save({\n        sort: {\n          field,\n          direction: \"asc\",\n        },\n      });\n    },\n    [collection, menu]\n  );\n\n  const handleDelete = React.useCallback(() => {\n    dialogs.openModal({\n      isCentered: true,\n      title: t(\"Delete collection\"),\n      content: (\n        <CollectionDeleteDialog\n          collection={collection}\n          onSubmit={dialogs.closeAllModals}\n        />\n      ),\n    });\n  }, [dialogs, t, collection]);\n\n  const handleStar = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      collection.star();\n    },\n    [collection]\n  );\n\n  const handleUnstar = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      ev.stopPropagation();\n      collection.unstar();\n    },\n    [collection]\n  );\n\n  const alphabeticalSort = collection.sort.field === \"title\";\n  const can = usePolicy(collection.id);\n  const canUserInTeam = usePolicy(team.id);\n  const items: MenuItem[] = React.useMemo(\n    () => [\n      {\n        type: \"button\",\n        title: t(\"Unstar\"),\n        onClick: handleUnstar,\n        visible: collection.isStarred && !!can.unstar,\n        icon: <UnstarredIcon />,\n      },\n      {\n        type: \"button\",\n        title: t(\"Star\"),\n        onClick: handleStar,\n        visible: !collection.isStarred && !!can.star,\n        icon: <StarredIcon />,\n      },\n      {\n        type: \"separator\",\n      },\n      {\n        type: \"button\",\n        title: t(\"New document\"),\n        visible: can.update,\n        onClick: handleNewDocument,\n        icon: <NewDocumentIcon />,\n      },\n      {\n        type: \"button\",\n        title: t(\"Import document\"),\n        visible: can.update,\n        onClick: handleImportDocument,\n        icon: <ImportIcon />,\n      },\n      {\n        type: \"separator\",\n      },\n      {\n        type: \"submenu\",\n        title: t(\"Sort in sidebar\"),\n        visible: can.update,\n        icon: alphabeticalSort ? (\n          <AlphabeticalSortIcon color=\"currentColor\" />\n        ) : (\n          <ManualSortIcon color=\"currentColor\" />\n        ),\n        items: [\n          {\n            type: \"button\",\n            title: t(\"Alphabetical sort\"),\n            onClick: () => handleChangeSort(\"title\"),\n            selected: alphabeticalSort,\n          },\n          {\n            type: \"button\",\n            title: t(\"Manual sort\"),\n            onClick: () => handleChangeSort(\"index\"),\n            selected: !alphabeticalSort,\n          },\n        ],\n      },\n      {\n        type: \"button\",\n        title: `${t(\"Edit\")}…`,\n        visible: can.update,\n        onClick: handleEdit,\n        icon: <EditIcon />,\n      },\n      {\n        type: \"button\",\n        title: `${t(\"Permissions\")}…`,\n        visible: can.update,\n        onClick: handlePermissions,\n        icon: <PadlockIcon />,\n      },\n      {\n        type: \"button\",\n        title: `${t(\"Export\")}…`,\n        visible: !!(collection && canUserInTeam.export),\n        onClick: handleExport,\n        icon: <ExportIcon />,\n      },\n      {\n        type: \"separator\",\n      },\n      {\n        type: \"button\",\n        title: `${t(\"Delete\")}…`,\n        dangerous: true,\n        visible: !!(collection && can.delete),\n        onClick: handleDelete,\n        icon: <TrashIcon />,\n      },\n    ],\n    [\n      t,\n      handleUnstar,\n      collection,\n      can.unstar,\n      can.star,\n      can.update,\n      can.delete,\n      handleStar,\n      handleNewDocument,\n      handleImportDocument,\n      alphabeticalSort,\n      handleEdit,\n      handlePermissions,\n      canUserInTeam.export,\n      handleExport,\n      handleDelete,\n      handleChangeSort,\n    ]\n  );\n\n  if (!items.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <VisuallyHidden>\n        <label>\n          {t(\"Import document\")}\n          <input\n            type=\"file\"\n            ref={file}\n            onChange={handleFilePicked}\n            onClick={stopPropagation}\n            accept={documents.importFileTypes.join(\", \")}\n            tabIndex={-1}\n          />\n        </label>\n      </VisuallyHidden>\n      {label ? (\n        <MenuButton {...menu}>{label}</MenuButton>\n      ) : (\n        <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      )}\n      <ContextMenu\n        {...menu}\n        onOpen={onOpen}\n        onClose={onClose}\n        aria-label={t(\"Collection\")}\n      >\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(CollectionMenu);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\n\ntype Props = {\n  onRemove: () => void;\n};\n\nfunction GroupMemberMenu({ onRemove }: Props) {\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n  });\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Group member options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"button\",\n              dangerous: true,\n              title: t(\"Remove\"),\n              onClick: onRemove,\n            },\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(GroupMemberMenu);\n","import * as React from \"react\";\nimport User from \"~/models/User\";\nimport Avatar from \"~/components/Avatar\";\nimport Badge from \"~/components/Badge\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport ListItem from \"~/components/List/Item\";\nimport Time from \"~/components/Time\";\nimport GroupMemberMenu from \"~/menus/GroupMemberMenu\";\n\ntype Props = {\n  user: User;\n  onAdd?: () => Promise<void>;\n  onRemove?: () => Promise<void>;\n};\n\nconst GroupMemberListItem = ({ user, onRemove, onAdd }: Props) => {\n  return (\n    <ListItem\n      title={user.name}\n      subtitle={\n        <>\n          {user.lastActiveAt ? (\n            <>\n              Active <Time dateTime={user.lastActiveAt} /> ago\n            </>\n          ) : (\n            \"Never signed in\"\n          )}\n          {user.isInvited && <Badge>Invited</Badge>}\n          {user.isAdmin && <Badge primary={user.isAdmin}>Admin</Badge>}\n        </>\n      }\n      image={<Avatar src={user.avatarUrl} size={32} />}\n      actions={\n        <Flex align=\"center\">\n          {onRemove && <GroupMemberMenu onRemove={onRemove} />}\n          {onAdd && (\n            <Button onClick={onAdd} neutral>\n              Add\n            </Button>\n          )}\n        </Flex>\n      }\n    />\n  );\n};\n\nexport default GroupMemberListItem;\n","import { debounce } from \"lodash\";\nimport { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport RootStore from \"~/stores/RootStore\";\nimport Group from \"~/models/Group\";\nimport User from \"~/models/User\";\nimport Invite from \"~/scenes/Invite\";\nimport ButtonLink from \"~/components/ButtonLink\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport Input from \"~/components/Input\";\nimport Modal from \"~/components/Modal\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Text from \"~/components/Text\";\nimport withStores from \"~/components/withStores\";\nimport GroupMemberListItem from \"./components/GroupMemberListItem\";\n\ntype Props = WithTranslation &\n  RootStore & {\n    group: Group;\n    onSubmit: () => void;\n  };\n\n@observer\nclass AddPeopleToGroup extends React.Component<Props> {\n  @observable\n  inviteModalOpen = false;\n\n  @observable\n  query = \"\";\n\n  handleInviteModalOpen = () => {\n    this.inviteModalOpen = true;\n  };\n\n  handleInviteModalClose = () => {\n    this.inviteModalOpen = false;\n  };\n\n  handleFilter = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    this.query = ev.target.value;\n    this.debouncedFetch();\n  };\n\n  debouncedFetch = debounce(() => {\n    this.props.users.fetchPage({\n      query: this.query,\n    });\n  }, 250);\n\n  handleAddUser = async (user: User) => {\n    const { t } = this.props;\n\n    try {\n      await this.props.groupMemberships.create({\n        groupId: this.props.group.id,\n        userId: user.id,\n      });\n      this.props.toasts.showToast(\n        t(`{{userName}} was added to the group`, {\n          userName: user.name,\n        }),\n        {\n          type: \"success\",\n        }\n      );\n    } catch (err) {\n      this.props.toasts.showToast(t(\"Could not add user\"), {\n        type: \"error\",\n      });\n    }\n  };\n\n  render() {\n    const { users, group, auth, t } = this.props;\n    const { user, team } = auth;\n    if (!user || !team) {\n      return null;\n    }\n\n    return (\n      <Flex column>\n        <Text type=\"secondary\">\n          {t(\n            \"Add team members below to give them access to the group. Need to add someone who’s not yet on the team yet?\"\n          )}{\" \"}\n          <ButtonLink onClick={this.handleInviteModalOpen}>\n            {t(\"Invite them to {{teamName}}\", {\n              teamName: team.name,\n            })}\n          </ButtonLink>\n          .\n        </Text>\n        <Input\n          type=\"search\"\n          placeholder={`${t(\"Search by name\")}…`}\n          value={this.query}\n          onChange={this.handleFilter}\n          label={t(\"Search people\")}\n          labelHidden\n          autoFocus\n          flex\n        />\n        <PaginatedList\n          empty={\n            this.query ? (\n              <Empty>{t(\"No people matching your search\")}</Empty>\n            ) : (\n              <Empty>{t(\"No people left to add\")}</Empty>\n            )\n          }\n          items={users.notInGroup(group.id, this.query)}\n          fetch={this.query ? undefined : users.fetchPage}\n          renderItem={(item: User) => (\n            <GroupMemberListItem\n              key={item.id}\n              user={item}\n              onAdd={() => this.handleAddUser(item)}\n            />\n          )}\n        />\n        <Modal\n          title={t(\"Invite people\")}\n          onRequestClose={this.handleInviteModalClose}\n          isOpen={this.inviteModalOpen}\n        >\n          <Invite onSubmit={this.handleInviteModalClose} />\n        </Modal>\n      </Flex>\n    );\n  }\n}\n\nexport default withTranslation()(withStores(AddPeopleToGroup));\n","import { observer } from \"mobx-react\";\nimport { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Group from \"~/models/Group\";\nimport User from \"~/models/User\";\nimport Button from \"~/components/Button\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport Modal from \"~/components/Modal\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Subheading from \"~/components/Subheading\";\nimport Text from \"~/components/Text\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport AddPeopleToGroup from \"./AddPeopleToGroup\";\nimport GroupMemberListItem from \"./components/GroupMemberListItem\";\n\ntype Props = {\n  group: Group;\n};\n\nfunction GroupMembers({ group }: Props) {\n  const [addModalOpen, setAddModalOpen] = React.useState(false);\n  const { users, groupMemberships } = useStores();\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n  const can = usePolicy(group.id);\n\n  const handleAddModal = (state: boolean) => {\n    setAddModalOpen(state);\n  };\n\n  const handleRemoveUser = async (user: User) => {\n    try {\n      await groupMemberships.delete({\n        groupId: group.id,\n        userId: user.id,\n      });\n      showToast(\n        t(`{{userName}} was removed from the group`, {\n          userName: user.name,\n        }),\n        {\n          type: \"success\",\n        }\n      );\n    } catch (err) {\n      showToast(t(\"Could not remove user\"), {\n        type: \"error\",\n      });\n    }\n  };\n\n  return (\n    <Flex column>\n      {can.update ? (\n        <>\n          <Text type=\"secondary\">\n            <Trans\n              defaults=\"Add and remove team members in the <em>{{groupName}}</em> group. Adding people to the group will give them access to any collections this group has been added to.\"\n              values={{\n                groupName: group.name,\n              }}\n              components={{\n                em: <strong />,\n              }}\n            />\n          </Text>\n          <span>\n            <Button\n              type=\"button\"\n              onClick={() => handleAddModal(true)}\n              icon={<PlusIcon />}\n              neutral\n            >\n              {t(\"Add people\")}…\n            </Button>\n          </span>\n        </>\n      ) : (\n        <Text type=\"secondary\">\n          <Trans\n            defaults=\"Listing team members in the <em>{{groupName}}</em> group.\"\n            values={{\n              groupName: group.name,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        </Text>\n      )}\n\n      <Subheading>\n        <Trans>Members</Trans>\n      </Subheading>\n      <PaginatedList\n        items={users.inGroup(group.id)}\n        fetch={groupMemberships.fetchPage}\n        options={{\n          id: group.id,\n        }}\n        empty={<Empty>{t(\"This group has no members.\")}</Empty>}\n        renderItem={(item: User) => (\n          <GroupMemberListItem\n            key={item.id}\n            user={item}\n            onRemove={can.update ? () => handleRemoveUser(item) : undefined}\n          />\n        )}\n      />\n      {can.update && (\n        <Modal\n          title={t(`Add people to {{groupName}}`, {\n            groupName: group.name,\n          })}\n          onRequestClose={() => handleAddModal(false)}\n          isOpen={addModalOpen}\n        >\n          <AddPeopleToGroup\n            group={group}\n            onSubmit={() => handleAddModal(false)}\n          />\n        </Modal>\n      )}\n    </Flex>\n  );\n}\n\nexport default observer(GroupMembers);\n","import GroupMembers from \"./GroupMembers\";\n\nexport default GroupMembers;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { $Diff } from \"utility-types\";\nimport InputSelect, { Props, Option } from \"~/components/InputSelect\";\n\nconst InputSelectRole = (\n  props: $Diff<\n    Props,\n    {\n      options: Array<Option>;\n      ariaLabel: string;\n    }\n  >\n) => {\n  const { t } = useTranslation();\n  return (\n    <InputSelect\n      label={t(\"Role\")}\n      options={[\n        {\n          label: t(\"Member\"),\n          value: \"member\",\n        },\n        {\n          label: t(\"Viewer\"),\n          value: \"viewer\",\n        },\n        {\n          label: t(\"Admin\"),\n          value: \"admin\",\n        },\n      ]}\n      ariaLabel={t(\"Role\")}\n      {...props}\n    />\n  );\n};\n\nexport default InputSelectRole;\n","import { observer } from \"mobx-react\";\nimport { LinkIcon, CloseIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Role } from \"@shared/types\";\nimport Button from \"~/components/Button\";\nimport CopyToClipboard from \"~/components/CopyToClipboard\";\nimport Flex from \"~/components/Flex\";\nimport Input from \"~/components/Input\";\nimport InputSelectRole from \"~/components/InputSelectRole\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Text from \"~/components/Text\";\nimport Tooltip from \"~/components/Tooltip\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\nconst MAX_INVITES = 20;\n\ntype Props = {\n  onSubmit: () => void;\n};\n\ntype InviteRequest = {\n  email: string;\n  name: string;\n  role: Role;\n};\n\nfunction Invite({ onSubmit }: Props) {\n  const [isSaving, setIsSaving] = React.useState(false);\n  const [linkCopied, setLinkCopied] = React.useState<boolean>(false);\n  const [invites, setInvites] = React.useState<InviteRequest[]>([\n    {\n      email: \"\",\n      name: \"\",\n      role: \"member\",\n    },\n    {\n      email: \"\",\n      name: \"\",\n      role: \"member\",\n    },\n    {\n      email: \"\",\n      name: \"\",\n      role: \"member\",\n    },\n  ]);\n  const { users } = useStores();\n  const { showToast } = useToasts();\n  const user = useCurrentUser();\n  const team = useCurrentTeam();\n  const { t } = useTranslation();\n  const predictedDomain = user.email.split(\"@\")[1];\n  const can = usePolicy(team.id);\n\n  const handleSubmit = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      setIsSaving(true);\n\n      try {\n        const data = await users.invite(invites);\n        onSubmit();\n\n        if (data.sent.length > 0) {\n          showToast(t(\"We sent out your invites!\"), {\n            type: \"success\",\n          });\n        } else {\n          showToast(t(\"Those email addresses are already invited\"), {\n            type: \"success\",\n          });\n        }\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      } finally {\n        setIsSaving(false);\n      }\n    },\n    [onSubmit, showToast, invites, t, users]\n  );\n\n  const handleChange = React.useCallback((ev, index) => {\n    setInvites((prevInvites) => {\n      const newInvites = [...prevInvites];\n      newInvites[index][ev.target.name] = ev.target.value;\n      return newInvites;\n    });\n  }, []);\n\n  const handleAdd = React.useCallback(() => {\n    if (invites.length >= MAX_INVITES) {\n      showToast(\n        t(\"Sorry, you can only send {{MAX_INVITES}} invites at a time\", {\n          MAX_INVITES,\n        }),\n        {\n          type: \"warning\",\n        }\n      );\n    }\n\n    setInvites((prevInvites) => {\n      const newInvites = [...prevInvites];\n      newInvites.push({\n        email: \"\",\n        name: \"\",\n        role: \"member\",\n      });\n      return newInvites;\n    });\n  }, [showToast, invites, t]);\n\n  const handleRemove = React.useCallback(\n    (ev: React.SyntheticEvent, index: number) => {\n      ev.preventDefault();\n      setInvites((prevInvites) => {\n        const newInvites = [...prevInvites];\n        newInvites.splice(index, 1);\n        return newInvites;\n      });\n    },\n    []\n  );\n\n  const handleCopy = React.useCallback(() => {\n    setLinkCopied(true);\n    showToast(t(\"Share link copied\"), {\n      type: \"success\",\n    });\n  }, [showToast, t]);\n\n  const handleRoleChange = React.useCallback((role: Role, index: number) => {\n    setInvites((prevInvites) => {\n      const newInvites = [...prevInvites];\n      newInvites[index][\"role\"] = role;\n      return newInvites;\n    });\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {team.guestSignin ? (\n        <Text type=\"secondary\">\n          <Trans\n            defaults=\"Invite team members or guests to join your knowledge base. Team members can sign in with {{signinMethods}} or use their email address.\"\n            values={{\n              signinMethods: team.signinMethods,\n            }}\n          />\n        </Text>\n      ) : (\n        <Text type=\"secondary\">\n          <Trans\n            defaults=\"Invite team members to join your knowledge base. They will need to sign in with {{signinMethods}}.\"\n            values={{\n              signinMethods: team.signinMethods,\n            }}\n          />{\" \"}\n          {can.update && (\n            <Trans>\n              As an admin you can also{\" \"}\n              <Link to=\"/settings/security\">enable email sign-in</Link>.\n            </Trans>\n          )}\n        </Text>\n      )}\n      {team.subdomain && (\n        <CopyBlock>\n          <Flex align=\"flex-end\">\n            <Input\n              type=\"text\"\n              value={team.url}\n              label={t(\"Want a link to share directly with your team?\")}\n              readOnly\n              flex\n            />\n            &nbsp;&nbsp;\n            <CopyToClipboard text={team.url} onCopy={handleCopy}>\n              <Button\n                type=\"button\"\n                icon={<LinkIcon />}\n                style={{\n                  marginBottom: \"16px\",\n                }}\n                neutral\n              >\n                {linkCopied ? t(\"Link copied\") : t(\"Copy link\")}\n              </Button>\n            </CopyToClipboard>\n          </Flex>\n        </CopyBlock>\n      )}\n      {invites.map((invite, index) => (\n        <Flex key={index} gap={8}>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            label={t(\"Email\")}\n            labelHidden={index !== 0}\n            onChange={(ev) => handleChange(ev, index)}\n            placeholder={`example@${predictedDomain}`}\n            value={invite.email}\n            required={index === 0}\n            autoFocus={index === 0}\n            flex\n          />\n          <Input\n            type=\"text\"\n            name=\"name\"\n            label={t(\"Full name\")}\n            labelHidden={index !== 0}\n            onChange={(ev) => handleChange(ev, index)}\n            value={invite.name}\n            required={!!invite.email}\n          />\n          <InputSelectRole\n            onChange={(role: Role) => handleRoleChange(role, index)}\n            value={invite.role}\n            labelHidden={index !== 0}\n            short\n          />\n          {index !== 0 && (\n            <Remove>\n              <Tooltip tooltip={t(\"Remove invite\")} placement=\"top\">\n                <NudeButton onClick={(ev) => handleRemove(ev, index)}>\n                  <CloseIcon />\n                </NudeButton>\n              </Tooltip>\n            </Remove>\n          )}\n        </Flex>\n      ))}\n\n      <Flex justify=\"space-between\">\n        {invites.length <= MAX_INVITES ? (\n          <Button type=\"button\" onClick={handleAdd} neutral>\n            <Trans>Add another</Trans>…\n          </Button>\n        ) : (\n          <span />\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={isSaving}\n          data-on=\"click\"\n          data-event-category=\"invite\"\n          data-event-action=\"sendInvites\"\n        >\n          {isSaving ? `${t(\"Inviting\")}…` : t(\"Send Invites\")}\n        </Button>\n      </Flex>\n      <br />\n    </form>\n  );\n}\n\nconst CopyBlock = styled(\"div\")`\n  margin: 2em 0;\n  font-size: 14px;\n  background: ${(props) => props.theme.secondaryBackground};\n  border-radius: 8px;\n  padding: 16px 16px 8px;\n`;\n\nconst Remove = styled(\"div\")`\n  margin-top: 6px;\n  position: absolute;\n  right: -32px;\n`;\n\nexport default observer(Invite);\n","import { observer } from \"mobx-react\";\nimport { PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MenuButton, useMenuState } from \"reakit/Menu\";\nimport styled from \"styled-components\";\nimport Collection from \"~/models/Collection\";\nimport Button from \"~/components/Button\";\nimport CollectionIcon from \"~/components/CollectionIcon\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport Header from \"~/components/ContextMenu/Header\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { MenuItem } from \"~/types\";\nimport { newDocumentPath } from \"~/utils/routeHelpers\";\n\nconst ColorCollectionIcon = ({ collection }: { collection: Collection }) => {\n  return <CollectionIcon collection={collection} />;\n};\n\nfunction NewDocumentMenu() {\n  const menu = useMenuState({\n    modal: true,\n  });\n  const { t } = useTranslation();\n  const team = useCurrentTeam();\n  const { collections, policies } = useStores();\n  const can = usePolicy(team.id);\n  const items = React.useMemo(\n    () =>\n      collections.orderedData.reduce<MenuItem[]>((filtered, collection) => {\n        const can = policies.abilities(collection.id);\n\n        if (can.update) {\n          filtered.push({\n            type: \"route\",\n            to: newDocumentPath(collection.id),\n            title: <CollectionName>{collection.name}</CollectionName>,\n            icon: <ColorCollectionIcon collection={collection} />,\n          });\n        }\n\n        return filtered;\n      }, []),\n    [collections.orderedData, policies]\n  );\n\n  if (!can.createDocument) {\n    return null;\n  }\n\n  return (\n    <>\n      <MenuButton {...menu}>\n        {(props) => (\n          <Button icon={<PlusIcon />} disabled={items.length === 0} {...props}>\n            {`${t(\"New doc\")}…`}\n          </Button>\n        )}\n      </MenuButton>\n      <ContextMenu {...menu} aria-label={t(\"New document\")}>\n        <Header>{t(\"Choose a collection\")}</Header>\n        <Template {...menu} items={items} />\n      </ContextMenu>\n    </>\n  );\n}\n\nconst CollectionName = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport default observer(NewDocumentMenu);\n","import Compressor from \"compressorjs\";\n\ntype Options = {\n  maxWidth?: number;\n  maxHeight?: number;\n};\n\nexport const compressImage = async (\n  file: File | Blob,\n  options?: Options\n): Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    new Compressor(file, { ...options, success: resolve, error: reject });\n  });\n};\n","import { observable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { GroupIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport { MAX_AVATAR_DISPLAY } from \"@shared/constants\";\nimport RootStore from \"~/stores/RootStore\";\nimport CollectionGroupMembership from \"~/models/CollectionGroupMembership\";\nimport Group from \"~/models/Group\";\nimport GroupMembers from \"~/scenes/GroupMembers\";\nimport Facepile from \"~/components/Facepile\";\nimport Flex from \"~/components/Flex\";\nimport ListItem from \"~/components/List/Item\";\nimport Modal from \"~/components/Modal\";\nimport withStores from \"~/components/withStores\";\n\ntype Props = RootStore & {\n  group: Group;\n  membership?: CollectionGroupMembership;\n  showFacepile?: boolean;\n  showAvatar?: boolean;\n  renderActions: (params: { openMembersModal: () => void }) => React.ReactNode;\n};\n\n@observer\nclass GroupListItem extends React.Component<Props> {\n  @observable\n  membersModalOpen = false;\n\n  handleMembersModalOpen = () => {\n    this.membersModalOpen = true;\n  };\n\n  handleMembersModalClose = () => {\n    this.membersModalOpen = false;\n  };\n\n  render() {\n    const { group, groupMemberships, showFacepile, renderActions } = this.props;\n    const memberCount = group.memberCount;\n    const membershipsInGroup = groupMemberships.inGroup(group.id);\n    const users = membershipsInGroup\n      .slice(0, MAX_AVATAR_DISPLAY)\n      .map((gm) => gm.user);\n    const overflow = memberCount - users.length;\n\n    return (\n      <>\n        <ListItem\n          image={\n            <Image>\n              <GroupIcon size={24} />\n            </Image>\n          }\n          title={\n            <Title onClick={this.handleMembersModalOpen}>{group.name}</Title>\n          }\n          subtitle={\n            <>\n              {memberCount} member{memberCount === 1 ? \"\" : \"s\"}\n            </>\n          }\n          actions={\n            <Flex align=\"center\" gap={8}>\n              {showFacepile && (\n                <Facepile\n                  onClick={this.handleMembersModalOpen}\n                  users={users}\n                  overflow={overflow}\n                />\n              )}\n              {renderActions({\n                openMembersModal: this.handleMembersModalOpen,\n              })}\n            </Flex>\n          }\n        />\n        <Modal\n          title=\"Group members\"\n          onRequestClose={this.handleMembersModalClose}\n          isOpen={this.membersModalOpen}\n        >\n          <GroupMembers group={group} />\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst Image = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  background: ${(props) => props.theme.secondaryBackground};\n  border-radius: 32px;\n`;\n\nconst Title = styled.span`\n  &:hover {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nexport default withStores(GroupListItem);\n","import { HomeIcon } from \"outline-icons\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Optional } from \"utility-types\";\nimport CollectionIcon from \"~/components/CollectionIcon\";\nimport Flex from \"~/components/Flex\";\nimport InputSelect from \"~/components/InputSelect\";\nimport { IconWrapper } from \"~/components/Sidebar/components/SidebarLink\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype DefaultCollectionInputSelectProps = Optional<\n  React.ComponentProps<typeof InputSelect>\n> & {\n  onSelectCollection: (collection: string) => void;\n  defaultCollectionId: string | null;\n};\n\nconst DefaultCollectionInputSelect = ({\n  onSelectCollection,\n  defaultCollectionId,\n  ...rest\n}: DefaultCollectionInputSelectProps) => {\n  const { t } = useTranslation();\n  const { collections } = useStores();\n  const [fetching, setFetching] = useState(false);\n  const [fetchError, setFetchError] = useState();\n  const { showToast } = useToasts();\n\n  React.useEffect(() => {\n    async function load() {\n      if (!collections.isLoaded && !fetching && !fetchError) {\n        try {\n          setFetching(true);\n          await collections.fetchPage({\n            limit: 100,\n          });\n        } catch (error) {\n          showToast(\n            t(\"Collections could not be loaded, please reload the app\"),\n            {\n              type: \"error\",\n            }\n          );\n          setFetchError(error);\n        } finally {\n          setFetching(false);\n        }\n      }\n    }\n    load();\n  }, [showToast, fetchError, t, fetching, collections]);\n\n  const options = React.useMemo(\n    () =>\n      collections.publicCollections.reduce(\n        (acc, collection) => [\n          ...acc,\n          {\n            label: (\n              <Flex align=\"center\">\n                <IconWrapper>\n                  <CollectionIcon collection={collection} />\n                </IconWrapper>\n                {collection.name}\n              </Flex>\n            ),\n            value: collection.id,\n          },\n        ],\n        [\n          {\n            label: (\n              <Flex align=\"center\">\n                <IconWrapper>\n                  <HomeIcon color=\"currentColor\" />\n                </IconWrapper>\n                {t(\"Home\")}\n              </Flex>\n            ),\n            value: \"home\",\n          },\n        ]\n      ),\n    [collections.publicCollections, t]\n  );\n\n  if (fetching) {\n    return null;\n  }\n\n  return (\n    <InputSelect\n      value={defaultCollectionId ?? \"home\"}\n      options={options}\n      onChange={onSelectCollection}\n      ariaLabel={t(\"Default collection\")}\n      short\n      {...rest}\n    />\n  );\n};\n\nexport default DefaultCollectionInputSelect;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Flex from \"~/components/Flex\";\nimport ImageUpload, { Props as ImageUploadProps } from \"./ImageUpload\";\n\ntype Props = ImageUploadProps & {\n  src?: string;\n};\n\nexport default function ImageInput({ src, ...rest }: Props) {\n  const { t } = useTranslation();\n\n  return (\n    <ImageBox>\n      <ImageUpload {...rest}>\n        <Avatar src={src} />\n        <Flex auto align=\"center\" justify=\"center\">\n          {t(\"Upload\")}\n        </Flex>\n      </ImageUpload>\n    </ImageBox>\n  );\n}\n\nconst avatarStyles = `\n  width: 64px;\n  height: 64px;\n`;\n\nconst Avatar = styled.img`\n  ${avatarStyles};\n`;\n\nconst ImageBox = styled(Flex)`\n  ${avatarStyles};\n  position: relative;\n  font-size: 14px;\n  border-radius: 8px;\n  box-shadow: 0 0 0 1px ${(props) => props.theme.secondaryBackground};\n  background: ${(props) => props.theme.background};\n  overflow: hidden;\n\n  div div {\n    ${avatarStyles};\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    cursor: pointer;\n    transition: all 250ms;\n  }\n\n  &:hover div {\n    opacity: 1;\n    background: rgba(0, 0, 0, 0.75);\n    color: ${(props) => props.theme.white};\n  }\n`;\n","import { transparentize } from \"polished\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport Flex from \"~/components/Flex\";\nimport Text from \"~/components/Text\";\n\ntype Props = {\n  label: React.ReactNode;\n  description: React.ReactNode;\n  name: string;\n  visible?: boolean;\n  border?: boolean;\n};\n\nconst Row = styled(Flex)<{ $border?: boolean }>`\n  display: block;\n  padding: 24px 0;\n  border-bottom: 1px solid\n    ${(props) =>\n      props.$border === false\n        ? \"transparent\"\n        : transparentize(0.5, props.theme.divider)};\n\n  ${breakpoint(\"tablet\")`\n    display: flex;\n  `};\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n  flex: 1;\n\n  &:first-child {\n    min-width: 60%;\n  }\n\n  &:last-child {\n    min-width: 0;\n  }\n\n  ${breakpoint(\"tablet\")`\n    p {\n      margin-bottom: 0;\n    }\n  `};\n`;\n\nconst Label = styled(Text)`\n  margin-bottom: 4px;\n`;\n\nconst SettingRow: React.FC<Props> = ({\n  visible,\n  description,\n  name,\n  label,\n  border,\n  children,\n}) => {\n  if (visible === false) {\n    return null;\n  }\n  return (\n    <Row gap={32} $border={border}>\n      <Column>\n        <Label as=\"h3\">\n          <label htmlFor={name}>{label}</label>\n        </Label>\n        <Text type=\"secondary\">{description}</Text>\n      </Column>\n      <Column>{children}</Column>\n    </Row>\n  );\n};\n\nexport default SettingRow;\n","import { observer } from \"mobx-react\";\nimport { TeamIcon } from \"outline-icons\";\nimport { useRef, useState } from \"react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Button from \"~/components/Button\";\nimport DefaultCollectionInputSelect from \"~/components/DefaultCollectionInputSelect\";\nimport Heading from \"~/components/Heading\";\nimport Input from \"~/components/Input\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport env from \"~/env\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\nimport ImageInput from \"./components/ImageInput\";\nimport SettingRow from \"./components/SettingRow\";\n\nfunction Details() {\n  const { auth } = useStores();\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n  const team = useCurrentTeam();\n  const form = useRef<HTMLFormElement>(null);\n  const [name, setName] = useState(team.name);\n  const [subdomain, setSubdomain] = useState(team.subdomain);\n  const [avatarUrl, setAvatarUrl] = useState<string>(team.avatarUrl);\n  const [defaultCollectionId, setDefaultCollectionId] = useState<string | null>(\n    team.defaultCollectionId\n  );\n\n  const handleSubmit = React.useCallback(\n    async (event?: React.SyntheticEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      try {\n        await auth.updateTeam({\n          name,\n          avatarUrl,\n          subdomain,\n          defaultCollectionId,\n        });\n        showToast(t(\"Settings saved\"), {\n          type: \"success\",\n        });\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      }\n    },\n    [auth, name, avatarUrl, subdomain, defaultCollectionId, showToast, t]\n  );\n\n  const handleNameChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setName(ev.target.value);\n    },\n    []\n  );\n\n  const handleSubdomainChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setSubdomain(ev.target.value.toLowerCase());\n    },\n    []\n  );\n\n  const handleAvatarUpload = async (avatarUrl: string) => {\n    setAvatarUrl(avatarUrl);\n    await auth.updateTeam({\n      avatarUrl,\n    });\n    showToast(t(\"Logo updated\"), {\n      type: \"success\",\n    });\n  };\n\n  const handleAvatarError = React.useCallback(\n    (error: string | null | undefined) => {\n      showToast(error || t(\"Unable to upload new logo\"));\n    },\n    [showToast, t]\n  );\n\n  const onSelectCollection = React.useCallback(async (value: string) => {\n    const defaultCollectionId = value === \"home\" ? null : value;\n    setDefaultCollectionId(defaultCollectionId);\n  }, []);\n\n  const isValid = form.current?.checkValidity();\n\n  return (\n    <Scene title={t(\"Details\")} icon={<TeamIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Details\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans>\n          These settings affect the way that your knowledge base appears to\n          everyone on the team.\n        </Trans>\n      </Text>\n\n      <form onSubmit={handleSubmit} ref={form}>\n        <SettingRow\n          label={t(\"Logo\")}\n          name=\"avatarUrl\"\n          description={t(\n            \"The logo is displayed at the top left of the application.\"\n          )}\n        >\n          <ImageInput\n            onSuccess={handleAvatarUpload}\n            onError={handleAvatarError}\n            src={avatarUrl}\n            borderRadius={0}\n          />\n        </SettingRow>\n        <SettingRow\n          label={t(\"Name\")}\n          name=\"name\"\n          description={t(\n            \"The team name, usually the same as your company name.\"\n          )}\n        >\n          <Input\n            id=\"name\"\n            autoComplete=\"organization\"\n            value={name}\n            onChange={handleNameChange}\n            required\n          />\n        </SettingRow>\n        <SettingRow\n          visible={env.SUBDOMAINS_ENABLED && isCloudHosted}\n          label={t(\"Subdomain\")}\n          name=\"subdomain\"\n          description={\n            subdomain ? (\n              <>\n                <Trans>Your knowledge base will be accessible at</Trans>{\" \"}\n                <strong>{subdomain}.getoutline.com</strong>\n              </>\n            ) : (\n              t(\"Choose a subdomain to enable a login page just for your team.\")\n            )\n          }\n        >\n          <Input\n            id=\"subdomain\"\n            value={subdomain || \"\"}\n            onChange={handleSubdomainChange}\n            autoComplete=\"off\"\n            minLength={4}\n            maxLength={32}\n          />\n        </SettingRow>\n        <SettingRow\n          border={false}\n          label={t(\"Start view\")}\n          name=\"defaultCollectionId\"\n          description={t(\n            \"This is the screen that team members will first see when they sign in.\"\n          )}\n        >\n          <DefaultCollectionInputSelect\n            id=\"defaultCollectionId\"\n            onSelectCollection={onSelectCollection}\n            defaultCollectionId={defaultCollectionId}\n          />\n        </SettingRow>\n\n        <Button type=\"submit\" disabled={auth.isSaving || !isValid}>\n          {auth.isSaving ? `${t(\"Saving\")}…` : t(\"Save\")}\n        </Button>\n      </form>\n    </Scene>\n  );\n}\n\nexport default observer(Details);\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Spinner(props: React.HTMLAttributes<HTMLOrSVGElement>) {\n  return (\n    <SVG\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 16 16\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <Circle\n        fill=\"none\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        cx=\"8\"\n        cy=\"8\"\n        r=\"6\"\n      ></Circle>\n    </SVG>\n  );\n}\n\nconst SVG = styled.svg`\n  @keyframes rotator {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(270deg);\n    }\n  }\n\n  animation: rotator 1.4s linear infinite;\n  margin: 4px;\n`;\n\nconst Circle = styled.circle`\n  @keyframes dash {\n    0% {\n      stroke-dashoffset: 47;\n    }\n    50% {\n      stroke-dashoffset: 11;\n      transform: rotate(135deg);\n    }\n    100% {\n      stroke-dashoffset: 47;\n      transform: rotate(450deg);\n    }\n  }\n\n  stroke: ${(props) => props.theme.textSecondary};\n  stroke-dasharray: 46;\n  stroke-dashoffset: 0;\n  transform-origin: center;\n  animation: dash 1.4s ease-in-out infinite;\n`;\n","import { DownloadIcon, TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\n\ntype Props = {\n  id: string;\n  onDelete: (ev: React.SyntheticEvent) => Promise<void>;\n};\n\nfunction FileOperationMenu({ id, onDelete }: Props) {\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n  });\n\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Export options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"link\",\n              title: t(\"Download\"),\n              icon: <DownloadIcon />,\n              href: \"/api/fileOperations.redirect?id=\" + id,\n            },\n            {\n              type: \"separator\",\n            },\n            {\n              type: \"button\",\n              title: t(\"Delete\"),\n              icon: <TrashIcon />,\n              dangerous: true,\n              onClick: onDelete,\n            },\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default FileOperationMenu;\n","import { observer } from \"mobx-react\";\nimport { ArchiveIcon, DoneIcon, WarningIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport FileOperation from \"~/models/FileOperation\";\nimport { Action } from \"~/components/Actions\";\nimport ListItem from \"~/components/List/Item\";\nimport Spinner from \"~/components/Spinner\";\nimport Time from \"~/components/Time\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport FileOperationMenu from \"~/menus/FileOperationMenu\";\n\ntype Props = {\n  fileOperation: FileOperation;\n  handleDelete?: (fileOperation: FileOperation) => Promise<void>;\n};\n\nconst FileOperationListItem = ({ fileOperation, handleDelete }: Props) => {\n  const { t } = useTranslation();\n  const user = useCurrentUser();\n  const theme = useTheme();\n  const stateMapping = {\n    creating: t(\"Processing\"),\n    expired: t(\"Expired\"),\n    uploading: t(\"Processing\"),\n    error: t(\"Failed\"),\n  };\n\n  const iconMapping = {\n    creating: <Spinner />,\n    uploading: <Spinner />,\n    expired: <ArchiveIcon color={theme.textTertiary} />,\n    complete: <DoneIcon color={theme.primary} />,\n    error: <WarningIcon color={theme.danger} />,\n  };\n\n  const title =\n    fileOperation.type === \"import\" || fileOperation.collectionId\n      ? fileOperation.name\n      : t(\"All collections\");\n\n  return (\n    <ListItem\n      title={title}\n      image={iconMapping[fileOperation.state]}\n      subtitle={\n        <>\n          {fileOperation.state !== \"complete\" && (\n            <>{stateMapping[fileOperation.state]}&nbsp;•&nbsp;</>\n          )}\n          {fileOperation.error && <>{fileOperation.error}&nbsp;•&nbsp;</>}\n          {t(`{{userName}} requested`, {\n            userName:\n              user.id === fileOperation.user.id\n                ? t(\"You\")\n                : fileOperation.user.name,\n          })}\n          &nbsp;\n          <Time dateTime={fileOperation.createdAt} addSuffix shorten />\n          &nbsp;•&nbsp;{fileOperation.sizeInMB}\n        </>\n      }\n      actions={\n        fileOperation.state === \"complete\" && handleDelete ? (\n          <Action>\n            <FileOperationMenu\n              id={fileOperation.id}\n              onDelete={async (ev) => {\n                ev.preventDefault();\n                await handleDelete(fileOperation);\n              }}\n            />\n          </Action>\n        ) : undefined\n      }\n    />\n  );\n};\n\nexport default observer(FileOperationListItem);\n","import { observer } from \"mobx-react\";\nimport { DownloadIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport FileOperation from \"~/models/FileOperation\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport FileOperationListItem from \"./components/FileOperationListItem\";\n\nfunction Export() {\n  const { t } = useTranslation();\n  const user = useCurrentUser();\n  const { fileOperations, collections } = useStores();\n  const { showToast } = useToasts();\n  const [isLoading, setLoading] = React.useState(false);\n  const [isExporting, setExporting] = React.useState(false);\n\n  const handleExport = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      setLoading(true);\n\n      try {\n        await collections.export();\n        setExporting(true);\n        showToast(t(\"Export in progress…\"));\n      } finally {\n        setLoading(false);\n      }\n    },\n    [t, collections, showToast]\n  );\n\n  const handleDelete = React.useCallback(\n    async (fileOperation: FileOperation) => {\n      try {\n        await fileOperations.delete(fileOperation);\n        showToast(t(\"Export deleted\"));\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      }\n    },\n    [fileOperations, showToast, t]\n  );\n\n  return (\n    <Scene title={t(\"Export\")} icon={<DownloadIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Export\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans\n          defaults=\"A full export might take some time, consider exporting a single document or collection. The exported data is a zip of your documents in Markdown format. You may leave this page once the export has started – we will email a link to <em>{{ userEmail }}</em> when it’s complete.\"\n          values={{\n            userEmail: user.email,\n          }}\n          components={{\n            em: <strong />,\n          }}\n        />\n      </Text>\n      <Button\n        type=\"submit\"\n        onClick={handleExport}\n        disabled={isLoading || isExporting}\n        primary\n      >\n        {isExporting\n          ? t(\"Export Requested\")\n          : isLoading\n          ? `${t(\"Requesting Export\")}…`\n          : t(\"Export Data\")}\n      </Button>\n      <br />\n      <PaginatedList\n        items={fileOperations.exports}\n        fetch={fileOperations.fetchPage}\n        options={{\n          type: \"export\",\n        }}\n        heading={\n          <h2>\n            <Trans>Recent exports</Trans>\n          </h2>\n        }\n        renderItem={(item: FileOperation) => (\n          <FileOperationListItem\n            key={item.id}\n            fileOperation={item}\n            handleDelete={handleDelete}\n          />\n        )}\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Export);\n","import { observer } from \"mobx-react\";\nimport { BeakerIcon } from \"outline-icons\";\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Heading from \"~/components/Heading\";\nimport Scene from \"~/components/Scene\";\nimport Switch from \"~/components/Switch\";\nimport Text from \"~/components/Text\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport SettingRow from \"./components/SettingRow\";\n\nfunction Features() {\n  const { auth } = useStores();\n  const team = useCurrentTeam();\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n  const [data, setData] = useState({\n    collaborativeEditing: team.collaborativeEditing,\n  });\n\n  const handleChange = React.useCallback(\n    async (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const newData = { ...data, [ev.target.name]: ev.target.checked };\n      setData(newData);\n\n      await auth.updateTeam(newData);\n      showToast(t(\"Settings saved\"), {\n        type: \"success\",\n      });\n    },\n    [auth, data, showToast, t]\n  );\n\n  return (\n    <Scene title={t(\"Features\")} icon={<BeakerIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Features\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans>\n          Manage optional and beta features. Changing these settings will affect\n          the experience for all team members.\n        </Trans>\n      </Text>\n      <SettingRow\n        name=\"collaborativeEditing\"\n        label={t(\"Collaborative editing\")}\n        description={t(\n          \"When enabled multiple people can edit documents at the same time with shared presence and live cursors.\"\n        )}\n      >\n        <Switch\n          id=\"collaborativeEditing\"\n          name=\"collaborativeEditing\"\n          checked={data.collaborativeEditing}\n          disabled={data.collaborativeEditing}\n          onChange={handleChange}\n        />\n      </SettingRow>\n    </Scene>\n  );\n}\n\nexport default observer(Features);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Group from \"~/models/Group\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Text from \"~/components/Text\";\nimport useToasts from \"~/hooks/useToasts\";\nimport { groupSettingsPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  group: Group;\n  onSubmit: () => void;\n};\n\nfunction GroupDelete({ group, onSubmit }: Props) {\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n  const history = useHistory();\n  const [isDeleting, setIsDeleting] = React.useState(false);\n\n  const handleSubmit = async (ev: React.SyntheticEvent) => {\n    ev.preventDefault();\n    setIsDeleting(true);\n\n    try {\n      await group.delete();\n      history.push(groupSettingsPath());\n      onSubmit();\n    } catch (err) {\n      showToast(err.message, {\n        type: \"error\",\n      });\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  return (\n    <Flex column>\n      <form onSubmit={handleSubmit}>\n        <Text type=\"secondary\">\n          <Trans\n            defaults=\"Are you sure about that? Deleting the <em>{{groupName}}</em> group will cause its members to lose access to collections and documents that it is associated with.\"\n            values={{\n              groupName: group.name,\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />\n        </Text>\n        <Button type=\"submit\" danger>\n          {isDeleting ? `${t(\"Deleting\")}…` : t(\"I’m sure – Delete\")}\n        </Button>\n      </form>\n    </Flex>\n  );\n}\n\nexport default observer(GroupDelete);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Group from \"~/models/Group\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Input from \"~/components/Input\";\nimport Text from \"~/components/Text\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  group: Group;\n  onSubmit: () => void;\n};\n\nfunction GroupEdit({ group, onSubmit }: Props) {\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n  const [name, setName] = React.useState(group.name);\n  const [isSaving, setIsSaving] = React.useState(false);\n  const handleSubmit = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      setIsSaving(true);\n\n      try {\n        await group.save({\n          name: name,\n        });\n        onSubmit();\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      } finally {\n        setIsSaving(false);\n      }\n    },\n    [group, onSubmit, showToast, name]\n  );\n\n  const handleNameChange = React.useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setName(ev.target.value);\n    },\n    []\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Text type=\"secondary\">\n        <Trans>\n          You can edit the name of this group at any time, however doing so too\n          often might confuse your team mates.\n        </Trans>\n      </Text>\n      <Flex>\n        <Input\n          type=\"text\"\n          label={t(\"Name\")}\n          onChange={handleNameChange}\n          value={name}\n          required\n          autoFocus\n          flex\n        />\n      </Flex>\n\n      <Button type=\"submit\" disabled={isSaving || !name}>\n        {isSaving ? `${t(\"Saving\")}…` : t(\"Save\")}\n      </Button>\n    </form>\n  );\n}\n\nexport default observer(GroupEdit);\n","import { observer } from \"mobx-react\";\nimport { EditIcon, GroupIcon, TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport Group from \"~/models/Group\";\nimport GroupDelete from \"~/scenes/GroupDelete\";\nimport GroupEdit from \"~/scenes/GroupEdit\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport Modal from \"~/components/Modal\";\nimport usePolicy from \"~/hooks/usePolicy\";\n\ntype Props = {\n  group: Group;\n  onMembers: () => void;\n};\n\nfunction GroupMenu({ group, onMembers }: Props) {\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n  });\n  const [editModalOpen, setEditModalOpen] = React.useState(false);\n  const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);\n  const can = usePolicy(group.id);\n\n  return (\n    <>\n      <Modal\n        title={t(\"Edit group\")}\n        onRequestClose={() => setEditModalOpen(false)}\n        isOpen={editModalOpen}\n      >\n        <GroupEdit group={group} onSubmit={() => setEditModalOpen(false)} />\n      </Modal>\n      <Modal\n        title={t(\"Delete group\")}\n        onRequestClose={() => setDeleteModalOpen(false)}\n        isOpen={deleteModalOpen}\n        isCentered\n      >\n        <GroupDelete group={group} onSubmit={() => setDeleteModalOpen(false)} />\n      </Modal>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Group options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"button\",\n              title: `${t(\"Members\")}…`,\n              icon: <GroupIcon />,\n              onClick: onMembers,\n              visible: !!(group && can.read),\n            },\n            {\n              type: \"separator\",\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Edit\")}…`,\n              icon: <EditIcon />,\n              onClick: () => setEditModalOpen(true),\n              visible: !!(group && can.update),\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Delete\")}…`,\n              icon: <TrashIcon />,\n              dangerous: true,\n              onClick: () => setDeleteModalOpen(true),\n              visible: !!(group && can.delete),\n            },\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(GroupMenu);\n","import { observer } from \"mobx-react\";\nimport { PlusIcon, GroupIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Group from \"~/models/Group\";\nimport GroupNew from \"~/scenes/GroupNew\";\nimport { Action } from \"~/components/Actions\";\nimport Button from \"~/components/Button\";\nimport Empty from \"~/components/Empty\";\nimport GroupListItem from \"~/components/GroupListItem\";\nimport Heading from \"~/components/Heading\";\nimport Modal from \"~/components/Modal\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Scene from \"~/components/Scene\";\nimport Subheading from \"~/components/Subheading\";\nimport Text from \"~/components/Text\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport GroupMenu from \"~/menus/GroupMenu\";\n\nfunction Groups() {\n  const { t } = useTranslation();\n  const { groups } = useStores();\n  const team = useCurrentTeam();\n  const can = usePolicy(team.id);\n  const [\n    newGroupModalOpen,\n    handleNewGroupModalOpen,\n    handleNewGroupModalClose,\n  ] = useBoolean();\n\n  return (\n    <Scene\n      title={t(\"Groups\")}\n      icon={<GroupIcon color=\"currentColor\" />}\n      actions={\n        <>\n          {can.createGroup && (\n            <Action>\n              <Button\n                type=\"button\"\n                onClick={handleNewGroupModalOpen}\n                icon={<PlusIcon />}\n              >\n                {`${t(\"New group\")}…`}\n              </Button>\n            </Action>\n          )}\n        </>\n      }\n    >\n      <Heading>{t(\"Groups\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans>\n          Groups can be used to organize and manage the people on your team.\n        </Trans>\n      </Text>\n      <Subheading>{t(\"All groups\")}</Subheading>\n      <PaginatedList\n        items={groups.orderedData}\n        empty={<Empty>{t(\"No groups have been created yet\")}</Empty>}\n        fetch={groups.fetchPage}\n        renderItem={(item: Group) => (\n          <GroupListItem\n            key={item.id}\n            group={item}\n            renderActions={({ openMembersModal }) => (\n              <GroupMenu group={item} onMembers={openMembersModal} />\n            )}\n            showFacepile\n          />\n        )}\n      />\n\n      <Modal\n        title={t(\"Create a group\")}\n        onRequestClose={handleNewGroupModalClose}\n        isOpen={newGroupModalOpen}\n      >\n        <GroupNew onSubmit={handleNewGroupModalClose} />\n      </Modal>\n    </Scene>\n  );\n}\n\nexport default observer(Groups);\n","import { observer } from \"mobx-react\";\nimport { NewDocumentIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Flex from \"~/components/Flex\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport { uploadFile } from \"~/utils/files\";\n\ntype Props = {\n  children: JSX.Element;\n  format?: string;\n  disabled?: boolean;\n  activeClassName?: string;\n  onSubmit: () => void;\n};\n\nfunction DropToImport({ disabled, onSubmit, children, format }: Props) {\n  const { t } = useTranslation();\n  const { collections } = useStores();\n  const { showToast } = useToasts();\n  const [isImporting, setImporting] = React.useState(false);\n\n  const handleFiles = React.useCallback(\n    async (files) => {\n      if (files.length > 1) {\n        showToast(t(\"Please choose a single file to import\"), {\n          type: \"error\",\n        });\n        return;\n      }\n      const file = files[0];\n\n      setImporting(true);\n\n      try {\n        const attachment = await uploadFile(file, {\n          name: file.name,\n        });\n        await collections.import(attachment.id, format);\n        onSubmit();\n        showToast(\n          t(\"Your import is being processed, you can safely leave this page\"),\n          {\n            type: \"success\",\n            timeout: 6000,\n          }\n        );\n      } catch (err) {\n        showToast(err.message);\n      } finally {\n        setImporting(false);\n      }\n    },\n    [t, onSubmit, collections, format, showToast]\n  );\n\n  const handleRejection = React.useCallback(() => {\n    showToast(t(\"File not supported – please upload a valid ZIP file\"), {\n      type: \"error\",\n    });\n  }, [t, showToast]);\n\n  if (disabled) {\n    return children;\n  }\n\n  return (\n    <>\n      {isImporting && <LoadingIndicator />}\n      <Dropzone\n        accept=\"application/zip\"\n        onDropAccepted={handleFiles}\n        onDropRejected={handleRejection}\n        disabled={isImporting}\n      >\n        {({ getRootProps, getInputProps, isDragActive }) => (\n          <DropzoneContainer\n            {...getRootProps()}\n            $disabled={isImporting}\n            $isDragActive={isDragActive}\n            tabIndex={-1}\n          >\n            <input {...getInputProps()} />\n            <Flex align=\"center\" gap={4} column>\n              <Icon size={32} color=\"#fff\" />\n              {children}\n            </Flex>\n          </DropzoneContainer>\n        )}\n      </Dropzone>\n    </>\n  );\n}\n\nconst Icon = styled(NewDocumentIcon)`\n  padding: 4px;\n  border-radius: 50%;\n  background: ${(props) => props.theme.brand.blue};\n  color: white;\n`;\n\nconst DropzoneContainer = styled.div<{\n  $disabled: boolean;\n  $isDragActive: boolean;\n}>`\n  background: ${(props) =>\n    props.$isDragActive\n      ? props.theme.secondaryBackground\n      : props.theme.background};\n  border-radius: 8px;\n  border: 1px dashed ${(props) => props.theme.divider};\n  padding: 52px;\n  text-align: center;\n  font-size: 15px;\n  cursor: pointer;\n  opacity: ${(props) => (props.$disabled ? 0.5 : 1)};\n\n  &:hover {\n    background: ${(props) => props.theme.secondaryBackground};\n  }\n`;\n\nexport default observer(DropToImport);\n","import { QuestionMarkIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport {\n  useDisclosureState,\n  Disclosure,\n  DisclosureContent,\n} from \"reakit/Disclosure\";\nimport styled, { useTheme } from \"styled-components\";\nimport Button from \"~/components/Button\";\nimport Text from \"~/components/Text\";\n\ntype Props = {\n  title: React.ReactNode;\n};\n\nconst HelpDisclosure: React.FC<Props> = ({ title, children }) => {\n  const disclosure = useDisclosureState({ animated: true });\n  const theme = useTheme();\n\n  return (\n    <div>\n      <Disclosure {...disclosure}>\n        {(props) => (\n          <Button\n            icon={<QuestionMarkIcon color={theme.text} />}\n            neutral\n            borderOnHover\n            {...props}\n          >\n            {title}\n          </Button>\n        )}\n      </Disclosure>\n      <HelpContent {...disclosure}>\n        <Text type=\"secondary\">\n          <br />\n          {children}\n        </Text>\n      </HelpContent>\n    </div>\n  );\n};\n\nconst HelpContent = styled(DisclosureContent)`\n  transition: opacity 250ms ease-in-out;\n  opacity: 0;\n\n  &[data-enter] {\n    opacity: 1;\n  }\n`;\n\nexport default HelpDisclosure;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Trans } from \"react-i18next\";\nimport Flex from \"~/components/Flex\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport DropToImport from \"./DropToImport\";\nimport HelpDisclosure from \"./HelpDisclosure\";\n\nfunction ImportNotionDialog() {\n  const { dialogs } = useStores();\n\n  return (\n    <Flex column>\n      <Text type=\"secondary\">\n        <DropToImport onSubmit={dialogs.closeAllModals} format=\"notion\">\n          <Trans>\n            Drag and drop the zip file from Notion's HTML export option, or\n            click to upload\n          </Trans>\n        </DropToImport>\n      </Text>\n      <HelpDisclosure title={<Trans>Where do I find the file?</Trans>}>\n        <Trans\n          defaults=\"In Notion, click <em>Settings & Members</em> in the left sidebar and open Settings. Look for the Export section, and click <em>Export all workspace content</em>. Choose <em>HTML</em> as the format for the best data compatability.\"\n          components={{\n            em: <strong />,\n          }}\n        />\n      </HelpDisclosure>\n    </Flex>\n  );\n}\n\nexport default observer(ImportNotionDialog);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Trans } from \"react-i18next\";\nimport Flex from \"~/components/Flex\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport DropToImport from \"./DropToImport\";\nimport HelpDisclosure from \"./HelpDisclosure\";\n\nfunction ImportOutlineDialog() {\n  const { dialogs } = useStores();\n\n  return (\n    <Flex column>\n      <Text type=\"secondary\">\n        <DropToImport\n          onSubmit={dialogs.closeAllModals}\n          format=\"outline-markdown\"\n        >\n          <Trans>\n            Drag and drop the zip file from Outline's export option, or click to\n            upload\n          </Trans>\n        </DropToImport>\n      </Text>\n      <HelpDisclosure title={<Trans>How does this work?</Trans>}>\n        <Trans\n          defaults=\"You can import a zip file that was previously exported from an Outline installation – collections, documents, and images will be imported. In Outline, open <em>Export</em> in the Settings sidebar and click on <em>Export Data</em>.\"\n          components={{\n            em: <strong />,\n          }}\n        />\n      </HelpDisclosure>\n    </Flex>\n  );\n}\n\nexport default observer(ImportOutlineDialog);\n","import { observer } from \"mobx-react\";\nimport { NewDocumentIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { cdnPath } from \"@shared/utils/urls\";\nimport FileOperation from \"~/models/FileOperation\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport Item from \"~/components/List/Item\";\nimport OutlineLogo from \"~/components/OutlineLogo\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport FileOperationListItem from \"./components/FileOperationListItem\";\nimport ImportNotionDialog from \"./components/ImportNotionDialog\";\nimport ImportOutlineDialog from \"./components/ImportOutlineDialog\";\n\nfunction Import() {\n  const { t } = useTranslation();\n  const { dialogs, fileOperations } = useStores();\n\n  return (\n    <Scene title={t(\"Import\")} icon={<NewDocumentIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Import\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans>\n          Quickly transfer your existing documents, pages, and files from other\n          tools and services into Outline. You can also drag and drop any HTML,\n          Markdown, and text documents directly into Collections in the app.\n        </Trans>\n      </Text>\n\n      <div>\n        <Item\n          border={false}\n          image={<OutlineLogo size={28} fill=\"currentColor\" />}\n          title=\"Outline\"\n          subtitle={t(\n            \"Import a backup file that was previously exported from Outline\"\n          )}\n          actions={\n            <Button\n              type=\"submit\"\n              onClick={() => {\n                dialogs.openModal({\n                  title: t(\"Import data\"),\n                  isCentered: true,\n                  content: <ImportOutlineDialog />,\n                });\n              }}\n              neutral\n            >\n              {t(\"Import\")}…\n            </Button>\n          }\n        />\n        <Item\n          border={false}\n          image={<img src={cdnPath(\"/images/notion.png\")} width={28} />}\n          title=\"Notion\"\n          subtitle={t(\"Import pages exported from Notion\")}\n          actions={\n            <Button\n              type=\"submit\"\n              onClick={() => {\n                dialogs.openModal({\n                  title: t(\"Import data\"),\n                  isCentered: true,\n                  content: <ImportNotionDialog />,\n                });\n              }}\n              neutral\n            >\n              {t(\"Import\")}…\n            </Button>\n          }\n        />\n        <Item\n          border={false}\n          image={<img src={cdnPath(\"/images/confluence.png\")} width={28} />}\n          title=\"Confluence\"\n          subtitle={t(\"Import pages from a Confluence instance\")}\n          actions={\n            <Button type=\"submit\" disabled neutral>\n              {t(\"Coming soon\")}\n            </Button>\n          }\n        />\n      </div>\n      <br />\n      <PaginatedList\n        items={fileOperations.imports}\n        fetch={fileOperations.fetchPage}\n        options={{\n          type: \"import\",\n        }}\n        heading={\n          <h2>\n            <Trans>Recent imports</Trans>\n          </h2>\n        }\n        renderItem={(item: FileOperation) => (\n          <FileOperationListItem key={item.id} fileOperation={item} />\n        )}\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Import);\n","import * as React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport scrollIntoView from \"smooth-scroll-into-view-if-needed\";\nimport useQuery from \"~/hooks/useQuery\";\nimport type { Props } from \"./Table\";\n\nconst Table = React.lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"table\" */\n      \"~/components/Table\"\n    )\n);\n\nconst TableFromParams = (\n  props: Omit<Props, \"onChangeSort\" | \"onChangePage\" | \"topRef\">\n) => {\n  const topRef = React.useRef();\n  const location = useLocation();\n  const history = useHistory();\n  const params = useQuery();\n\n  const handleChangeSort = React.useCallback(\n    (sort, direction) => {\n      if (sort) {\n        params.set(\"sort\", sort);\n      } else {\n        params.delete(\"sort\");\n      }\n\n      params.set(\"direction\", direction.toLowerCase());\n\n      history.replace({\n        pathname: location.pathname,\n        search: params.toString(),\n      });\n    },\n    [params, history, location.pathname]\n  );\n\n  const handleChangePage = React.useCallback(\n    (page) => {\n      if (page) {\n        params.set(\"page\", page.toString());\n      } else {\n        params.delete(\"page\");\n      }\n\n      history.replace({\n        pathname: location.pathname,\n        search: params.toString(),\n      });\n\n      if (topRef.current) {\n        scrollIntoView(topRef.current, {\n          scrollMode: \"if-needed\",\n          behavior: \"auto\",\n          block: \"start\",\n        });\n      }\n    },\n    [params, history, location.pathname]\n  );\n\n  return (\n    <Table\n      topRef={topRef}\n      onChangeSort={handleChangeSort}\n      onChangePage={handleChangePage}\n      {...props}\n    />\n  );\n};\n\nexport default TableFromParams;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMenuState } from \"reakit/Menu\";\nimport User from \"~/models/User\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport Template from \"~/components/ContextMenu/Template\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  user: User;\n};\n\nfunction UserMenu({ user }: Props) {\n  const { users } = useStores();\n  const { t } = useTranslation();\n  const menu = useMenuState({\n    modal: true,\n  });\n  const can = usePolicy(user.id);\n  const { showToast } = useToasts();\n\n  const handlePromote = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      if (\n        !window.confirm(\n          t(\n            \"Are you sure you want to make {{ userName }} an admin? Admins can modify team and billing information.\",\n            {\n              userName: user.name,\n            }\n          )\n        )\n      ) {\n        return;\n      }\n\n      users.promote(user);\n    },\n    [users, user, t]\n  );\n\n  const handleMember = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      if (\n        !window.confirm(\n          t(\"Are you sure you want to make {{ userName }} a member?\", {\n            userName: user.name,\n          })\n        )\n      ) {\n        return;\n      }\n\n      users.demote(user, \"member\");\n    },\n    [users, user, t]\n  );\n\n  const handleViewer = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      if (\n        !window.confirm(\n          t(\n            \"Are you sure you want to make {{ userName }} a read-only viewer? They will not be able to edit any content\",\n            {\n              userName: user.name,\n            }\n          )\n        )\n      ) {\n        return;\n      }\n\n      users.demote(user, \"viewer\");\n    },\n    [users, user, t]\n  );\n\n  const handleSuspend = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      if (\n        !window.confirm(\n          t(\n            \"Are you sure you want to suspend this account? Suspended users will be prevented from logging in.\"\n          )\n        )\n      ) {\n        return;\n      }\n\n      users.suspend(user);\n    },\n    [users, user, t]\n  );\n\n  const handleRevoke = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      users.delete(user, {\n        confirmation: true,\n      });\n    },\n    [users, user]\n  );\n\n  const handleResendInvite = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      try {\n        await users.resendInvite(user);\n        showToast(t(`Invite was resent to ${user.name}`), { type: \"success\" });\n      } catch (err) {\n        showToast(\n          err.message ?? t(`An error occurred while sending the invite`),\n          {\n            type: \"error\",\n          }\n        );\n      }\n    },\n    [users, user, t, showToast]\n  );\n\n  const handleActivate = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      users.activate(user);\n    },\n    [users, user]\n  );\n\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"User options\")}>\n        <Template\n          {...menu}\n          items={[\n            {\n              type: \"button\",\n              title: t(\"Make {{ userName }} a member\", {\n                userName: user.name,\n              }),\n              onClick: handleMember,\n              visible: can.demote && user.role !== \"member\",\n            },\n            {\n              type: \"button\",\n              title: t(\"Make {{ userName }} a viewer\", {\n                userName: user.name,\n              }),\n              onClick: handleViewer,\n              visible: can.demote && user.role !== \"viewer\",\n            },\n            {\n              type: \"button\",\n              title: t(\"Make {{ userName }} an admin…\", {\n                userName: user.name,\n              }),\n              onClick: handlePromote,\n              visible: can.promote && user.role !== \"admin\",\n            },\n            {\n              type: \"button\",\n              title: t(\"Resend invite\"),\n              onClick: handleResendInvite,\n              visible: can.resendInvite,\n            },\n            {\n              type: \"separator\",\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Revoke invite\")}…`,\n              dangerous: true,\n              onClick: handleRevoke,\n              visible: user.isInvited,\n            },\n            {\n              type: \"button\",\n              title: t(\"Activate account\"),\n              onClick: handleActivate,\n              visible: !user.isInvited && user.isSuspended,\n            },\n            {\n              type: \"button\",\n              title: `${t(\"Suspend account\")}…`,\n              dangerous: true,\n              onClick: handleSuspend,\n              visible: !user.isInvited && !user.isSuspended,\n            },\n          ]}\n        />\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(UserMenu);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport User from \"~/models/User\";\nimport Avatar from \"~/components/Avatar\";\nimport Badge from \"~/components/Badge\";\nimport Flex from \"~/components/Flex\";\nimport TableFromParams from \"~/components/TableFromParams\";\nimport Time from \"~/components/Time\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport UserMenu from \"~/menus/UserMenu\";\n\ntype Props = Omit<React.ComponentProps<typeof TableFromParams>, \"columns\"> & {\n  data: User[];\n  canManage: boolean;\n};\n\nfunction PeopleTable({ canManage, ...rest }: Props) {\n  const { t } = useTranslation();\n  const currentUser = useCurrentUser();\n  const columns = React.useMemo(\n    () =>\n      [\n        {\n          id: \"name\",\n          Header: t(\"Name\"),\n          accessor: \"name\",\n          Cell: observer(\n            ({ value, row }: { value: string; row: { original: User } }) => (\n              <Flex align=\"center\" gap={8}>\n                <Avatar src={row.original.avatarUrl} size={32} /> {value}{\" \"}\n                {currentUser.id === row.original.id && `(${t(\"You\")})`}\n              </Flex>\n            )\n          ),\n        },\n        canManage\n          ? {\n              id: \"email\",\n              Header: t(\"Email\"),\n              accessor: \"email\",\n              Cell: observer(({ value }: { value: string }) => <>{value}</>),\n            }\n          : undefined,\n        {\n          id: \"lastActiveAt\",\n          Header: t(\"Last active\"),\n          accessor: \"lastActiveAt\",\n          Cell: observer(({ value }: { value: string }) =>\n            value ? <Time dateTime={value} addSuffix /> : null\n          ),\n        },\n        {\n          id: \"isAdmin\",\n          Header: t(\"Role\"),\n          accessor: \"rank\",\n          Cell: observer(({ row }: { row: { original: User } }) => (\n            <Badges>\n              {!row.original.lastActiveAt && <Badge>{t(\"Invited\")}</Badge>}\n              {row.original.isAdmin && <Badge primary>{t(\"Admin\")}</Badge>}\n              {row.original.isViewer && <Badge>{t(\"Viewer\")}</Badge>}\n              {row.original.isSuspended && <Badge>{t(\"Suspended\")}</Badge>}\n            </Badges>\n          )),\n        },\n        canManage\n          ? {\n              Header: \" \",\n              accessor: \"id\",\n              className: \"actions\",\n              disableSortBy: true,\n              Cell: observer(\n                ({ row, value }: { value: string; row: { original: User } }) =>\n                  currentUser.id !== value ? (\n                    <UserMenu user={row.original} />\n                  ) : null\n              ),\n            }\n          : undefined,\n      ].filter((i) => i),\n    [t, canManage, currentUser]\n  );\n\n  return <TableFromParams columns={columns} {...rest} />;\n}\n\nconst Badges = styled.div`\n  margin-left: -10px;\n`;\n\nexport default PeopleTable;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport FilterOptions from \"~/components/FilterOptions\";\n\ntype Props = {\n  activeKey: string;\n  onSelect: (key: string | null | undefined) => void;\n};\n\nconst UserStatusFilter = ({ activeKey, onSelect, ...rest }: Props) => {\n  const { t } = useTranslation();\n  const options = React.useMemo(\n    () => [\n      {\n        key: \"\",\n        label: t(\"Active\"),\n      },\n      {\n        key: \"all\",\n        label: t(\"Everyone\"),\n      },\n      {\n        key: \"admins\",\n        label: t(\"Admins\"),\n      },\n      {\n        key: \"suspended\",\n        label: t(\"Suspended\"),\n      },\n      {\n        key: \"invited\",\n        label: t(\"Invited\"),\n      },\n      {\n        key: \"viewers\",\n        label: t(\"Viewers\"),\n      },\n    ],\n    [t]\n  );\n\n  return (\n    <FilterOptions\n      options={options}\n      activeKey={activeKey}\n      onSelect={onSelect}\n      defaultLabel={t(\"Active\")}\n      {...rest}\n    />\n  );\n};\n\nexport default UserStatusFilter;\n","import { sortBy } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport { PlusIcon, UserIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { PAGINATION_SYMBOL } from \"~/stores/BaseStore\";\nimport User from \"~/models/User\";\nimport Invite from \"~/scenes/Invite\";\nimport { Action } from \"~/components/Actions\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Heading from \"~/components/Heading\";\nimport InputSearch from \"~/components/InputSearch\";\nimport Modal from \"~/components/Modal\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport PeopleTable from \"./components/PeopleTable\";\nimport UserStatusFilter from \"./components/UserStatusFilter\";\n\nfunction Members() {\n  const location = useLocation();\n  const history = useHistory();\n  const [\n    inviteModalOpen,\n    handleInviteModalOpen,\n    handleInviteModalClose,\n  ] = useBoolean();\n  const team = useCurrentTeam();\n  const { users } = useStores();\n  const { t } = useTranslation();\n  const params = useQuery();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [data, setData] = React.useState<User[]>([]);\n  const [totalPages, setTotalPages] = React.useState(0);\n  const [userIds, setUserIds] = React.useState<string[]>([]);\n  const can = usePolicy(team.id);\n  const query = params.get(\"query\") || \"\";\n  const filter = params.get(\"filter\") || \"\";\n  const sort = params.get(\"sort\") || \"name\";\n  const direction = (params.get(\"direction\") || \"asc\").toUpperCase() as\n    | \"ASC\"\n    | \"DESC\";\n  const page = parseInt(params.get(\"page\") || \"0\", 10);\n  const limit = 25;\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await users.fetchPage({\n          offset: page * limit,\n          limit,\n          sort,\n          direction,\n          query,\n          filter,\n        });\n        setTotalPages(Math.ceil(response[PAGINATION_SYMBOL].total / limit));\n        setUserIds(response.map((u: User) => u.id));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [query, sort, filter, page, direction, users]);\n\n  React.useEffect(() => {\n    let filtered = users.orderedData;\n\n    if (!filter) {\n      filtered = users.active.filter((u) => userIds.includes(u.id));\n    } else if (filter === \"all\") {\n      filtered = users.orderedData.filter((u) => userIds.includes(u.id));\n    } else if (filter === \"admins\") {\n      filtered = users.admins.filter((u) => userIds.includes(u.id));\n    } else if (filter === \"suspended\") {\n      filtered = users.suspended.filter((u) => userIds.includes(u.id));\n    } else if (filter === \"invited\") {\n      filtered = users.invited.filter((u) => userIds.includes(u.id));\n    } else if (filter === \"viewers\") {\n      filtered = users.viewers.filter((u) => userIds.includes(u.id));\n    }\n\n    // sort the resulting data by the original order from the server\n    setData(sortBy(filtered, (item) => userIds.indexOf(item.id)));\n  }, [\n    filter,\n    users.active,\n    users.admins,\n    users.orderedData,\n    users.suspended,\n    users.invited,\n    users.viewers,\n    userIds,\n  ]);\n\n  const handleFilter = React.useCallback(\n    (filter) => {\n      if (filter) {\n        params.set(\"filter\", filter);\n        params.delete(\"page\");\n      } else {\n        params.delete(\"filter\");\n      }\n\n      history.replace({\n        pathname: location.pathname,\n        search: params.toString(),\n      });\n    },\n    [params, history, location.pathname]\n  );\n\n  const handleSearch = React.useCallback(\n    (event) => {\n      const { value } = event.target;\n\n      if (value) {\n        params.set(\"query\", event.target.value);\n        params.delete(\"page\");\n      } else {\n        params.delete(\"query\");\n      }\n\n      history.replace({\n        pathname: location.pathname,\n        search: params.toString(),\n      });\n    },\n    [params, history, location.pathname]\n  );\n\n  return (\n    <Scene\n      title={t(\"Members\")}\n      icon={<UserIcon color=\"currentColor\" />}\n      actions={\n        <>\n          {can.inviteUser && (\n            <Action>\n              <Button\n                type=\"button\"\n                data-on=\"click\"\n                data-event-category=\"invite\"\n                data-event-action=\"peoplePage\"\n                onClick={handleInviteModalOpen}\n                icon={<PlusIcon />}\n              >\n                {t(\"Invite people\")}…\n              </Button>\n            </Action>\n          )}\n        </>\n      }\n    >\n      <Heading>{t(\"Members\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans>\n          Everyone that has signed into Outline appears here. It’s possible that\n          there are other users who have access through {team.signinMethods} but\n          haven’t signed in yet.\n        </Trans>\n      </Text>\n      <Flex gap={8}>\n        <InputSearch\n          short\n          value={query}\n          placeholder={`${t(\"Filter\")}…`}\n          onChange={handleSearch}\n        />\n        <LargeUserStatusFilter activeKey={filter} onSelect={handleFilter} />\n      </Flex>\n      <PeopleTable\n        data={data}\n        canManage={can.manage}\n        isLoading={isLoading}\n        page={page}\n        pageSize={limit}\n        totalPages={totalPages}\n        defaultSortDirection=\"ASC\"\n      />\n      {can.inviteUser && (\n        <Modal\n          title={t(\"Invite people\")}\n          onRequestClose={handleInviteModalClose}\n          isOpen={inviteModalOpen}\n        >\n          <Invite onSubmit={handleInviteModalClose} />\n        </Modal>\n      )}\n    </Scene>\n  );\n}\n\nconst LargeUserStatusFilter = styled(UserStatusFilter)`\n  height: 32px;\n`;\n\nexport default observer(Members);\n","import { debounce } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport { EmailIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Heading from \"~/components/Heading\";\nimport Input from \"~/components/Input\";\nimport Notice from \"~/components/Notice\";\nimport Scene from \"~/components/Scene\";\nimport Switch from \"~/components/Switch\";\nimport Text from \"~/components/Text\";\nimport env from \"~/env\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\nimport SettingRow from \"./components/SettingRow\";\n\nfunction Notifications() {\n  const { notificationSettings } = useStores();\n  const { showToast } = useToasts();\n  const user = useCurrentUser();\n  const { t } = useTranslation();\n\n  const options = [\n    {\n      event: \"documents.publish\",\n      title: t(\"Document published\"),\n      description: t(\n        \"Receive a notification whenever a new document is published\"\n      ),\n    },\n    {\n      event: \"documents.update\",\n      title: t(\"Document updated\"),\n      description: t(\n        \"Receive a notification when a document you created is edited\"\n      ),\n    },\n    {\n      event: \"collections.create\",\n      title: t(\"Collection created\"),\n      description: t(\n        \"Receive a notification whenever a new collection is created\"\n      ),\n    },\n    {\n      separator: true,\n    },\n    {\n      visible: isCloudHosted,\n      event: \"emails.onboarding\",\n      title: t(\"Getting started\"),\n      description: t(\n        \"Tips on getting started with Outline`s features and functionality\"\n      ),\n    },\n    {\n      visible: isCloudHosted,\n      event: \"emails.features\",\n      title: t(\"New features\"),\n      description: t(\"Receive an email when new features of note are added\"),\n    },\n  ];\n\n  React.useEffect(() => {\n    notificationSettings.fetchPage({});\n  }, [notificationSettings]);\n\n  const showSuccessMessage = debounce(() => {\n    showToast(t(\"Notifications saved\"), {\n      type: \"success\",\n    });\n  }, 500);\n\n  const handleChange = React.useCallback(\n    async (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const setting = notificationSettings.getByEvent(ev.target.name);\n\n      if (ev.target.checked) {\n        await notificationSettings.save({\n          event: ev.target.name,\n        });\n      } else if (setting) {\n        await notificationSettings.delete(setting);\n      }\n\n      showSuccessMessage();\n    },\n    [notificationSettings, showSuccessMessage]\n  );\n  const showSuccessNotice = window.location.search === \"?success\";\n\n  return (\n    <Scene title={t(\"Notifications\")} icon={<EmailIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Notifications\")}</Heading>\n\n      {showSuccessNotice && (\n        <Notice>\n          <Trans>\n            Unsubscription successful. Your notification settings were updated\n          </Trans>\n        </Notice>\n      )}\n      <Text type=\"secondary\">\n        <Trans>Manage when and where you receive email notifications.</Trans>\n      </Text>\n\n      {env.EMAIL_ENABLED ? (\n        <>\n          <SettingRow\n            label={t(\"Email address\")}\n            name=\"email\"\n            description={t(\n              \"Your email address should be updated in your SSO provider.\"\n            )}\n          >\n            <Input type=\"email\" value={user.email} readOnly />\n          </SettingRow>\n\n          <h2>{t(\"Notifications\")}</h2>\n\n          {options.map((option) => {\n            if (option.separator || !option.event) {\n              return <br />;\n            }\n\n            const setting = notificationSettings.getByEvent(option.event);\n\n            return (\n              <SettingRow\n                visible={option.visible}\n                label={option.title}\n                name={option.event}\n                description={option.description}\n              >\n                <Switch\n                  key={option.event}\n                  id={option.event}\n                  name={option.event}\n                  checked={!!setting}\n                  onChange={handleChange}\n                  disabled={\n                    (setting && setting.isSaving) ||\n                    notificationSettings.isFetching\n                  }\n                />\n              </SettingRow>\n            );\n          })}\n        </>\n      ) : (\n        <Notice>\n          <Trans>\n            The email integration is currently disabled. Please set the\n            associated environment variables and restart the server to enable\n            notifications.\n          </Trans>\n        </Notice>\n      )}\n    </Scene>\n  );\n}\n\nexport default observer(Notifications);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Modal from \"~/components/Modal\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  onRequestClose: () => void;\n};\n\nfunction UserDelete({ onRequestClose }: Props) {\n  const [isDeleting, setIsDeleting] = React.useState(false);\n  const { auth } = useStores();\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n\n  const handleSubmit = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      setIsDeleting(true);\n\n      try {\n        await auth.deleteUser();\n        auth.logout();\n      } catch (error) {\n        showToast(error.message, {\n          type: \"error\",\n        });\n      } finally {\n        setIsDeleting(false);\n      }\n    },\n    [auth, showToast]\n  );\n\n  return (\n    <Modal isOpen title={t(\"Delete Account\")} onRequestClose={onRequestClose}>\n      <Flex column>\n        <form onSubmit={handleSubmit}>\n          <Text type=\"secondary\">\n            <Trans>\n              Are you sure? Deleting your account will destroy identifying data\n              associated with your user and cannot be undone. You will be\n              immediately logged out of Outline and all your API tokens will be\n              revoked.\n            </Trans>\n          </Text>\n          <Text type=\"secondary\">\n            <Trans\n              defaults=\"<em>Note:</em> Signing back in will cause a new account to be automatically reprovisioned.\"\n              components={{\n                em: <strong />,\n              }}\n            />\n          </Text>\n          <Button type=\"submit\" danger>\n            {isDeleting ? `${t(\"Deleting\")}…` : t(\"Delete My Account\")}\n          </Button>\n        </form>\n      </Flex>\n    </Modal>\n  );\n}\n\nexport default observer(UserDelete);\n","import { observer } from \"mobx-react\";\nimport { ProfileIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { languageOptions } from \"@shared/i18n\";\nimport UserDelete from \"~/scenes/UserDelete\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport Input from \"~/components/Input\";\nimport InputSelect from \"~/components/InputSelect\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport ImageInput from \"./components/ImageInput\";\nimport SettingRow from \"./components/SettingRow\";\n\nconst Profile = () => {\n  const { auth } = useStores();\n  const user = useCurrentUser();\n  const form = React.useRef<HTMLFormElement>(null);\n  const [name, setName] = React.useState<string>(user.name || \"\");\n  const [avatarUrl, setAvatarUrl] = React.useState<string>(user.avatarUrl);\n  const [showDeleteModal, setShowDeleteModal] = React.useState(false);\n  const [language, setLanguage] = React.useState(user.language);\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n\n  const handleSubmit = async (ev: React.SyntheticEvent) => {\n    ev.preventDefault();\n\n    try {\n      await auth.updateUser({\n        name,\n        avatarUrl,\n        language,\n      });\n      showToast(t(\"Profile saved\"), {\n        type: \"success\",\n      });\n    } catch (err) {\n      showToast(err.message, {\n        type: \"error\",\n      });\n    }\n  };\n\n  const handleNameChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setName(ev.target.value);\n  };\n\n  const handleAvatarUpload = async (avatarUrl: string) => {\n    setAvatarUrl(avatarUrl);\n    await auth.updateUser({\n      avatarUrl,\n    });\n    showToast(t(\"Profile picture updated\"), {\n      type: \"success\",\n    });\n  };\n\n  const handleAvatarError = (error: string | null | undefined) => {\n    showToast(error || t(\"Unable to upload new profile picture\"), {\n      type: \"error\",\n    });\n  };\n\n  const handleLanguageChange = (value: string) => {\n    setLanguage(value);\n  };\n\n  const toggleDeleteAccount = () => {\n    setShowDeleteModal((prev) => !prev);\n  };\n\n  const isValid = form.current?.checkValidity();\n  const { isSaving } = auth;\n\n  return (\n    <Scene title={t(\"Profile\")} icon={<ProfileIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Profile\")}</Heading>\n\n      <form onSubmit={handleSubmit} ref={form}>\n        <SettingRow\n          label={t(\"Photo\")}\n          name=\"avatarUrl\"\n          description={t(\"Choose a photo or image to represent yourself.\")}\n        >\n          <ImageInput\n            onSuccess={handleAvatarUpload}\n            onError={handleAvatarError}\n            src={avatarUrl}\n          />\n        </SettingRow>\n        <SettingRow\n          label={t(\"Full name\")}\n          name=\"name\"\n          description={t(\n            \"This could be your real name, or a nickname — however you’d like people to refer to you.\"\n          )}\n        >\n          <Input\n            id=\"name\"\n            autoComplete=\"name\"\n            value={name}\n            onChange={handleNameChange}\n            required\n          />\n        </SettingRow>\n\n        <SettingRow\n          border={false}\n          label={t(\"Language\")}\n          name=\"language\"\n          description={\n            <>\n              <Trans>\n                Please note that translations are currently in early access.\n                Community contributions are accepted though our{\" \"}\n                <a\n                  href=\"https://translate.getoutline.com\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  translation portal\n                </a>\n                .\n              </Trans>\n            </>\n          }\n        >\n          <InputSelect\n            id=\"language\"\n            options={languageOptions}\n            value={language}\n            onChange={handleLanguageChange}\n            ariaLabel={t(\"Language\")}\n          />\n        </SettingRow>\n\n        <Button type=\"submit\" disabled={isSaving || !isValid}>\n          {isSaving ? `${t(\"Saving\")}…` : t(\"Save\")}\n        </Button>\n      </form>\n\n      <DangerZone>\n        <h2>{t(\"Delete Account\")}</h2>\n        <Text type=\"secondary\">\n          <Trans>\n            You may delete your account at any time, note that this is\n            unrecoverable\n          </Trans>\n        </Text>\n        <Button onClick={toggleDeleteAccount} neutral>\n          {t(\"Delete account\")}…\n        </Button>\n      </DangerZone>\n      {showDeleteModal && <UserDelete onRequestClose={toggleDeleteAccount} />}\n    </Scene>\n  );\n};\n\nconst DangerZone = styled.div`\n  margin-top: 60px;\n`;\n\nexport default observer(Profile);\n","import { debounce } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport { CloseIcon, PadlockIcon } from \"outline-icons\";\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Button from \"~/components/Button\";\nimport ConfirmationDialog from \"~/components/ConfirmationDialog\";\nimport Fade from \"~/components/Fade\";\nimport Flex from \"~/components/Flex\";\nimport Heading from \"~/components/Heading\";\nimport Input from \"~/components/Input\";\nimport InputSelect from \"~/components/InputSelect\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Scene from \"~/components/Scene\";\nimport Switch from \"~/components/Switch\";\nimport Text from \"~/components/Text\";\nimport Tooltip from \"~/components/Tooltip\";\nimport env from \"~/env\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\nimport SettingRow from \"./components/SettingRow\";\n\nfunction Security() {\n  const { auth, dialogs } = useStores();\n  const team = useCurrentTeam();\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n  const [data, setData] = useState({\n    sharing: team.sharing,\n    documentEmbeds: team.documentEmbeds,\n    guestSignin: team.guestSignin,\n    defaultUserRole: team.defaultUserRole,\n    memberCollectionCreate: team.memberCollectionCreate,\n    inviteRequired: team.inviteRequired,\n    allowedDomains: team.allowedDomains,\n  });\n\n  const authenticationMethods = team.signinMethods;\n\n  const showSuccessMessage = React.useMemo(\n    () =>\n      debounce(() => {\n        showToast(t(\"Settings saved\"), {\n          type: \"success\",\n        });\n      }, 250),\n    [showToast, t]\n  );\n\n  const [domainsChanged, setDomainsChanged] = useState(false);\n\n  const saveData = React.useCallback(\n    async (newData) => {\n      try {\n        setData(newData);\n        await auth.updateTeam(newData);\n        showSuccessMessage();\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      } finally {\n        setDomainsChanged(false);\n      }\n    },\n    [auth, showSuccessMessage, showToast]\n  );\n\n  const handleChange = React.useCallback(\n    async (ev: React.ChangeEvent<HTMLInputElement>) => {\n      await saveData({ ...data, [ev.target.id]: ev.target.checked });\n    },\n    [data, saveData]\n  );\n\n  const handleDefaultRoleChange = React.useCallback(\n    async (newDefaultRole: string) => {\n      await saveData({ ...data, defaultUserRole: newDefaultRole });\n    },\n    [data, saveData]\n  );\n\n  const handleAllowSignupsChange = React.useCallback(\n    async (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const inviteRequired = !ev.target.checked;\n      const newData = { ...data, inviteRequired };\n\n      if (inviteRequired) {\n        dialogs.openModal({\n          isCentered: true,\n          title: t(\"Are you sure you want to disable authorized signups?\"),\n          content: (\n            <ConfirmationDialog\n              onSubmit={async () => {\n                await saveData(newData);\n              }}\n              submitText={t(\"I’m sure — Disable\")}\n              savingText={`${t(\"Disabling\")}…`}\n              danger\n            >\n              <Trans\n                defaults=\"New account creation using <em>{{ authenticationMethods }}</em> will be disabled. New users will need to be invited.\"\n                values={{\n                  authenticationMethods,\n                }}\n                components={{\n                  em: <strong />,\n                }}\n              />\n            </ConfirmationDialog>\n          ),\n        });\n        return;\n      }\n\n      await saveData(newData);\n    },\n    [data, saveData, t, dialogs, authenticationMethods]\n  );\n\n  const handleRemoveDomain = async (index: number) => {\n    const newData = {\n      ...data,\n    };\n    newData.allowedDomains && newData.allowedDomains.splice(index, 1);\n\n    setData(newData);\n    setDomainsChanged(true);\n  };\n\n  const handleAddDomain = () => {\n    const newData = {\n      ...data,\n      allowedDomains: [...(data.allowedDomains || []), \"\"],\n    };\n\n    setData(newData);\n  };\n\n  const createOnDomainChangedHandler = (index: number) => (\n    ev: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const newData = { ...data };\n\n    newData.allowedDomains![index] = ev.currentTarget.value;\n    setData(newData);\n    setDomainsChanged(true);\n  };\n\n  return (\n    <Scene title={t(\"Security\")} icon={<PadlockIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Security\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans>\n          Settings that impact the access, security, and content of your\n          knowledge base.\n        </Trans>\n      </Text>\n\n      <SettingRow\n        label={t(\"Allow email authentication\")}\n        name=\"guestSignin\"\n        description={\n          env.EMAIL_ENABLED\n            ? t(\"When enabled, users can sign-in using their email address\")\n            : t(\"The server must have SMTP configured to enable this setting\")\n        }\n      >\n        <Switch\n          id=\"guestSignin\"\n          checked={data.guestSignin}\n          onChange={handleChange}\n          disabled={!env.EMAIL_ENABLED}\n        />\n      </SettingRow>\n      <SettingRow\n        label={t(\"Public document sharing\")}\n        name=\"sharing\"\n        description={t(\n          \"When enabled, documents can be shared publicly on the internet by any team member\"\n        )}\n      >\n        <Switch id=\"sharing\" checked={data.sharing} onChange={handleChange} />\n      </SettingRow>\n      <SettingRow\n        label={t(\"Rich service embeds\")}\n        name=\"documentEmbeds\"\n        description={t(\n          \"Links to supported services are shown as rich embeds within your documents\"\n        )}\n      >\n        <Switch\n          id=\"documentEmbeds\"\n          checked={data.documentEmbeds}\n          onChange={handleChange}\n        />\n      </SettingRow>\n      <SettingRow\n        label={t(\"Collection creation\")}\n        name=\"memberCollectionCreate\"\n        description={t(\n          \"Allow members to create new collections within the knowledge base\"\n        )}\n      >\n        <Switch\n          id=\"memberCollectionCreate\"\n          checked={data.memberCollectionCreate}\n          onChange={handleChange}\n        />\n      </SettingRow>\n      {isCloudHosted && (\n        <SettingRow\n          label={t(\"Allow authorized signups\")}\n          name=\"allowSignups\"\n          description={\n            <Trans\n              defaults=\"Allow authorized <em>{{ authenticationMethods }}</em> users to create new accounts without first receiving an invite\"\n              values={{\n                authenticationMethods,\n              }}\n              components={{\n                em: <strong />,\n              }}\n            />\n          }\n        >\n          <Switch\n            id=\"allowSignups\"\n            checked={!data.inviteRequired}\n            onChange={handleAllowSignupsChange}\n          />\n        </SettingRow>\n      )}\n\n      <SettingRow\n        label={t(\"Default role\")}\n        name=\"defaultUserRole\"\n        description={t(\n          \"The default user role for new accounts. Changing this setting does not affect existing user accounts.\"\n        )}\n      >\n        <InputSelect\n          id=\"defaultUserRole\"\n          value={data.defaultUserRole}\n          options={[\n            {\n              label: t(\"Member\"),\n              value: \"member\",\n            },\n            {\n              label: t(\"Viewer\"),\n              value: \"viewer\",\n            },\n          ]}\n          onChange={handleDefaultRoleChange}\n          ariaLabel={t(\"Default role\")}\n          short\n        />\n      </SettingRow>\n\n      <SettingRow\n        label={t(\"Allowed Domains\")}\n        name=\"allowedDomains\"\n        description={t(\n          \"The domains which should be allowed to create accounts. This applies to both SSO and Email logins. Changing this setting does not affect existing user accounts.\"\n        )}\n      >\n        {data.allowedDomains &&\n          data.allowedDomains.map((domain, index) => (\n            <Flex key={index} gap={4}>\n              <Input\n                key={index}\n                id={`allowedDomains${index}`}\n                value={domain}\n                autoFocus={!domain}\n                placeholder=\"example.com\"\n                required\n                flex\n                onChange={createOnDomainChangedHandler(index)}\n              />\n              <Remove>\n                <Tooltip tooltip={t(\"Remove domain\")} placement=\"top\">\n                  <NudeButton onClick={() => handleRemoveDomain(index)}>\n                    <CloseIcon />\n                  </NudeButton>\n                </Tooltip>\n              </Remove>\n            </Flex>\n          ))}\n\n        <Flex justify=\"space-between\" gap={4} style={{ flexWrap: \"wrap\" }}>\n          {!data.allowedDomains?.length ||\n          data.allowedDomains[data.allowedDomains.length - 1] !== \"\" ? (\n            <Fade>\n              <Button type=\"button\" onClick={handleAddDomain} neutral>\n                {data.allowedDomains?.length ? (\n                  <Trans>Add another</Trans>\n                ) : (\n                  <Trans>Add a domain</Trans>\n                )}\n              </Button>\n            </Fade>\n          ) : (\n            <span />\n          )}\n\n          {domainsChanged && (\n            <Fade>\n              <Button\n                type=\"button\"\n                onClick={handleChange}\n                disabled={auth.isSaving}\n              >\n                <Trans>Save changes</Trans>\n              </Button>\n            </Fade>\n          )}\n        </Flex>\n      </SettingRow>\n    </Scene>\n  );\n}\n\nconst Remove = styled(\"div\")`\n  margin-top: 6px;\n`;\n\nexport default observer(Security);\n","import { observer } from \"mobx-react\";\nimport { ArrowIcon, CopyIcon, TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMenuState } from \"reakit/Menu\";\nimport Share from \"~/models/Share\";\nimport ContextMenu from \"~/components/ContextMenu\";\nimport MenuItem from \"~/components/ContextMenu/MenuItem\";\nimport OverflowMenuButton from \"~/components/ContextMenu/OverflowMenuButton\";\nimport CopyToClipboard from \"~/components/CopyToClipboard\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  share: Share;\n};\n\nfunction ShareMenu({ share }: Props) {\n  const menu = useMenuState({\n    modal: true,\n  });\n  const { shares } = useStores();\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n  const history = useHistory();\n  const can = usePolicy(share.id);\n\n  const handleGoToDocument = React.useCallback(\n    (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      history.push(share.documentUrl);\n    },\n    [history, share]\n  );\n\n  const handleRevoke = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n\n      try {\n        await shares.revoke(share);\n        showToast(t(\"Share link revoked\"), {\n          type: \"info\",\n        });\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      }\n    },\n    [t, shares, share, showToast]\n  );\n\n  const handleCopy = React.useCallback(() => {\n    showToast(t(\"Share link copied\"), {\n      type: \"info\",\n    });\n  }, [t, showToast]);\n\n  return (\n    <>\n      <OverflowMenuButton aria-label={t(\"Show menu\")} {...menu} />\n      <ContextMenu {...menu} aria-label={t(\"Share options\")}>\n        <CopyToClipboard text={share.url} onCopy={handleCopy}>\n          <MenuItem {...menu} icon={<CopyIcon />}>\n            {t(\"Copy link\")}\n          </MenuItem>\n        </CopyToClipboard>\n        <MenuItem {...menu} onClick={handleGoToDocument} icon={<ArrowIcon />}>\n          {t(\"Go to document\")}\n        </MenuItem>\n        {can.revoke && (\n          <>\n            <hr />\n            <MenuItem\n              {...menu}\n              onClick={handleRevoke}\n              icon={<TrashIcon />}\n              dangerous\n            >\n              {t(\"Revoke link\")}\n            </MenuItem>\n          </>\n        )}\n      </ContextMenu>\n    </>\n  );\n}\n\nexport default observer(ShareMenu);\n","import { observer } from \"mobx-react\";\nimport { CheckmarkIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport Share from \"~/models/Share\";\nimport Flex from \"~/components/Flex\";\nimport TableFromParams from \"~/components/TableFromParams\";\nimport Time from \"~/components/Time\";\nimport ShareMenu from \"~/menus/ShareMenu\";\n\ntype Props = Omit<React.ComponentProps<typeof TableFromParams>, \"columns\"> & {\n  data: Share[];\n  canManage: boolean;\n};\n\nfunction SharesTable({ canManage, ...rest }: Props) {\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const columns = React.useMemo(\n    () =>\n      [\n        {\n          id: \"documentTitle\",\n          Header: t(\"Document\"),\n          accessor: \"documentTitle\",\n          disableSortBy: true,\n          Cell: observer(({ value }: { value: string }) => <>{value}</>),\n        },\n        {\n          id: \"createdAt\",\n          Header: t(\"Date shared\"),\n          accessor: \"createdAt\",\n          Cell: observer(\n            ({ value, row }: { value: string; row: { original: Share } }) =>\n              value ? (\n                <>\n                  <Time dateTime={value} addSuffix />{\" \"}\n                  {t(\"by {{ name }}\", {\n                    name: row.original.createdBy.name,\n                  })}\n                </>\n              ) : null\n          ),\n        },\n        {\n          id: \"lastAccessedAt\",\n          Header: t(\"Last accessed\"),\n          accessor: \"lastAccessedAt\",\n          Cell: observer(({ value }: { value: string }) =>\n            value ? <Time dateTime={value} addSuffix /> : null\n          ),\n        },\n        {\n          id: \"includeChildDocuments\",\n          Header: t(\"Shared nested\"),\n          accessor: \"includeChildDocuments\",\n          Cell: observer(({ value }: { value: string }) =>\n            value ? (\n              <Flex align=\"center\">\n                <CheckmarkIcon color={theme.primary} />\n              </Flex>\n            ) : null\n          ),\n        },\n        canManage\n          ? {\n              Header: \" \",\n              accessor: \"id\",\n              className: \"actions\",\n              disableSortBy: true,\n              Cell: observer(\n                ({ row }: { value: string; row: { original: Share } }) => (\n                  <Flex align=\"center\">\n                    <ShareMenu share={row.original} />\n                  </Flex>\n                )\n              ),\n            }\n          : undefined,\n      ].filter((i) => i),\n    [t, theme.primary, canManage]\n  );\n\n  return <TableFromParams columns={columns} {...rest} />;\n}\n\nexport default SharesTable;\n","import { sortBy } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport { LinkIcon, WarningIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { PAGINATION_SYMBOL } from \"~/stores/BaseStore\";\nimport Share from \"~/models/Share\";\nimport Heading from \"~/components/Heading\";\nimport Notice from \"~/components/Notice\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport SharesTable from \"./components/SharesTable\";\n\nfunction Shares() {\n  const team = useCurrentTeam();\n  const { t } = useTranslation();\n  const { shares, auth } = useStores();\n  const canShareDocuments = auth.team && auth.team.sharing;\n  const can = usePolicy(team.id);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [data, setData] = React.useState<Share[]>([]);\n  const [totalPages, setTotalPages] = React.useState(0);\n  const [shareIds, setShareIds] = React.useState<string[]>([]);\n  const params = useQuery();\n  const query = params.get(\"query\") || \"\";\n  const sort = params.get(\"sort\") || \"createdAt\";\n  const direction = (params.get(\"direction\") || \"desc\").toUpperCase() as\n    | \"ASC\"\n    | \"DESC\";\n  const page = parseInt(params.get(\"page\") || \"0\", 10);\n  const limit = 25;\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await shares.fetchPage({\n          offset: page * limit,\n          limit,\n          sort,\n          direction,\n        });\n        setTotalPages(Math.ceil(response[PAGINATION_SYMBOL].total / limit));\n        setShareIds(response.map((u: Share) => u.id));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [query, sort, page, direction, shares]);\n\n  React.useEffect(() => {\n    // sort the resulting data by the original order from the server\n    setData(\n      sortBy(\n        shares.orderedData.filter((item) => shareIds.includes(item.id)),\n        (item) => shareIds.indexOf(item.id)\n      )\n    );\n  }, [shares.orderedData, shareIds]);\n\n  return (\n    <Scene title={t(\"Share Links\")} icon={<LinkIcon color=\"currentColor\" />}>\n      <Heading>{t(\"Share Links\")}</Heading>\n\n      {can.manage && !canShareDocuments && (\n        <>\n          <Notice icon={<WarningIcon color=\"currentColor\" />}>\n            {t(\"Sharing is currently disabled.\")}{\" \"}\n            <Trans\n              defaults=\"You can globally enable and disable public document sharing in the <em>security settings</em>.\"\n              components={{\n                em: <Link to=\"/settings/security\" />,\n              }}\n            />\n          </Notice>\n          <br />\n        </>\n      )}\n\n      <Text type=\"secondary\">\n        <Trans>\n          Documents that have been shared are listed below. Anyone that has the\n          public link can access a read-only version of the document until the\n          link has been revoked.\n        </Trans>\n      </Text>\n\n      <SharesTable\n        data={data}\n        canManage={can.manage}\n        isLoading={isLoading}\n        page={page}\n        pageSize={limit}\n        totalPages={totalPages}\n        defaultSortDirection=\"ASC\"\n      />\n    </Scene>\n  );\n}\n\nexport default observer(Shares);\n","import List from \"./List\";\n\nexport default List;\n","import styled from \"styled-components\";\n\nconst List = styled.ol`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default List;\n","import * as React from \"react\";\n\ntype Props = {\n  color?: string;\n};\n\nexport default function SlackIcon({ color = \"#4E5C6E\" }: Props) {\n  return (\n    <svg\n      fill={color}\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      version=\"1.1\"\n    >\n      <path d=\"M7.36156352,14.1107492 C7.36156352,15.0358306 6.60586319,15.7915309 5.68078176,15.7915309 C4.75570033,15.7915309 4,15.0358306 4,14.1107492 C4,13.1856678 4.75570033,12.4299674 5.68078176,12.4299674 L7.36156352,12.4299674 L7.36156352,14.1107492 Z M8.20846906,14.1107492 C8.20846906,13.1856678 8.96416938,12.4299674 9.88925081,12.4299674 C10.8143322,12.4299674 11.5700326,13.1856678 11.5700326,14.1107492 L11.5700326,18.3192182 C11.5700326,19.2442997 10.8143322,20 9.88925081,20 C8.96416938,20 8.20846906,19.2442997 8.20846906,18.3192182 C8.20846906,18.3192182 8.20846906,14.1107492 8.20846906,14.1107492 Z M9.88925081,7.36156352 C8.96416938,7.36156352 8.20846906,6.60586319 8.20846906,5.68078176 C8.20846906,4.75570033 8.96416938,4 9.88925081,4 C10.8143322,4 11.5700326,4.75570033 11.5700326,5.68078176 L11.5700326,7.36156352 L9.88925081,7.36156352 Z M9.88925081,8.20846906 C10.8143322,8.20846906 11.5700326,8.96416938 11.5700326,9.88925081 C11.5700326,10.8143322 10.8143322,11.5700326 9.88925081,11.5700326 L5.68078176,11.5700326 C4.75570033,11.5700326 4,10.8143322 4,9.88925081 C4,8.96416938 4.75570033,8.20846906 5.68078176,8.20846906 C5.68078176,8.20846906 9.88925081,8.20846906 9.88925081,8.20846906 Z M16.6384365,9.88925081 C16.6384365,8.96416938 17.3941368,8.20846906 18.3192182,8.20846906 C19.2442997,8.20846906 20,8.96416938 20,9.88925081 C20,10.8143322 19.2442997,11.5700326 18.3192182,11.5700326 L16.6384365,11.5700326 L16.6384365,9.88925081 Z M15.7915309,9.88925081 C15.7915309,10.8143322 15.0358306,11.5700326 14.1107492,11.5700326 C13.1856678,11.5700326 12.4299674,10.8143322 12.4299674,9.88925081 L12.4299674,5.68078176 C12.4299674,4.75570033 13.1856678,4 14.1107492,4 C15.0358306,4 15.7915309,4.75570033 15.7915309,5.68078176 L15.7915309,9.88925081 Z M14.1107492,16.6384365 C15.0358306,16.6384365 15.7915309,17.3941368 15.7915309,18.3192182 C15.7915309,19.2442997 15.0358306,20 14.1107492,20 C13.1856678,20 12.4299674,19.2442997 12.4299674,18.3192182 L12.4299674,16.6384365 L14.1107492,16.6384365 Z M14.1107492,15.7915309 C13.1856678,15.7915309 12.4299674,15.0358306 12.4299674,14.1107492 C12.4299674,13.1856678 13.1856678,12.4299674 14.1107492,12.4299674 L18.3192182,12.4299674 C19.2442997,12.4299674 20,13.1856678 20,14.1107492 C20,15.0358306 19.2442997,15.7915309 18.3192182,15.7915309 L14.1107492,15.7915309 Z\" />\n    </svg>\n  );\n}\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { slackAuth } from \"@shared/utils/urlHelpers\";\nimport Button from \"~/components/Button\";\nimport env from \"~/env\";\n\ntype Props = {\n  scopes?: string[];\n  redirectUri: string;\n  icon?: React.ReactNode;\n  state?: string;\n  label?: string;\n};\n\nfunction SlackButton({ state = \"\", scopes, redirectUri, label, icon }: Props) {\n  const { t } = useTranslation();\n\n  const handleClick = () => {\n    if (!env.SLACK_CLIENT_ID) {\n      return;\n    }\n\n    window.location.href = slackAuth(\n      state,\n      scopes,\n      env.SLACK_CLIENT_ID,\n      redirectUri\n    );\n  };\n\n  return (\n    <Button onClick={handleClick} icon={icon} neutral>\n      {label || t(\"Add to Slack\")}\n    </Button>\n  );\n}\n\nexport default SlackButton;\n","import { uniq } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { usePopoverState, PopoverDisclosure } from \"reakit/Popover\";\nimport styled from \"styled-components\";\nimport Collection from \"~/models/Collection\";\nimport Integration from \"~/models/Integration\";\nimport Button from \"~/components/Button\";\nimport ButtonLink from \"~/components/ButtonLink\";\nimport CollectionIcon from \"~/components/CollectionIcon\";\nimport Flex from \"~/components/Flex\";\nimport ListItem from \"~/components/List/Item\";\nimport Popover from \"~/components/Popover\";\nimport Switch from \"~/components/Switch\";\nimport Text from \"~/components/Text\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  integration: Integration;\n  collection: Collection;\n};\n\nfunction SlackListItem({ integration, collection }: Props) {\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n\n  const handleChange = async (ev: React.ChangeEvent<HTMLInputElement>) => {\n    if (ev.target.checked) {\n      integration.events = uniq([...integration.events, ev.target.name]);\n    } else {\n      integration.events = integration.events.filter(\n        (n) => n !== ev.target.name\n      );\n    }\n\n    await integration.save();\n\n    showToast(t(\"Settings saved\"), {\n      type: \"success\",\n    });\n  };\n\n  const mapping = {\n    \"documents.publish\": t(\"document published\"),\n    \"documents.update\": t(\"document updated\"),\n  };\n\n  const popover = usePopoverState({\n    gutter: 0,\n    placement: \"bottom-start\",\n  });\n\n  return (\n    <ListItem\n      key={integration.id}\n      title={\n        <Flex align=\"center\" gap={6}>\n          <CollectionIcon collection={collection} /> {collection.name}\n        </Flex>\n      }\n      subtitle={\n        <>\n          <Trans\n            defaults={`Posting to the <em>{{ channelName }}</em> channel on`}\n            values={{\n              channelName: integration.settings.channel,\n              events: integration.events.map((ev) => mapping[ev]).join(\", \"),\n            }}\n            components={{\n              em: <strong />,\n            }}\n          />{\" \"}\n          <PopoverDisclosure {...popover}>\n            {(props) => (\n              <ButtonLink {...props}>\n                {integration.events.map((ev) => mapping[ev]).join(\", \")}\n              </ButtonLink>\n            )}\n          </PopoverDisclosure>\n          <Popover {...popover} aria-label={t(\"Settings\")}>\n            <Events>\n              <h3>{t(\"Notifications\")}</h3>\n              <Text type=\"secondary\">\n                {t(\"These events should be posted to Slack\")}\n              </Text>\n              <Switch\n                label={t(\"Document published\")}\n                name=\"documents.publish\"\n                checked={integration.events.includes(\"documents.publish\")}\n                onChange={handleChange}\n              />\n              <Switch\n                label={t(\"Document updated\")}\n                name=\"documents.update\"\n                checked={integration.events.includes(\"documents.update\")}\n                onChange={handleChange}\n              />\n            </Events>\n          </Popover>\n        </>\n      }\n      actions={\n        <Button onClick={integration.delete} neutral>\n          {t(\"Disconnect\")}\n        </Button>\n      }\n    />\n  );\n}\n\nconst Events = styled.div`\n  color: ${(props) => props.theme.text};\n  margin-top: -12px;\n`;\n\nexport default observer(SlackListItem);\n","import { find } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Collection from \"~/models/Collection\";\nimport Integration from \"~/models/Integration\";\nimport Button from \"~/components/Button\";\nimport CollectionIcon from \"~/components/CollectionIcon\";\nimport Heading from \"~/components/Heading\";\nimport List from \"~/components/List\";\nimport ListItem from \"~/components/List/Item\";\nimport Notice from \"~/components/Notice\";\nimport Scene from \"~/components/Scene\";\nimport SlackIcon from \"~/components/SlackIcon\";\nimport Text from \"~/components/Text\";\nimport env from \"~/env\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport useQuery from \"~/hooks/useQuery\";\nimport useStores from \"~/hooks/useStores\";\nimport SlackButton from \"./components/SlackButton\";\nimport SlackListItem from \"./components/SlackListItem\";\n\nfunction Slack() {\n  const team = useCurrentTeam();\n  const { collections, integrations } = useStores();\n  const { t } = useTranslation();\n  const query = useQuery();\n  const error = query.get(\"error\");\n\n  React.useEffect(() => {\n    collections.fetchPage({\n      limit: 100,\n    });\n    integrations.fetchPage({\n      limit: 100,\n    });\n  }, [collections, integrations]);\n\n  const commandIntegration = find(\n    integrations.slackIntegrations,\n    (i) => i.type === \"command\"\n  );\n\n  const groupedCollections = collections.orderedData\n    .map<[Collection, Integration | undefined]>((collection) => {\n      const integration = find(integrations.slackIntegrations, {\n        collectionId: collection.id,\n      });\n\n      return [collection, integration];\n    })\n    .sort((a) => (a[1] ? -1 : 1));\n\n  return (\n    <Scene title=\"Slack\" icon={<SlackIcon color=\"currentColor\" />}>\n      <Heading>Slack</Heading>\n\n      {error === \"access_denied\" && (\n        <Notice>\n          <Trans>\n            Whoops, you need to accept the permissions in Slack to connect\n            Outline to your team. Try again?\n          </Trans>\n        </Notice>\n      )}\n      {error === \"unauthenticated\" && (\n        <Notice>\n          <Trans>\n            Something went wrong while authenticating your request. Please try\n            logging in again?\n          </Trans>\n        </Notice>\n      )}\n      <Text type=\"secondary\">\n        <Trans\n          defaults=\"Get rich previews of Outline links shared in Slack and use the <em>{{ command }}</em> slash command to search for documents without leaving your chat.\"\n          values={{\n            command: \"/outline\",\n          }}\n          components={{\n            em: <Code />,\n          }}\n        />\n      </Text>\n      {env.SLACK_CLIENT_ID ? (\n        <>\n          <p>\n            {commandIntegration ? (\n              <Button onClick={() => commandIntegration.delete()}>\n                {t(\"Disconnect\")}\n              </Button>\n            ) : (\n              <SlackButton\n                scopes={[\n                  \"commands\",\n                  \"links:read\",\n                  \"links:write\",\n                  // TODO: Wait forever for Slack to approve these scopes.\n                  //\"users:read\",\n                  //\"users:read.email\",\n                ]}\n                redirectUri={`${env.URL}/auth/slack.commands`}\n                state={team.id}\n                icon={<SlackIcon color=\"currentColor\" />}\n              />\n            )}\n          </p>\n          <p>&nbsp;</p>\n\n          <h2>{t(\"Collections\")}</h2>\n          <Text type=\"secondary\">\n            <Trans>\n              Connect Outline collections to Slack channels and messages will be\n              automatically posted to Slack when documents are published or\n              updated.\n            </Trans>\n          </Text>\n\n          <List>\n            {groupedCollections.map(([collection, integration]) => {\n              if (integration) {\n                return (\n                  <SlackListItem\n                    key={integration.id}\n                    collection={collection}\n                    integration={integration}\n                  />\n                );\n              }\n\n              return (\n                <ListItem\n                  key={collection.id}\n                  title={collection.name}\n                  image={<CollectionIcon collection={collection} />}\n                  actions={\n                    <SlackButton\n                      scopes={[\"incoming-webhook\"]}\n                      redirectUri={`${env.URL}/auth/slack.post`}\n                      state={collection.id}\n                      label={t(\"Connect\")}\n                    />\n                  }\n                />\n              );\n            })}\n          </List>\n        </>\n      ) : (\n        <Notice>\n          <Trans>\n            The Slack integration is currently disabled. Please set the\n            associated environment variables and restart the server to enable\n            the integration.\n          </Trans>\n        </Notice>\n      )}\n    </Scene>\n  );\n}\n\nconst Code = styled.code`\n  padding: 4px 6px;\n  margin: 0 2px;\n  background: ${(props) => props.theme.codeBackground};\n  border-radius: 4px;\n`;\n\nexport default observer(Slack);\n","import * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Input from \"~/components/Input\";\nimport Text from \"~/components/Text\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  onSubmit: () => void;\n};\n\nfunction APITokenNew({ onSubmit }: Props) {\n  const [name, setName] = React.useState(\"\");\n  const [isSaving, setIsSaving] = React.useState(false);\n  const { apiKeys } = useStores();\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n\n  const handleSubmit = React.useCallback(\n    async (ev: React.SyntheticEvent) => {\n      ev.preventDefault();\n      setIsSaving(true);\n\n      try {\n        await apiKeys.create({\n          name,\n        });\n        showToast(\n          t(\"API token created\", {\n            type: \"success\",\n          })\n        );\n        onSubmit();\n      } catch (err) {\n        showToast(err.message, {\n          type: \"error\",\n        });\n      } finally {\n        setIsSaving(false);\n      }\n    },\n    [t, showToast, name, onSubmit, apiKeys]\n  );\n\n  const handleNameChange = React.useCallback((event) => {\n    setName(event.target.value);\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Text type=\"secondary\">\n        <Trans>\n          Name your token something that will help you to remember it's use in\n          the future, for example \"local development\", \"production\", or\n          \"continuous integration\".\n        </Trans>\n      </Text>\n      <Flex>\n        <Input\n          type=\"text\"\n          label=\"Name\"\n          onChange={handleNameChange}\n          value={name}\n          required\n          autoFocus\n          flex\n        />\n      </Flex>\n      <Button type=\"submit\" disabled={isSaving || !name}>\n        {isSaving ? \"Creating…\" : \"Create\"}\n      </Button>\n    </form>\n  );\n}\n\nexport default APITokenNew;\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ApiKey from \"~/models/ApiKey\";\nimport ConfirmationDialog from \"~/components/ConfirmationDialog\";\n\ntype Props = {\n  token: ApiKey;\n  onSubmit: () => void;\n};\n\nexport default function TokenRevokeDialog({ token, onSubmit }: Props) {\n  const { t } = useTranslation();\n\n  const handleSubmit = async () => {\n    await token.delete();\n    onSubmit();\n  };\n\n  return (\n    <ConfirmationDialog\n      onSubmit={handleSubmit}\n      submitText={t(\"Revoke\")}\n      savingText={`${t(\"Revoking\")}…`}\n      danger\n    >\n      {t(\"Are you sure you want to revoke the {{ tokenName }} token?\", {\n        tokenName: token.name,\n      })}\n    </ConfirmationDialog>\n  );\n}\n","import { CopyIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ApiKey from \"~/models/ApiKey\";\nimport Button from \"~/components/Button\";\nimport CopyToClipboard from \"~/components/CopyToClipboard\";\nimport ListItem from \"~/components/List/Item\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport TokenRevokeDialog from \"./TokenRevokeDialog\";\n\ntype Props = {\n  token: ApiKey;\n};\n\nconst TokenListItem = ({ token }: Props) => {\n  const { t } = useTranslation();\n  const { showToast } = useToasts();\n  const { dialogs } = useStores();\n  const [linkCopied, setLinkCopied] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (linkCopied) {\n      setTimeout(() => {\n        setLinkCopied(false);\n      }, 3000);\n    }\n  }, [linkCopied]);\n\n  const handleCopy = React.useCallback(() => {\n    setLinkCopied(true);\n    showToast(t(\"API token copied to clipboard\"), {\n      type: \"success\",\n    });\n  }, [showToast, t]);\n\n  const showRevokeConfirmation = React.useCallback(() => {\n    dialogs.openModal({\n      title: t(\"Revoke token\"),\n      isCentered: true,\n      content: (\n        <TokenRevokeDialog onSubmit={dialogs.closeAllModals} token={token} />\n      ),\n    });\n  }, [t, dialogs, token]);\n\n  return (\n    <ListItem\n      key={token.id}\n      title={token.name}\n      subtitle={<code>{token.secret}</code>}\n      actions={\n        <>\n          <CopyToClipboard text={token.secret} onCopy={handleCopy}>\n            <Button type=\"button\" icon={<CopyIcon />} neutral borderOnHover>\n              {linkCopied ? t(\"Copied\") : t(\"Copy\")}\n            </Button>\n          </CopyToClipboard>\n          <Button onClick={showRevokeConfirmation} neutral>\n            Revoke\n          </Button>\n        </>\n      }\n    />\n  );\n};\n\nexport default TokenListItem;\n","import { observer } from \"mobx-react\";\nimport { CodeIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport ApiKey from \"~/models/ApiKey\";\nimport APITokenNew from \"~/scenes/APITokenNew\";\nimport { Action } from \"~/components/Actions\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport Modal from \"~/components/Modal\";\nimport PaginatedList from \"~/components/PaginatedList\";\nimport Scene from \"~/components/Scene\";\nimport Subheading from \"~/components/Subheading\";\nimport Text from \"~/components/Text\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport useCurrentTeam from \"~/hooks/useCurrentTeam\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport TokenListItem from \"./components/TokenListItem\";\n\nfunction Tokens() {\n  const team = useCurrentTeam();\n  const { t } = useTranslation();\n  const { apiKeys } = useStores();\n  const [newModalOpen, handleNewModalOpen, handleNewModalClose] = useBoolean();\n  const can = usePolicy(team.id);\n\n  return (\n    <Scene\n      title={t(\"API Tokens\")}\n      icon={<CodeIcon color=\"currentColor\" />}\n      actions={\n        <>\n          {can.createApiKey && (\n            <Action>\n              <Button\n                type=\"submit\"\n                value={`${t(\"New token\")}…`}\n                onClick={handleNewModalOpen}\n              />\n            </Action>\n          )}\n        </>\n      }\n    >\n      <Heading>{t(\"API Tokens\")}</Heading>\n      <Text type=\"secondary\">\n        <Trans\n          defaults=\"You can create an unlimited amount of personal tokens to authenticate\n          with the API. Tokens have the same permissions as your user account.\n          For more details see the <em>developer documentation</em>.\"\n          components={{\n            em: (\n              <a href=\"https://www.getoutline.com/developers\" target=\"_blank\" />\n            ),\n          }}\n        />\n      </Text>\n      <PaginatedList\n        fetch={apiKeys.fetchPage}\n        items={apiKeys.orderedData}\n        heading={<Subheading sticky>{t(\"Tokens\")}</Subheading>}\n        renderItem={(token: ApiKey) => (\n          <TokenListItem key={token.id} token={token} />\n        )}\n      />\n      <Modal\n        title={t(\"Create a token\")}\n        onRequestClose={handleNewModalClose}\n        isOpen={newModalOpen}\n      >\n        <APITokenNew onSubmit={handleNewModalClose} />\n      </Modal>\n    </Scene>\n  );\n}\n\nexport default observer(Tokens);\n","import * as React from \"react\";\n\ntype Props = {\n  color?: string;\n};\n\nexport default function ZapierIcon({ color = \"#4E5C6E\" }: Props) {\n  return (\n    <svg\n      fill={color}\n      width=\"24px\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      version=\"1.1\"\n    >\n      <path d=\"M14,12.00348 C13.9996,12.59796 13.89092,13.16708 13.6928,13.69244 C13.16752,13.89072 12.59816,13.99964 12.00344,14.00004 L11.99656,14.00004 C11.40216,13.99964 10.83296,13.89104 10.30768,13.69284 C10.10952,13.16764 10.0004,12.59828 10,12.00364 L10,11.99672 C10.0004,11.40224 10.10928,10.83312 10.30712,10.3078 C10.83264,10.10964 11.40192,10.0006 11.99656,10.0002 L12.00344,10.0002 C12.59816,10.0006 13.16752,10.10964 13.69276,10.3078 C13.89076,10.83316 13.99956,11.40228 13.99996,11.99676 L13.99996,12.00368 L13.99996,12.0036 L14,12.00348 Z M19.8888,10.66668 L15.21896,10.66668 L18.52096,7.36468 C18.2617173,7.00059444 17.9725547,6.65876921 17.65648,6.34276 L17.65632,6.34244 C17.340564,6.02673022 16.9990638,5.73786527 16.63536,5.47884 L13.33336,8.78084 L13.33336,4.11128 C12.894135,4.03747693 12.4495423,4.00025584 12.00416,4 L11.99568,4 C11.5503533,4.00023789 11.1058145,4.03743219 10.66664,4.1112 L10.66664,8.78108 L7.36464,5.47908 C7.00075543,5.7381962 6.65910565,6.02719699 6.34324,6.34308 L6.34204,6.34416 C6.02660762,6.65978768 5.73799769,7.00112635 5.4792,7.36464 L8.7812,10.66664 L4.1112,10.66664 C4.1112,10.66664 4.00016,11.54384 4,11.99704 L4,12.00284 C4.00016664,12.4487002 4.03736113,12.8937765 4.1112,13.33348 L8.78104,13.33348 L5.47904,16.63548 C5.99830995,17.3645251 6.63559493,18.0018101 7.36464,18.52108 L10.66664,15.21916 L10.66664,19.8888 C11.1053956,19.962476 11.5495017,19.9996699 11.9944,20 L12.00584,20 C12.4506842,19.999644 12.8947349,19.9624502 13.33344,19.8888 L13.33344,15.21892 L16.63544,18.52092 C16.9992044,18.2618792 17.3407586,17.972987 17.65656,17.65724 L17.65736,17.65664 C17.9730579,17.3408301 18.2619218,16.9992911 18.52096,16.63556 L15.21896,13.33348 L19.8888,13.33348 C19.9624671,12.8947771 19.999661,12.4507249 20,12.00588 L20,11.9944 C19.999644,11.5495558 19.9624502,11.1055051 19.8888,10.6668 L19.8888,10.66668 Z\" />\n    </svg>\n  );\n}\n","import * as React from \"react\";\nimport { useTranslation, Trans } from \"react-i18next\";\nimport Button from \"~/components/Button\";\nimport Heading from \"~/components/Heading\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport ZapierIcon from \"~/components/ZapierIcon\";\n\nfunction Zapier() {\n  const { t } = useTranslation();\n  return (\n    <Scene title=\"Zapier\" icon={<ZapierIcon color=\"currentColor\" />}>\n      <Heading>Zapier</Heading>\n      <Text type=\"secondary\">\n        <Trans>\n          Zapier is a platform that allows Outline to easily integrate with\n          thousands of other business tools. Head over to Zapier to setup a\n          \"Zap\" and start programmatically interacting with Outline.'\n        </Trans>\n      </Text>\n      <p>\n        <Button\n          onClick={() =>\n            (window.location.href = \"https://zapier.com/apps/outline\")\n          }\n        >\n          {t(\"Open Zapier\")} →\n        </Button>\n      </p>\n    </Scene>\n  );\n}\n\nexport default Zapier;\n","import {\n  NewDocumentIcon,\n  EmailIcon,\n  ProfileIcon,\n  PadlockIcon,\n  CodeIcon,\n  UserIcon,\n  GroupIcon,\n  LinkIcon,\n  TeamIcon,\n  BeakerIcon,\n  DownloadIcon,\n} from \"outline-icons\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Details from \"~/scenes/Settings/Details\";\nimport Export from \"~/scenes/Settings/Export\";\nimport Features from \"~/scenes/Settings/Features\";\nimport Groups from \"~/scenes/Settings/Groups\";\nimport Import from \"~/scenes/Settings/Import\";\nimport Members from \"~/scenes/Settings/Members\";\nimport Notifications from \"~/scenes/Settings/Notifications\";\nimport Profile from \"~/scenes/Settings/Profile\";\nimport Security from \"~/scenes/Settings/Security\";\nimport Shares from \"~/scenes/Settings/Shares\";\nimport Slack from \"~/scenes/Settings/Slack\";\nimport Tokens from \"~/scenes/Settings/Tokens\";\nimport Zapier from \"~/scenes/Settings/Zapier\";\nimport SlackIcon from \"~/components/SlackIcon\";\nimport ZapierIcon from \"~/components/ZapierIcon\";\nimport env from \"~/env\";\nimport isCloudHosted from \"~/utils/isCloudHosted\";\nimport useCurrentTeam from \"./useCurrentTeam\";\nimport usePolicy from \"./usePolicy\";\n\ntype SettingsGroups = \"Account\" | \"Team\" | \"Integrations\";\ntype SettingsPage =\n  | \"Profile\"\n  | \"Notifications\"\n  | \"Api\"\n  | \"Details\"\n  | \"Security\"\n  | \"Features\"\n  | \"Members\"\n  | \"Groups\"\n  | \"Shares\"\n  | \"Import\"\n  | \"Export\"\n  | \"Slack\"\n  | \"Zapier\";\n\nexport type ConfigItem = {\n  name: string;\n  path: string;\n  icon: React.FC<any>;\n  component: () => JSX.Element;\n  enabled: boolean;\n  group: SettingsGroups;\n};\n\ntype ConfigType = {\n  [key in SettingsPage]: ConfigItem;\n};\n\nconst useAuthorizedSettingsConfig = () => {\n  const team = useCurrentTeam();\n  const can = usePolicy(team.id);\n  const { t } = useTranslation();\n\n  const config: ConfigType = React.useMemo(\n    () => ({\n      Profile: {\n        name: t(\"Profile\"),\n        path: \"/settings\",\n        component: Profile,\n        enabled: true,\n        group: t(\"Account\"),\n        icon: ProfileIcon,\n      },\n      Notifications: {\n        name: t(\"Notifications\"),\n        path: \"/settings/notifications\",\n        component: Notifications,\n        enabled: true,\n        group: t(\"Account\"),\n        icon: EmailIcon,\n      },\n      Api: {\n        name: t(\"API Tokens\"),\n        path: \"/settings/tokens\",\n        component: Tokens,\n        enabled: can.createApiKey,\n        group: t(\"Account\"),\n        icon: CodeIcon,\n      },\n      // Team group\n      Details: {\n        name: t(\"Details\"),\n        path: \"/settings/details\",\n        component: Details,\n        enabled: can.update,\n        group: t(\"Team\"),\n        icon: TeamIcon,\n      },\n      Security: {\n        name: t(\"Security\"),\n        path: \"/settings/security\",\n        component: Security,\n        enabled: can.update,\n        group: t(\"Team\"),\n        icon: PadlockIcon,\n      },\n      Features: {\n        name: t(\"Features\"),\n        path: \"/settings/features\",\n        component: Features,\n        enabled: can.update,\n        group: t(\"Team\"),\n        icon: BeakerIcon,\n      },\n      Members: {\n        name: t(\"Members\"),\n        path: \"/settings/members\",\n        component: Members,\n        enabled: true,\n        group: t(\"Team\"),\n        icon: UserIcon,\n      },\n      Groups: {\n        name: t(\"Groups\"),\n        path: \"/settings/groups\",\n        component: Groups,\n        enabled: true,\n        group: t(\"Team\"),\n        icon: GroupIcon,\n      },\n      Shares: {\n        name: t(\"Share Links\"),\n        path: \"/settings/shares\",\n        component: Shares,\n        enabled: true,\n        group: t(\"Team\"),\n        icon: LinkIcon,\n      },\n      Import: {\n        name: t(\"Import\"),\n        path: \"/settings/import\",\n        component: Import,\n        enabled: can.manage,\n        group: t(\"Team\"),\n        icon: NewDocumentIcon,\n      },\n      Export: {\n        name: t(\"Export\"),\n        path: \"/settings/export\",\n        component: Export,\n        enabled: can.export,\n        group: t(\"Team\"),\n        icon: DownloadIcon,\n      },\n      // Intergrations\n      Slack: {\n        name: \"Slack\",\n        path: \"/settings/integrations/slack\",\n        component: Slack,\n        enabled: can.update && (!!env.SLACK_CLIENT_ID || isCloudHosted),\n        group: t(\"Integrations\"),\n        icon: SlackIcon,\n      },\n      Zapier: {\n        name: \"Zapier\",\n        path: \"/settings/integrations/zapier\",\n        component: Zapier,\n        enabled: can.update && isCloudHosted,\n        group: t(\"Integrations\"),\n        icon: ZapierIcon,\n      },\n    }),\n    [can.createApiKey, can.export, can.manage, can.update, t]\n  );\n\n  const enabledConfigs = React.useMemo(\n    () =>\n      Object.keys(config).reduce(\n        (acc, key: SettingsPage) =>\n          config[key].enabled ? [...acc, config[key]] : acc,\n        []\n      ),\n    [config]\n  );\n\n  return enabledConfigs;\n};\n\nexport default useAuthorizedSettingsConfig;\n"],"sourceRoot":""}