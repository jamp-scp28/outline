{"version":3,"sources":["webpack:///./app/hooks/useCommandBarActions.ts","webpack:///./app/components/CommandBarItem.tsx","webpack:///./app/components/CommandBarResults.tsx","webpack:///./app/components/SearchActions.ts","webpack:///./app/utils/developer.ts","webpack:///./app/actions/definitions/debug.tsx","webpack:///./app/actions/root.ts","webpack:///./app/hooks/useSettingsAction.tsx","webpack:///./app/components/CommandBar.tsx"],"names":["useCommandBarActions","actions","additionalDeps","location","useLocation","context","useActionContext","isCommandBar","registerable","map","action","actionToKBar","useRegisterActions","r","id","join","pathname","CommandBarItem","ref","active","currentRootActionId","theme","useTheme","ancestors","React","index","findIndex","ancestor","slice","Item","Content","align","gap","icon","size","color","key","Ancestor","name","ForwardIcon","textSecondary","children","length","shortcut","style","display","gridAutoFlow","sc","Key","Icon","styled","Flex","props","span","div","menuItemSelected","css","text","BackIcon","CommandBarResults","useMatches","results","rootActionId","items","maxHeight","onRender","item","Header","h3","textTertiary","SearchActions","searches","useStores","fetchPage","searchQuery","useKBar","state","searchDocumentsForQuery","recent","navigateToRecentSearchQuery","deleteAllDatabases","window","indexedDB","databases","database","deleteDatabase","clearIndexedDB","createAction","t","keywords","section","DebugSection","perform","stores","toasts","showToast","rootDebugActions","iconInContextMenu","visible","event","env","ENVIRONMENT","KeyboardEvent","altKey","rootCollectionActions","rootDocumentActions","rootUserActions","rootNavigationActions","rootSettingsActions","useSettingsActions","config","useAuthorizedSettingsConfig","path","NavigationSection","history","push","KBarPortal","showing","visualState","Hint","Text","background","Positioner","KBarPositioner","depths","commandBar","SearchInput","KBarSearch","menuBackground","placeholder","Animator","KBarAnimator","breakpoint","observer","CommandBar","useTranslation","ui","settingsActions","commandBarActions","rootActions","rootAction","undefined","commandBarOpenedFromSidebar","type","metaDisplay"],"mappings":"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","file":"command-bar.e7cf7688c94c56b9db10.js","sourcesContent":["import { useRegisterActions } from \"kbar\";\nimport { flattenDeep } from \"lodash\";\nimport { useLocation } from \"react-router-dom\";\nimport { actionToKBar } from \"~/actions\";\nimport { Action } from \"~/types\";\nimport useActionContext from \"./useActionContext\";\n\n/**\n * Hook to add actions to the command bar while the hook is inside a mounted\n * component.\n *\n * @param actions actions to make available\n */\nexport default function useCommandBarActions(\n  actions: Action[],\n  additionalDeps: React.DependencyList = []\n) {\n  const location = useLocation();\n  const context = useActionContext({\n    isCommandBar: true,\n  });\n\n  const registerable = flattenDeep(\n    actions.map((action) => actionToKBar(action, context))\n  );\n\n  useRegisterActions(registerable, [\n    registerable.map((r) => r.id).join(\"\"),\n    location.pathname,\n    ...additionalDeps,\n  ]);\n}\n","import { ActionImpl } from \"kbar\";\nimport { ArrowIcon, BackIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport Flex from \"~/components/Flex\";\nimport Key from \"~/components/Key\";\n\ntype Props = {\n  action: ActionImpl;\n  active: boolean;\n  currentRootActionId: string | null | undefined;\n};\n\nfunction CommandBarItem(\n  { action, active, currentRootActionId }: Props,\n  ref: React.RefObject<HTMLDivElement>\n) {\n  const theme = useTheme();\n  const ancestors = React.useMemo(() => {\n    if (!currentRootActionId) {\n      return action.ancestors;\n    }\n    const index = action.ancestors.findIndex(\n      (ancestor) => ancestor.id === currentRootActionId\n    );\n\n    // +1 removes the currentRootAction; e.g. if we are on the \"Set theme\"\n    // parent action, the UI should not display \"Set theme… > Dark\" but rather\n    // just \"Dark\"\n    return action.ancestors.slice(index + 1);\n  }, [action.ancestors, currentRootActionId]);\n\n  return (\n    <Item active={active} ref={ref}>\n      <Content align=\"center\" gap={8}>\n        <Icon>\n          {action.icon ? (\n            // @ts-expect-error no icon on ActionImpl\n            React.cloneElement(action.icon, {\n              size: 22,\n              color: \"currentColor\",\n            })\n          ) : (\n            <ArrowIcon color=\"currentColor\" />\n          )}\n        </Icon>\n\n        {ancestors.map((ancestor) => (\n          <React.Fragment key={ancestor.id}>\n            <Ancestor>{ancestor.name}</Ancestor>\n            <ForwardIcon color={theme.textSecondary} size={22} />\n          </React.Fragment>\n        ))}\n        {action.name}\n        {action.children?.length ? \"…\" : \"\"}\n      </Content>\n      {action.shortcut?.length ? (\n        <div\n          style={{\n            display: \"grid\",\n            gridAutoFlow: \"column\",\n            gap: \"4px\",\n          }}\n        >\n          {action.shortcut.map((sc: string) => (\n            <Key key={sc}>{sc}</Key>\n          ))}\n        </div>\n      ) : null}\n    </Item>\n  );\n}\n\nconst Icon = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  color: ${(props) => props.theme.textSecondary};\n  flex-shrink: 0;\n`;\n\nconst Ancestor = styled.span`\n  color: ${(props) => props.theme.textSecondary};\n`;\n\nconst Content = styled(Flex)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex-shrink: 1;\n`;\n\nconst Item = styled.div<{ active?: boolean }>`\n  font-size: 15px;\n  padding: 10px 16px;\n  background: ${(props) =>\n    props.active ? props.theme.menuItemSelected : \"none\"};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  min-width: 0;\n\n  ${(props) =>\n    props.active &&\n    css`\n      ${Icon} {\n        color: ${props.theme.text};\n      }\n    `}\n`;\n\nconst ForwardIcon = styled(BackIcon)`\n  transform: rotate(180deg);\n  flex-shrink: 0;\n`;\n\nexport default React.forwardRef<HTMLDivElement, Props>(CommandBarItem);\n","import { useMatches, KBarResults } from \"kbar\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport CommandBarItem from \"~/components/CommandBarItem\";\n\nexport default function CommandBarResults() {\n  const { results, rootActionId } = useMatches();\n\n  return (\n    <KBarResults\n      items={results}\n      maxHeight={400}\n      onRender={({ item, active }) =>\n        typeof item === \"string\" ? (\n          <Header>{item}</Header>\n        ) : (\n          <CommandBarItem\n            action={item}\n            active={active}\n            currentRootActionId={rootActionId}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst Header = styled.h3`\n  font-size: 13px;\n  letter-spacing: 0.04em;\n  margin: 0;\n  padding: 16px 0 4px 20px;\n  color: ${(props) => props.theme.textTertiary};\n  height: 36px;\n`;\n","import { useKBar } from \"kbar\";\nimport * as React from \"react\";\nimport { searchDocumentsForQuery } from \"~/actions/definitions/documents\";\nimport { navigateToRecentSearchQuery } from \"~/actions/definitions/navigation\";\n\nimport useCommandBarActions from \"~/hooks/useCommandBarActions\";\nimport useStores from \"~/hooks/useStores\";\n\nexport default function SearchActions() {\n  const { searches } = useStores();\n\n  React.useEffect(() => {\n    searches.fetchPage({});\n  }, [searches]);\n\n  const { searchQuery } = useKBar((state) => ({\n    searchQuery: state.searchQuery,\n  }));\n\n  useCommandBarActions(\n    searchQuery ? [searchDocumentsForQuery(searchQuery)] : []\n  );\n\n  useCommandBarActions(searches.recent.map(navigateToRecentSearchQuery));\n\n  return null;\n}\n","// A function to delete all IndexedDB databases\nexport async function deleteAllDatabases() {\n  const databases = await window.indexedDB.databases();\n\n  for (const database of databases) {\n    if (database.name) {\n      await window.indexedDB.deleteDatabase(database.name);\n    }\n  }\n}\n","import { ToolsIcon, TrashIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport stores from \"~/stores\";\nimport { createAction } from \"~/actions\";\nimport { DebugSection } from \"~/actions/sections\";\nimport env from \"~/env\";\nimport { deleteAllDatabases } from \"~/utils/developer\";\n\nexport const clearIndexedDB = createAction({\n  name: ({ t }) => t(\"Delete IndexedDB cache\"),\n  icon: <TrashIcon />,\n  keywords: \"cache clear database\",\n  section: DebugSection,\n  perform: async ({ t }) => {\n    await deleteAllDatabases();\n    stores.toasts.showToast(t(\"IndexedDB cache deleted\"));\n  },\n});\n\nexport const development = createAction({\n  name: ({ t }) => t(\"Development\"),\n  keywords: \"debug\",\n  icon: <ToolsIcon />,\n  iconInContextMenu: false,\n  section: DebugSection,\n  visible: ({ event }) =>\n    env.ENVIRONMENT === \"development\" ||\n    (event instanceof KeyboardEvent && event.altKey),\n  children: [clearIndexedDB],\n});\n\nexport const rootDebugActions = [development];\n","import { rootCollectionActions } from \"./definitions/collections\";\nimport { rootDebugActions } from \"./definitions/debug\";\nimport { rootDocumentActions } from \"./definitions/documents\";\nimport { rootNavigationActions } from \"./definitions/navigation\";\nimport { rootSettingsActions } from \"./definitions/settings\";\nimport { rootUserActions } from \"./definitions/users\";\n\nexport default [\n  ...rootCollectionActions,\n  ...rootDocumentActions,\n  ...rootUserActions,\n  ...rootNavigationActions,\n  ...rootSettingsActions,\n  ...rootDebugActions,\n];\n","import { SettingsIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { createAction } from \"~/actions\";\nimport { NavigationSection } from \"~/actions/sections\";\nimport history from \"~/utils/history\";\nimport useAuthorizedSettingsConfig from \"./useAuthorizedSettingsConfig\";\n\nconst useSettingsActions = () => {\n  const config = useAuthorizedSettingsConfig();\n  const actions = React.useMemo(() => {\n    return config.map((item) => {\n      const Icon = item.icon;\n      return {\n        id: item.path,\n        name: item.name,\n        icon: <Icon color=\"currentColor\" />,\n        section: NavigationSection,\n        perform: () => history.push(item.path),\n      };\n    });\n  }, [config]);\n\n  const navigateToSettings = React.useMemo(\n    () =>\n      createAction({\n        name: ({ t }) => t(\"Settings\"),\n        section: NavigationSection,\n        shortcut: [\"g\", \"s\"],\n        icon: <SettingsIcon />,\n        children: () => actions,\n      }),\n    [actions]\n  );\n\n  return navigateToSettings;\n};\n\nexport default useSettingsActions;\n","import { useKBar, KBarPositioner, KBarAnimator, KBarSearch } from \"kbar\";\nimport { observer } from \"mobx-react\";\nimport { QuestionMarkIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Portal } from \"react-portal\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { depths } from \"@shared/styles\";\nimport CommandBarResults from \"~/components/CommandBarResults\";\nimport SearchActions from \"~/components/SearchActions\";\nimport rootActions from \"~/actions/root\";\nimport useCommandBarActions from \"~/hooks/useCommandBarActions\";\nimport useSettingsActions from \"~/hooks/useSettingsAction\";\nimport useStores from \"~/hooks/useStores\";\nimport { CommandBarAction } from \"~/types\";\nimport { metaDisplay } from \"~/utils/keyboard\";\nimport Text from \"./Text\";\n\nfunction CommandBar() {\n  const { t } = useTranslation();\n  const { ui } = useStores();\n  const settingsActions = useSettingsActions();\n  const commandBarActions = React.useMemo(\n    () => [...rootActions, settingsActions],\n    [settingsActions]\n  );\n\n  useCommandBarActions(commandBarActions);\n\n  const { rootAction } = useKBar((state) => ({\n    rootAction: state.currentRootActionId\n      ? ((state.actions[\n          state.currentRootActionId\n        ] as unknown) as CommandBarAction)\n      : undefined,\n  }));\n\n  return (\n    <>\n      <SearchActions />\n      <KBarPortal>\n        <Positioner>\n          <Animator>\n            <SearchInput\n              placeholder={`${\n                rootAction?.placeholder ||\n                rootAction?.name ||\n                t(\"Type a command or search\")\n              }…`}\n            />\n            <CommandBarResults />\n            {ui.commandBarOpenedFromSidebar && (\n              <Hint size=\"small\" type=\"tertiary\">\n                <QuestionMarkIcon size={18} color=\"currentColor\" />\n                {t(\n                  \"Open search from anywhere with the {{ shortcut }} shortcut\",\n                  {\n                    shortcut: `${metaDisplay} + k`,\n                  }\n                )}\n              </Hint>\n            )}\n          </Animator>\n        </Positioner>\n      </KBarPortal>\n    </>\n  );\n}\n\nconst KBarPortal: React.FC = ({ children }) => {\n  const { showing } = useKBar((state) => ({\n    showing: state.visualState !== \"hidden\",\n  }));\n\n  if (!showing) {\n    return null;\n  }\n\n  return <Portal>{children}</Portal>;\n};\n\nconst Hint = styled(Text)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  border-top: 1px solid ${(props) => props.theme.background};\n  margin: 1px 0 0;\n  padding: 6px 16px;\n  width: 100%;\n`;\n\nconst Positioner = styled(KBarPositioner)`\n  z-index: ${depths.commandBar};\n`;\n\nconst SearchInput = styled(KBarSearch)`\n  padding: 16px 20px;\n  width: 100%;\n  outline: none;\n  border: none;\n  background: ${(props) => props.theme.menuBackground};\n  color: ${(props) => props.theme.text};\n\n  &:disabled,\n  &::placeholder {\n    color: ${(props) => props.theme.placeholder};\n  }\n`;\n\nconst Animator = styled(KBarAnimator)`\n  max-width: 600px;\n  max-height: 75vh;\n  width: 90vw;\n  background: ${(props) => props.theme.menuBackground};\n  color: ${(props) => props.theme.text};\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: rgb(0 0 0 / 40%) 0px 16px 60px;\n  transition: max-width 0.2s ease-in-out;\n\n  ${breakpoint(\"desktopLarge\")`\n    max-width: 740px;\n  `};\n\n  @media print {\n    display: none;\n  }\n`;\n\nexport default observer(CommandBar);\n"],"sourceRoot":""}