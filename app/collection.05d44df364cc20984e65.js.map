{"version":3,"sources":["webpack:///./app/hooks/useCommandBarActions.ts","webpack:///./app/components/CollectionDescription.tsx","webpack:///./app/scenes/Collection/Actions.tsx","webpack:///./app/scenes/Collection/DropToImport.tsx","webpack:///./app/scenes/Collection/Empty.tsx","webpack:///./app/scenes/Collection.tsx","webpack:///./app/components/DocumentCard.tsx","webpack:///./app/components/PinnedDocuments.tsx"],"names":["useCommandBarActions","actions","additionalDeps","location","useLocation","context","useActionContext","isCommandBar","registerable","map","action","actionToKBar","useRegisterActions","r","id","join","pathname","Disclosure","styled","NudeButton","props","theme","divider","sidebarText","Placeholder","ButtonLink","placeholder","MaxHeight","div","Input","backgroundTransition","transparentize","background","secondaryBackground","observer","CollectionDescription","collection","collections","useStores","showToast","useToasts","t","useTranslation","React","isExpanded","setExpanded","isEditing","setEditing","isDirty","setDirty","can","usePolicy","handleStartEditing","handleStopEditing","handleClickDisclosure","event","preventDefault","document","activeElement","blur","handleSave","debounce","getValue","save","description","type","handleChange","key","updatedAt","data-editing","data-expanded","onClick","update","undefined","isSaving","LoadingIndicator","hasDescription","fallback","Editor","defaultValue","onChange","readOnly","autoFocus","onBlur","maxLength","embedsDisabled","readOnlyWriteCheckboxes","aria-label","size","Arrow","Actions","isEmpty","InputSearchPage","source","label","collectionId","Tooltip","tooltip","shortcut","delay","placement","Button","as","Link","to","newDocumentPath","disabled","icon","CollectionMenu","borderOnHover","neutral","small","DropMessage","Text","DropzoneContainer","isDragActive","css","DropToImport","children","accept","useImportDocument","handleFiles","isImporting","handleRejection","onDropAccepted","onDropRejected","noClick","multiple","getRootProps","getInputProps","tabIndex","Centered","Flex","Empty","EmptyCollection","collectionName","name","useBoolean","permissionsModalOpen","handlePermissionsModalOpen","handlePermissionsModalClose","column","Trans","defaults","values","components","em","color","Modal","title","onRequestClose","isOpen","CollectionPermissions","StarButton","Star","HeadingWithIcon","Heading","AnimatedStar","$isStarred","breakpoint","HeadingIcon","CollectionIcon","CollectionScene","params","useParams","history","useHistory","match","useRouteMatch","documents","pins","ui","isFetching","setFetching","error","setError","getByUrl","get","canonicalUrl","updateCollectionUrl","url","replace","state","setActiveCollection","fetchPage","fetch","load","editCollection","activeCollectionId","Search","notFound","Scene","centered","textTitle","expanded","importFileTypes","CenteredContent","withStickyHeader","isStarred","permission","Badge","PinnedDocuments","inCollection","canUpdate","Tabs","Tab","collectionUrl","exact","path","PaginatedDocumentList","alphabeticalInCollection","fetchAlphabetical","options","leastRecentlyUpdatedInCollection","fetchLeastRecentlyUpdated","recentlyPublishedInCollection","fetchRecentlyPublished","showPublished","recentlyUpdatedInCollection","fetchRecentlyUpdated","rootInCollection","parentDocumentId","sort","field","direction","showParentDocuments","PlaceholderText","height","count","PinButton","white75","white","dir","DragHandle","$isDragging","AnimatePresence","m","Reorderable","Content","DocumentMeta","DocumentLink","slate","$menuOpen","listItemHoverBackground","h3","DocumentCard","pin","canUpdatePin","isDraggable","useSortable","attributes","listeners","setNodeRef","transform","transition","isDragging","style","CSS","Transform","toString","handleUnpin","delete","ref","initial","opacity","scale","animate","bounce","exit","getLuminance","titleWithDefault","justify","Time","dateTime","addSuffix","shorten","gap","List","limit","rest","documentId","items","setItems","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","handleDragEnd","active","over","activePos","indexOf","overPos","overIndex","index","nextIndex","prevIndex","fractionalIndex","catch","arrayMove","orderedData","length","modifiers","restrictToParentElement","collisionDetection","closestCenter","onDragEnd","strategy","rectSortingStrategy","find"],"mappings":"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","file":"collection.05d44df364cc20984e65.js","sourcesContent":["import { useRegisterActions } from \"kbar\";\nimport { flattenDeep } from \"lodash\";\nimport { useLocation } from \"react-router-dom\";\nimport { actionToKBar } from \"~/actions\";\nimport { Action } from \"~/types\";\nimport useActionContext from \"./useActionContext\";\n\n/**\n * Hook to add actions to the command bar while the hook is inside a mounted\n * component.\n *\n * @param actions actions to make available\n */\nexport default function useCommandBarActions(\n  actions: Action[],\n  additionalDeps: React.DependencyList = []\n) {\n  const location = useLocation();\n  const context = useActionContext({\n    isCommandBar: true,\n  });\n\n  const registerable = flattenDeep(\n    actions.map((action) => actionToKBar(action, context))\n  );\n\n  useRegisterActions(registerable, [\n    registerable.map((r) => r.id).join(\"\"),\n    location.pathname,\n    ...additionalDeps,\n  ]);\n}\n","import debounce from \"lodash/debounce\";\nimport { observer } from \"mobx-react\";\nimport { transparentize } from \"polished\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Collection from \"~/models/Collection\";\nimport Arrow from \"~/components/Arrow\";\nimport ButtonLink from \"~/components/ButtonLink\";\nimport Editor from \"~/components/Editor\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport NudeButton from \"~/components/NudeButton\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  collection: Collection;\n};\n\nfunction CollectionDescription({ collection }: Props) {\n  const { collections } = useStores();\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isEditing, setEditing] = React.useState(false);\n  const [isDirty, setDirty] = React.useState(false);\n  const can = usePolicy(collection.id);\n\n  const handleStartEditing = React.useCallback(() => {\n    setEditing(true);\n  }, []);\n\n  const handleStopEditing = React.useCallback(() => {\n    setEditing(false);\n  }, []);\n\n  const handleClickDisclosure = React.useCallback(\n    (event) => {\n      event.preventDefault();\n\n      if (isExpanded && document.activeElement) {\n        // @ts-expect-error ts-migrate(2339) FIXME: Property 'blur' does not exist on type 'Element'.\n        document.activeElement.blur();\n      }\n\n      setExpanded(!isExpanded);\n    },\n    [isExpanded]\n  );\n\n  const handleSave = React.useMemo(\n    () =>\n      debounce(async (getValue) => {\n        try {\n          await collection.save({\n            description: getValue(),\n          });\n          setDirty(false);\n        } catch (err) {\n          showToast(\n            t(\"Sorry, an error occurred saving the collection\", {\n              type: \"error\",\n            })\n          );\n          throw err;\n        }\n      }, 1000),\n    [collection, showToast, t]\n  );\n\n  const handleChange = React.useCallback(\n    (getValue) => {\n      setDirty(true);\n      handleSave(getValue);\n    },\n    [handleSave]\n  );\n\n  React.useEffect(() => {\n    setEditing(false);\n  }, [collection.id]);\n  const placeholder = `${t(\"Add a description\")}…`;\n  const key = isEditing || isDirty ? \"draft\" : collection.updatedAt;\n\n  return (\n    <MaxHeight data-editing={isEditing} data-expanded={isExpanded}>\n      <Input data-editing={isEditing} data-expanded={isExpanded}>\n        <span onClick={can.update ? handleStartEditing : undefined}>\n          {collections.isSaving && <LoadingIndicator />}\n          {collection.hasDescription || isEditing || isDirty ? (\n            <React.Suspense\n              fallback={\n                <Placeholder\n                  onClick={() => {\n                    //\n                  }}\n                >\n                  Loading…\n                </Placeholder>\n              }\n            >\n              <Editor\n                key={key}\n                defaultValue={collection.description || \"\"}\n                onChange={handleChange}\n                placeholder={placeholder}\n                readOnly={!isEditing}\n                autoFocus={isEditing}\n                onBlur={handleStopEditing}\n                maxLength={1000}\n                embedsDisabled\n                readOnlyWriteCheckboxes\n              />\n            </React.Suspense>\n          ) : (\n            can.update && (\n              <Placeholder\n                onClick={() => {\n                  //\n                }}\n              >\n                {placeholder}\n              </Placeholder>\n            )\n          )}\n        </span>\n      </Input>\n      {!isEditing && (\n        <Disclosure\n          onClick={handleClickDisclosure}\n          aria-label={isExpanded ? t(\"Collapse\") : t(\"Expand\")}\n          size={30}\n        >\n          <Arrow />\n        </Disclosure>\n      )}\n    </MaxHeight>\n  );\n}\n\nconst Disclosure = styled(NudeButton)`\n  opacity: 0;\n  color: ${(props) => props.theme.divider};\n  position: absolute;\n  top: calc(25vh - 50px);\n  left: 50%;\n  z-index: 1;\n  transform: rotate(-90deg) translateX(-50%);\n  transition: opacity 100ms ease-in-out;\n\n  &:focus,\n  &:hover {\n    opacity: 1;\n  }\n\n  &:active {\n    color: ${(props) => props.theme.sidebarText};\n  }\n`;\n\nconst Placeholder = styled(ButtonLink)`\n  color: ${(props) => props.theme.placeholder};\n  cursor: text;\n  min-height: 27px;\n`;\n\nconst MaxHeight = styled.div`\n  position: relative;\n  max-height: 25vh;\n  overflow: hidden;\n  margin: -12px -8px -8px;\n  padding: 8px;\n\n  &[data-editing=\"true\"],\n  &[data-expanded=\"true\"] {\n    max-height: initial;\n    overflow: initial;\n\n    ${Disclosure} {\n      top: initial;\n      bottom: 0;\n      transform: rotate(90deg) translateX(-50%);\n    }\n  }\n\n  &:hover ${Disclosure} {\n    opacity: 1;\n  }\n`;\n\nconst Input = styled.div`\n  margin: -8px;\n  padding: 8px;\n  border-radius: 8px;\n  transition: ${(props) => props.theme.backgroundTransition};\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: calc(25vh - 50px);\n    left: 0;\n    right: 0;\n    height: 50px;\n    pointer-events: none;\n    background: linear-gradient(\n      180deg,\n      ${(props) => transparentize(1, props.theme.background)} 0%,\n      ${(props) => props.theme.background} 100%\n    );\n  }\n\n  &[data-editing=\"true\"],\n  &[data-expanded=\"true\"] {\n    &:after {\n      background: transparent;\n    }\n  }\n\n  &[data-editing=\"true\"] {\n    background: ${(props) => props.theme.secondaryBackground};\n  }\n\n  .block-menu-trigger,\n  .heading-anchor {\n    display: none !important;\n  }\n`;\n\nexport default observer(CollectionDescription);\n","import { observer } from \"mobx-react\";\nimport { MoreIcon, PlusIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport Collection from \"~/models/Collection\";\nimport { Action, Separator } from \"~/components/Actions\";\nimport Button from \"~/components/Button\";\nimport InputSearchPage from \"~/components/InputSearchPage\";\nimport Tooltip from \"~/components/Tooltip\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport CollectionMenu from \"~/menus/CollectionMenu\";\nimport { newDocumentPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  collection: Collection;\n};\n\nfunction Actions({ collection }: Props) {\n  const { t } = useTranslation();\n  const can = usePolicy(collection.id);\n\n  return (\n    <>\n      {!collection.isEmpty && (\n        <>\n          <Action>\n            <InputSearchPage\n              source=\"collection\"\n              placeholder={`${t(\"Search in collection\")}…`}\n              label={`${t(\"Search in collection\")}…`}\n              collectionId={collection.id}\n            />\n          </Action>\n          {can.update && (\n            <>\n              <Action>\n                <Tooltip\n                  tooltip={t(\"New document\")}\n                  shortcut=\"n\"\n                  delay={500}\n                  placement=\"bottom\"\n                >\n                  <Button\n                    as={Link}\n                    to={collection ? newDocumentPath(collection.id) : \"\"}\n                    disabled={!collection}\n                    icon={<PlusIcon />}\n                  >\n                    {t(\"New doc\")}\n                  </Button>\n                </Tooltip>\n              </Action>\n              <Separator />\n            </>\n          )}\n        </>\n      )}\n      <Action>\n        <CollectionMenu\n          collection={collection}\n          placement=\"bottom-end\"\n          label={(props) => (\n            <Button\n              aria-label={t(\"Collection menu\")}\n              icon={<MoreIcon />}\n              {...props}\n              borderOnHover\n              neutral\n              small\n            />\n          )}\n        />\n      </Action>\n    </>\n  );\n}\n\nexport default observer(Actions);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useTranslation } from \"react-i18next\";\nimport styled, { css } from \"styled-components\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport Text from \"~/components/Text\";\nimport useImportDocument from \"~/hooks/useImportDocument\";\nimport useToasts from \"~/hooks/useToasts\";\n\ntype Props = {\n  disabled: boolean;\n  accept: string;\n  collectionId: string;\n};\n\nconst DropToImport: React.FC<Props> = ({\n  children,\n  disabled,\n  accept,\n  collectionId,\n}) => {\n  const { handleFiles, isImporting } = useImportDocument(collectionId);\n  const { showToast } = useToasts();\n  const { t } = useTranslation();\n\n  const handleRejection = React.useCallback(() => {\n    showToast(\n      t(\"Document not supported – try Markdown, Plain text, HTML, or Word\"),\n      {\n        type: \"error\",\n      }\n    );\n  }, [t, showToast]);\n\n  return (\n    <Dropzone\n      accept={accept}\n      onDropAccepted={handleFiles}\n      onDropRejected={handleRejection}\n      disabled={disabled}\n      noClick\n      multiple\n    >\n      {({ getRootProps, getInputProps, isDragActive }) => (\n        <DropzoneContainer\n          {...getRootProps()}\n          isDragActive={isDragActive}\n          tabIndex={-1}\n        >\n          <input {...getInputProps()} />\n          {isImporting && <LoadingIndicator />}\n\n          {children}\n          <DropMessage>{t(\"Drop documents to import\")}</DropMessage>\n        </DropzoneContainer>\n      )}\n    </Dropzone>\n  );\n};\n\nconst DropMessage = styled(Text)`\n  opacity: 0;\n  pointer-events: none;\n`;\n\nconst DropzoneContainer = styled.div<{ isDragActive?: boolean }>`\n  outline-color: transparent !important;\n  height: calc(100% - 56px);\n  position: relative;\n\n  ${({ isDragActive, theme }) =>\n    isDragActive &&\n    css`\n      &:after {\n        display: block;\n        content: \"\";\n        position: absolute;\n        top: 24px;\n        right: 24px;\n        left: 24px;\n        height: 85vh;\n        background: ${theme.background};\n        border-radius: 8px;\n        border: 1px dashed ${theme.divider};\n        box-shadow: 0 0 0 100px ${theme.background};\n        z-index: 1;\n      }\n\n      ${DropMessage} {\n        opacity: 1;\n        z-index: 2;\n        position: absolute;\n        text-align: center;\n        top: 50vh;\n        left: 50%;\n        transform: translateX(-50%);\n      }\n    `}\n`;\n\nexport default observer(DropToImport);\n","import { observer } from \"mobx-react\";\nimport { NewDocumentIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Collection from \"~/models/Collection\";\nimport CollectionPermissions from \"~/scenes/CollectionPermissions\";\nimport Button from \"~/components/Button\";\nimport Flex from \"~/components/Flex\";\nimport Modal from \"~/components/Modal\";\nimport Text from \"~/components/Text\";\nimport useBoolean from \"~/hooks/useBoolean\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport { newDocumentPath } from \"~/utils/routeHelpers\";\n\ntype Props = {\n  collection: Collection;\n};\n\nfunction EmptyCollection({ collection }: Props) {\n  const { t } = useTranslation();\n  const can = usePolicy(collection.id);\n  const collectionName = collection ? collection.name : \"\";\n\n  const [\n    permissionsModalOpen,\n    handlePermissionsModalOpen,\n    handlePermissionsModalClose,\n  ] = useBoolean();\n\n  return (\n    <Centered column>\n      <Text type=\"secondary\">\n        <Trans\n          defaults=\"<em>{{ collectionName }}</em> doesn’t contain any\n                    documents yet.\"\n          values={{\n            collectionName,\n          }}\n          components={{\n            em: <strong />,\n          }}\n        />\n        <br />\n        {can.update && <Trans>Get started by creating a new one!</Trans>}\n      </Text>\n      {can.update && (\n        <Empty>\n          <Link to={newDocumentPath(collection.id)}>\n            <Button icon={<NewDocumentIcon color=\"currentColor\" />}>\n              {t(\"Create a document\")}\n            </Button>\n          </Link>\n          &nbsp;&nbsp;\n          <Button onClick={handlePermissionsModalOpen} neutral>\n            {t(\"Manage permissions\")}…\n          </Button>\n        </Empty>\n      )}\n      <Modal\n        title={t(\"Collection permissions\")}\n        onRequestClose={handlePermissionsModalClose}\n        isOpen={permissionsModalOpen}\n      >\n        <CollectionPermissions collection={collection} />\n      </Modal>\n    </Centered>\n  );\n}\n\nconst Centered = styled(Flex)`\n  text-align: center;\n  margin: 40vh auto 0;\n  max-width: 380px;\n  transform: translateY(-50%);\n`;\n\nconst Empty = styled(Flex)`\n  justify-content: center;\n  margin: 10px 0;\n`;\n\nexport default observer(EmptyCollection);\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  useParams,\n  Redirect,\n  Switch,\n  Route,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport Collection from \"~/models/Collection\";\nimport Search from \"~/scenes/Search\";\nimport Badge from \"~/components/Badge\";\nimport CenteredContent from \"~/components/CenteredContent\";\nimport CollectionDescription from \"~/components/CollectionDescription\";\nimport CollectionIcon from \"~/components/CollectionIcon\";\nimport Heading from \"~/components/Heading\";\nimport PlaceholderList from \"~/components/List/Placeholder\";\nimport PaginatedDocumentList from \"~/components/PaginatedDocumentList\";\nimport PinnedDocuments from \"~/components/PinnedDocuments\";\nimport PlaceholderText from \"~/components/PlaceholderText\";\nimport Scene from \"~/components/Scene\";\nimport Star, { AnimatedStar } from \"~/components/Star\";\nimport Tab from \"~/components/Tab\";\nimport Tabs from \"~/components/Tabs\";\nimport Tooltip from \"~/components/Tooltip\";\nimport { editCollection } from \"~/actions/definitions/collections\";\nimport useCommandBarActions from \"~/hooks/useCommandBarActions\";\nimport usePolicy from \"~/hooks/usePolicy\";\nimport useStores from \"~/hooks/useStores\";\nimport { collectionUrl, updateCollectionUrl } from \"~/utils/routeHelpers\";\nimport Actions from \"./Collection/Actions\";\nimport DropToImport from \"./Collection/DropToImport\";\nimport Empty from \"./Collection/Empty\";\n\nfunction CollectionScene() {\n  const params = useParams<{ id?: string }>();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { t } = useTranslation();\n  const { documents, pins, collections, ui } = useStores();\n  const [isFetching, setFetching] = React.useState(false);\n  const [error, setError] = React.useState<Error | undefined>();\n\n  const id = params.id || \"\";\n  const collection: Collection | null | undefined =\n    collections.getByUrl(id) || collections.get(id);\n  const can = usePolicy(collection?.id || \"\");\n\n  React.useEffect(() => {\n    if (collection?.name) {\n      const canonicalUrl = updateCollectionUrl(match.url, collection);\n\n      if (match.url !== canonicalUrl) {\n        history.replace(canonicalUrl, history.location.state);\n      }\n    }\n  }, [collection, collection?.name, history, id, match.url]);\n\n  React.useEffect(() => {\n    if (collection) {\n      ui.setActiveCollection(collection.id);\n    }\n\n    return () => ui.setActiveCollection(undefined);\n  }, [ui, collection]);\n\n  React.useEffect(() => {\n    setError(undefined);\n\n    if (collection) {\n      pins.fetchPage({\n        collectionId: collection.id,\n      });\n    }\n  }, [pins, collection]);\n\n  React.useEffect(() => {\n    async function load() {\n      if ((!can || !collection) && !error && !isFetching) {\n        try {\n          setError(undefined);\n          setFetching(true);\n          await collections.fetch(id);\n        } catch (err) {\n          setError(err);\n        } finally {\n          setFetching(false);\n        }\n      }\n    }\n\n    load();\n  }, [collections, isFetching, collection, error, id, can]);\n\n  useCommandBarActions(\n    [editCollection],\n    ui.activeCollectionId ? [ui.activeCollectionId] : undefined\n  );\n\n  if (!collection && error) {\n    return <Search notFound />;\n  }\n\n  return collection ? (\n    <Scene\n      // Forced mount prevents animation of pinned documents when navigating\n      // _between_ collections, speeds up perceived performance.\n      key={collection.id}\n      centered={false}\n      textTitle={collection.name}\n      title={\n        <>\n          <CollectionIcon collection={collection} expanded />\n          &nbsp;{collection.name}\n        </>\n      }\n      actions={<Actions collection={collection} />}\n    >\n      <DropToImport\n        accept={documents.importFileTypes.join(\", \")}\n        disabled={!can.update}\n        collectionId={collection.id}\n      >\n        <CenteredContent withStickyHeader>\n          {collection.isEmpty ? (\n            <Empty collection={collection} />\n          ) : (\n            <>\n              <HeadingWithIcon $isStarred={collection.isStarred}>\n                <HeadingIcon collection={collection} size={40} expanded />\n                {collection.name}\n                {!collection.permission && (\n                  <Tooltip\n                    tooltip={t(\n                      \"This collection is only visible to those given access\"\n                    )}\n                    placement=\"bottom\"\n                  >\n                    <Badge>{t(\"Private\")}</Badge>\n                  </Tooltip>\n                )}\n                <StarButton collection={collection} size={32} />\n              </HeadingWithIcon>\n              <CollectionDescription collection={collection} />\n\n              <PinnedDocuments\n                pins={pins.inCollection(collection.id)}\n                canUpdate={can.update}\n              />\n\n              <Tabs>\n                <Tab to={collectionUrl(collection.url)} exact>\n                  {t(\"Documents\")}\n                </Tab>\n                <Tab to={collectionUrl(collection.url, \"updated\")} exact>\n                  {t(\"Recently updated\")}\n                </Tab>\n                <Tab to={collectionUrl(collection.url, \"published\")} exact>\n                  {t(\"Recently published\")}\n                </Tab>\n                <Tab to={collectionUrl(collection.url, \"old\")} exact>\n                  {t(\"Least recently updated\")}\n                </Tab>\n                <Tab to={collectionUrl(collection.url, \"alphabetical\")} exact>\n                  {t(\"A–Z\")}\n                </Tab>\n              </Tabs>\n              <Switch>\n                <Route path={collectionUrl(collection.url, \"alphabetical\")}>\n                  <PaginatedDocumentList\n                    key=\"alphabetical\"\n                    documents={documents.alphabeticalInCollection(\n                      collection.id\n                    )}\n                    fetch={documents.fetchAlphabetical}\n                    options={{\n                      collectionId: collection.id,\n                    }}\n                  />\n                </Route>\n                <Route path={collectionUrl(collection.url, \"old\")}>\n                  <PaginatedDocumentList\n                    key=\"old\"\n                    documents={documents.leastRecentlyUpdatedInCollection(\n                      collection.id\n                    )}\n                    fetch={documents.fetchLeastRecentlyUpdated}\n                    options={{\n                      collectionId: collection.id,\n                    }}\n                  />\n                </Route>\n                <Route path={collectionUrl(collection.url, \"recent\")}>\n                  <Redirect to={collectionUrl(collection.url, \"published\")} />\n                </Route>\n                <Route path={collectionUrl(collection.url, \"published\")}>\n                  <PaginatedDocumentList\n                    key=\"published\"\n                    documents={documents.recentlyPublishedInCollection(\n                      collection.id\n                    )}\n                    fetch={documents.fetchRecentlyPublished}\n                    options={{\n                      collectionId: collection.id,\n                    }}\n                    showPublished\n                  />\n                </Route>\n                <Route path={collectionUrl(collection.url, \"updated\")}>\n                  <PaginatedDocumentList\n                    key=\"updated\"\n                    documents={documents.recentlyUpdatedInCollection(\n                      collection.id\n                    )}\n                    fetch={documents.fetchRecentlyUpdated}\n                    options={{\n                      collectionId: collection.id,\n                    }}\n                  />\n                </Route>\n                <Route path={collectionUrl(collection.url)} exact>\n                  <PaginatedDocumentList\n                    documents={documents.rootInCollection(collection.id)}\n                    fetch={documents.fetchPage}\n                    options={{\n                      collectionId: collection.id,\n                      parentDocumentId: null,\n                      sort: collection.sort.field,\n                      direction: collection.sort.direction,\n                    }}\n                    showParentDocuments\n                  />\n                </Route>\n              </Switch>\n            </>\n          )}\n        </CenteredContent>\n      </DropToImport>\n    </Scene>\n  ) : (\n    <CenteredContent>\n      <Heading>\n        <PlaceholderText height={35} />\n      </Heading>\n      <PlaceholderList count={5} />\n    </CenteredContent>\n  );\n}\n\nconst StarButton = styled(Star)`\n  position: relative;\n  top: 0;\n  left: 10px;\n  overflow: hidden;\n  width: 24px;\n\n  svg {\n    position: relative;\n    left: -4px;\n  }\n`;\n\nconst HeadingWithIcon = styled(Heading)<{ $isStarred: boolean }>`\n  display: flex;\n  align-items: center;\n\n  ${AnimatedStar} {\n    opacity: ${(props) => (props.$isStarred ? \"1 !important\" : 0)};\n  }\n\n  &:hover {\n    ${AnimatedStar} {\n      opacity: 0.5;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n\n  ${breakpoint(\"tablet\")`\n    margin-left: -40px;\n  `};\n`;\n\nconst HeadingIcon = styled(CollectionIcon)`\n  align-self: flex-start;\n  flex-shrink: 0;\n`;\n\nexport default observer(CollectionScene);\n","import { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { m } from \"framer-motion\";\nimport { observer } from \"mobx-react\";\nimport { CloseIcon, DocumentIcon, ClockIcon } from \"outline-icons\";\nimport { getLuminance, transparentize } from \"polished\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport Document from \"~/models/Document\";\nimport Pin from \"~/models/Pin\";\nimport Flex from \"~/components/Flex\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Time from \"~/components/Time\";\nimport useStores from \"~/hooks/useStores\";\nimport CollectionIcon from \"./CollectionIcon\";\nimport Text from \"./Text\";\nimport Tooltip from \"./Tooltip\";\n\ntype Props = {\n  /** The pin record */\n  pin: Pin | undefined;\n  /** The document related to the pin */\n  document: Document;\n  /** Whether the user has permission to delete or reorder the pin */\n  canUpdatePin?: boolean;\n  /** Whether this pin can be reordered by dragging */\n  isDraggable?: boolean;\n};\n\nfunction DocumentCard(props: Props) {\n  const { t } = useTranslation();\n  const { collections } = useStores();\n  const { document, pin, canUpdatePin, isDraggable } = props;\n  const collection = collections.get(document.collectionId);\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: props.document.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  const handleUnpin = React.useCallback(() => {\n    pin?.delete();\n  }, [pin]);\n\n  return (\n    <Reorderable\n      ref={setNodeRef}\n      style={style}\n      $isDragging={isDragging}\n      {...attributes}\n    >\n      <AnimatePresence\n        initial={{ opacity: 0, scale: 0.95 }}\n        animate={{\n          opacity: 1,\n          scale: 1,\n          transition: {\n            type: \"spring\",\n            bounce: 0.6,\n          },\n        }}\n        exit={{ opacity: 0, scale: 0.95 }}\n      >\n        <DocumentLink\n          dir={document.dir}\n          style={{\n            background:\n              collection?.color && getLuminance(collection.color) < 0.6\n                ? collection.color\n                : undefined,\n          }}\n          $isDragging={isDragging}\n          to={{\n            pathname: document.url,\n            state: {\n              title: document.titleWithDefault,\n            },\n          }}\n        >\n          <Content justify=\"space-between\" column>\n            {collection?.icon &&\n            collection?.icon !== \"collection\" &&\n            !pin?.collectionId ? (\n              <CollectionIcon collection={collection} color=\"white\" />\n            ) : (\n              <DocumentIcon color=\"white\" />\n            )}\n            <div>\n              <Heading dir={document.dir}>{document.titleWithDefault}</Heading>\n              <DocumentMeta size=\"xsmall\">\n                <ClockIcon color=\"currentColor\" size={18} />{\" \"}\n                <Time dateTime={document.updatedAt} addSuffix shorten />\n              </DocumentMeta>\n            </div>\n          </Content>\n        </DocumentLink>\n        {canUpdatePin && (\n          <Actions dir={document.dir} gap={4}>\n            {!isDragging && pin && (\n              <Tooltip tooltip={t(\"Unpin\")}>\n                <PinButton onClick={handleUnpin} aria-label={t(\"Unpin\")}>\n                  <CloseIcon color=\"currentColor\" />\n                </PinButton>\n              </Tooltip>\n            )}\n            {isDraggable && (\n              <DragHandle $isDragging={isDragging} {...listeners}>\n                :::\n              </DragHandle>\n            )}\n          </Actions>\n        )}\n      </AnimatePresence>\n    </Reorderable>\n  );\n}\n\nconst PinButton = styled(NudeButton)`\n  color: ${(props) => props.theme.white75};\n\n  &:hover,\n  &:active {\n    color: ${(props) => props.theme.white};\n  }\n`;\n\nconst Actions = styled(Flex)`\n  position: absolute;\n  top: 12px;\n  right: ${(props) => (props.dir === \"rtl\" ? \"auto\" : \"12px\")};\n  left: ${(props) => (props.dir === \"rtl\" ? \"12px\" : \"auto\")};\n  opacity: 0;\n  transition: opacity 100ms ease-in-out;\n\n  // move actions above content\n  z-index: 2;\n`;\n\nconst DragHandle = styled.div<{ $isDragging: boolean }>`\n  cursor: ${(props) => (props.$isDragging ? \"grabbing\" : \"grab\")};\n  padding: 0 4px;\n  font-weight: bold;\n  color: ${(props) => props.theme.white75};\n  line-height: 1.35;\n\n  &:hover,\n  &:active {\n    color: ${(props) => props.theme.white};\n  }\n`;\n\nconst AnimatePresence = m.div;\n\nconst Reorderable = styled.div<{ $isDragging: boolean }>`\n  position: relative;\n  user-select: none;\n  border-radius: 8px;\n\n  // move above other cards when dragging\n  z-index: ${(props) => (props.$isDragging ? 1 : \"inherit\")};\n  transform: scale(${(props) => (props.$isDragging ? \"1.025\" : \"1\")});\n  box-shadow: ${(props) =>\n    props.$isDragging ? \"0 0 20px rgba(0,0,0,0.3);\" : \"0 0 0 rgba(0,0,0,0)\"};\n\n  &:hover ${Actions} {\n    opacity: 1;\n  }\n`;\n\nconst Content = styled(Flex)`\n  min-width: 0;\n  height: 100%;\n\n  // move content above ::after\n  position: relative;\n  z-index: 1;\n`;\n\nconst DocumentMeta = styled(Text)`\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  color: ${(props) => transparentize(0.25, props.theme.white)};\n  margin: 0;\n`;\n\nconst DocumentLink = styled(Link)<{\n  $menuOpen?: boolean;\n  $isDragging?: boolean;\n}>`\n  position: relative;\n  display: block;\n  padding: 12px;\n  border-radius: 8px;\n  height: 160px;\n  background: ${(props) => props.theme.slate};\n  color: ${(props) => props.theme.white};\n  transition: transform 50ms ease-in-out;\n\n  &:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(transparent, rgba(0, 0, 0, 0.1));\n    border-radius: 8px;\n    pointer-events: none;\n  }\n\n  ${Actions} {\n    opacity: 0;\n  }\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:focus-within {\n    ${Actions} {\n      opacity: 1;\n    }\n\n    ${(props) =>\n      !props.$isDragging &&\n      css`\n        &:after {\n          background: rgba(0, 0, 0, 0.1);\n        }\n      `}\n  }\n\n  ${(props) =>\n    props.$menuOpen &&\n    css`\n      background: ${(props) => props.theme.listItemHoverBackground};\n\n      ${Actions} {\n        opacity: 1;\n      }\n    `}\n`;\n\nconst Heading = styled.h3`\n  margin-top: 0;\n  margin-bottom: 0.35em;\n  line-height: 22px;\n  max-height: 66px; // 3*line-height\n  overflow: hidden;\n\n  color: ${(props) => props.theme.white};\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n`;\n\nexport default observer(DocumentCard);\n","import {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  DragEndEvent,\n} from \"@dnd-kit/core\";\nimport { restrictToParentElement } from \"@dnd-kit/modifiers\";\nimport {\n  arrayMove,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  rectSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport fractionalIndex from \"fractional-index\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport Pin from \"~/models/Pin\";\nimport DocumentCard from \"~/components/DocumentCard\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  /** Pins to display */\n  pins: Pin[];\n  /** Maximum number of pins to display */\n  limit?: number;\n  /** Whether the user has permission to update pins */\n  canUpdate?: boolean;\n};\n\nfunction PinnedDocuments({ limit, pins, canUpdate, ...rest }: Props) {\n  const { documents, collections } = useStores();\n  const [items, setItems] = React.useState(pins.map((pin) => pin.documentId));\n\n  React.useEffect(() => {\n    setItems(pins.map((pin) => pin.documentId));\n  }, [pins]);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const handleDragEnd = React.useCallback(\n    (event: DragEndEvent) => {\n      const { active, over } = event;\n\n      if (over && active.id !== over.id) {\n        setItems((items) => {\n          const activePos = items.indexOf(active.id);\n          const overPos = items.indexOf(over.id);\n\n          const overIndex = pins[overPos]?.index || null;\n          const nextIndex = pins[overPos + 1]?.index || null;\n          const prevIndex = pins[overPos - 1]?.index || null;\n          const pin = pins[activePos];\n\n          // Update the order on the backend, revert if the call fails\n          pin\n            .save({\n              index:\n                overPos === 0\n                  ? fractionalIndex(null, overIndex)\n                  : activePos > overPos\n                  ? fractionalIndex(prevIndex, overIndex)\n                  : fractionalIndex(overIndex, nextIndex),\n            })\n            .catch(() => setItems(items));\n\n          // Update the order in state immediately\n          return arrayMove(items, activePos, overPos);\n        });\n      }\n    },\n    [pins]\n  );\n\n  if (collections.orderedData.length === 0) {\n    return null;\n  }\n\n  return (\n    <DndContext\n      sensors={sensors}\n      modifiers={[restrictToParentElement]}\n      collisionDetection={closestCenter}\n      onDragEnd={handleDragEnd}\n    >\n      <SortableContext items={items} strategy={rectSortingStrategy}>\n        <List>\n          <AnimatePresence initial={false}>\n            {items.map((documentId) => {\n              const document = documents.get(documentId);\n              const pin = pins.find((pin) => pin.documentId === documentId);\n\n              return document ? (\n                <DocumentCard\n                  key={documentId}\n                  document={document}\n                  canUpdatePin={canUpdate}\n                  isDraggable={items.length > 1}\n                  pin={pin}\n                  {...rest}\n                />\n              ) : null;\n            })}\n          </AnimatePresence>\n        </List>\n      </SortableContext>\n    </DndContext>\n  );\n}\n\nconst List = styled.div`\n  display: grid;\n  column-gap: 8px;\n  row-gap: 8px;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  padding: 0;\n  list-style: none;\n  margin: 16px 0 32px;\n\n  &:empty {\n    display: none;\n  }\n\n  ${breakpoint(\"tablet\")`\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  `};\n\n  ${breakpoint(\"desktop\")`\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  `};\n`;\n\nexport default observer(PinnedDocuments);\n"],"sourceRoot":""}