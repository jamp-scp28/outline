{"version":3,"sources":["webpack:///./app/components/Table.tsx"],"names":["Placeholder","columns","rows","Array","fill","map","_","row","Row","key","col","Cell","minWidth","maxWidth","Anchor","styled","div","Pagination","Flex","DescSortIcon","CollapsedIcon","props","theme","text","AscSortIcon","InnerTable","table","SortWrapper","$sortable","secondaryBackground","td","divider","NudeButton","sidebarControlHoverBackground","tr","Head","th","background","backgroundTransition","textSecondary","observer","Table","data","isLoading","totalPages","empty","page","pageSize","defaultSort","topRef","onChangeSort","onChangePage","defaultSortDirection","t","useTranslation","useTable","manualPagination","manualSortBy","autoResetSortBy","autoResetPage","pageCount","initialState","sortBy","id","desc","pageIndex","stateReducer","newState","action","prevState","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","canNextPage","nextPage","canPreviousPage","previousPage","state","prevSortBy","React","current","length","undefined","isEmpty","showPlaceholder","ref","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","align","disableSortBy","gap","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","className","justify","onClick","handlePreviousPage","neutral","handleNextPage"],"mappings":"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","file":"table.0928ef507a35546628a3.js","sourcesContent":["import { isEqual } from \"lodash\";\nimport { observer } from \"mobx-react\";\nimport { CollapsedIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\nimport styled from \"styled-components\";\nimport Button from \"~/components/Button\";\nimport DelayedMount from \"~/components/DelayedMount\";\nimport Empty from \"~/components/Empty\";\nimport Flex from \"~/components/Flex\";\nimport NudeButton from \"~/components/NudeButton\";\nimport PlaceholderText from \"~/components/PlaceholderText\";\n\nexport type Props = {\n  data: any[];\n  offset?: number;\n  isLoading: boolean;\n  empty?: React.ReactNode;\n  currentPage?: number;\n  page: number;\n  pageSize?: number;\n  totalPages?: number;\n  defaultSort?: string;\n  topRef?: React.Ref<any>;\n  onChangePage: (index: number) => void;\n  onChangeSort: (\n    sort: string | null | undefined,\n    direction: \"ASC\" | \"DESC\"\n  ) => void;\n  columns: any;\n  defaultSortDirection: \"ASC\" | \"DESC\";\n};\n\nfunction Table({\n  data,\n  isLoading,\n  totalPages,\n  empty,\n  columns,\n  page,\n  pageSize = 50,\n  defaultSort = \"name\",\n  topRef,\n  onChangeSort,\n  onChangePage,\n  defaultSortDirection,\n}: Props) {\n  const { t } = useTranslation();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canNextPage,\n    nextPage,\n    canPreviousPage,\n    previousPage,\n    state: { pageIndex, sortBy },\n  } = useTable(\n    {\n      columns,\n      data,\n      manualPagination: true,\n      manualSortBy: true,\n      autoResetSortBy: false,\n      autoResetPage: false,\n      pageCount: totalPages,\n      initialState: {\n        sortBy: [\n          {\n            id: defaultSort,\n            desc: defaultSortDirection === \"DESC\" ? true : false,\n          },\n        ],\n        pageSize,\n        pageIndex: page,\n      },\n      stateReducer: (newState, action, prevState) => {\n        if (!isEqual(newState.sortBy, prevState.sortBy)) {\n          return { ...newState, pageIndex: 0 };\n        }\n\n        return newState;\n      },\n    },\n    useSortBy,\n    usePagination\n  );\n  const prevSortBy = React.useRef(sortBy);\n\n  React.useEffect(() => {\n    if (!isEqual(sortBy, prevSortBy.current)) {\n      prevSortBy.current = sortBy;\n      onChangePage(0);\n      onChangeSort(\n        sortBy.length ? sortBy[0].id : undefined,\n        !sortBy.length ? defaultSortDirection : sortBy[0].desc ? \"DESC\" : \"ASC\"\n      );\n    }\n  }, [defaultSortDirection, onChangePage, onChangeSort, sortBy]);\n\n  const handleNextPage = () => {\n    nextPage();\n    onChangePage(pageIndex + 1);\n  };\n\n  const handlePreviousPage = () => {\n    previousPage();\n    onChangePage(pageIndex - 1);\n  };\n\n  const isEmpty = !isLoading && data.length === 0;\n  const showPlaceholder = isLoading && data.length === 0;\n\n  return (\n    <>\n      <Anchor ref={topRef} />\n      <InnerTable {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <Head {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  <SortWrapper\n                    align=\"center\"\n                    $sortable={!column.disableSortBy}\n                    gap={4}\n                  >\n                    {column.render(\"Header\")}\n                    {column.isSorted &&\n                      (column.isSortedDesc ? (\n                        <DescSortIcon />\n                      ) : (\n                        <AscSortIcon />\n                      ))}\n                  </SortWrapper>\n                </Head>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <Row {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <Cell\n                    {...cell.getCellProps([\n                      {\n                        // @ts-expect-error ts-migrate(2339) FIXME: Property 'className' does not exist on type 'Colum... Remove this comment to see the full error message\n                        className: cell.column.className,\n                      },\n                    ])}\n                  >\n                    {cell.render(\"Cell\")}\n                  </Cell>\n                ))}\n              </Row>\n            );\n          })}\n        </tbody>\n        {showPlaceholder && <Placeholder columns={columns.length} />}\n      </InnerTable>\n      {isEmpty ? (\n        empty || <Empty>{t(\"No results\")}</Empty>\n      ) : (\n        <Pagination\n          justify={canPreviousPage ? \"space-between\" : \"flex-end\"}\n          gap={8}\n        >\n          {/* Note: the page > 0 check shouldn't be needed here but is */}\n          {canPreviousPage && page > 0 && (\n            <Button onClick={handlePreviousPage} neutral>\n              {t(\"Previous page\")}\n            </Button>\n          )}\n          {canNextPage && (\n            <Button onClick={handleNextPage} neutral>\n              {t(\"Next page\")}\n            </Button>\n          )}\n        </Pagination>\n      )}\n    </>\n  );\n}\n\nexport const Placeholder = ({\n  columns,\n  rows = 3,\n}: {\n  columns: number;\n  rows?: number;\n}) => {\n  return (\n    <DelayedMount>\n      <tbody>\n        {new Array(rows).fill(1).map((_, row) => (\n          <Row key={row}>\n            {new Array(columns).fill(1).map((_, col) => (\n              <Cell key={col}>\n                <PlaceholderText minWidth={25} maxWidth={75} />\n              </Cell>\n            ))}\n          </Row>\n        ))}\n      </tbody>\n    </DelayedMount>\n  );\n};\n\nconst Anchor = styled.div`\n  top: -32px;\n  position: relative;\n`;\n\nconst Pagination = styled(Flex)`\n  margin: 0 0 32px;\n`;\n\nconst DescSortIcon = styled(CollapsedIcon)`\n  margin-left: -2px;\n\n  &:hover {\n    fill: ${(props) => props.theme.text};\n  }\n`;\n\nconst AscSortIcon = styled(DescSortIcon)`\n  transform: rotate(180deg);\n`;\n\nconst InnerTable = styled.table`\n  border-collapse: collapse;\n  margin: 16px 0;\n  width: 100%;\n`;\n\nconst SortWrapper = styled(Flex)<{ $sortable: boolean }>`\n  display: inline-flex;\n  height: 24px;\n  user-select: none;\n  border-radius: 4px;\n  white-space: nowrap;\n  margin: 0 -4px;\n  padding: 0 4px;\n\n  &:hover {\n    background: ${(props) =>\n      props.$sortable ? props.theme.secondaryBackground : \"none\"};\n  }\n`;\n\nconst Cell = styled.td`\n  padding: 10px 6px;\n  border-bottom: 1px solid ${(props) => props.theme.divider};\n  font-size: 14px;\n\n  &:first-child {\n    font-size: 15px;\n    font-weight: 500;\n  }\n\n  &.actions,\n  &.right-aligned {\n    text-align: right;\n    vertical-align: bottom;\n  }\n\n  ${NudeButton} {\n    &:hover,\n    &[aria-expanded=\"true\"] {\n      background: ${(props) => props.theme.sidebarControlHoverBackground};\n    }\n  }\n`;\n\nconst Row = styled.tr`\n  ${Cell} {\n    &:first-child {\n      padding-left: 0;\n    }\n    &:last-child {\n      padding-right: 0;\n    }\n  }\n  &:last-child {\n    ${Cell} {\n      border-bottom: 0;\n    }\n  }\n`;\n\nconst Head = styled.th`\n  text-align: left;\n  position: sticky;\n  top: 54px;\n  padding: 6px 6px 0;\n  border-bottom: 1px solid ${(props) => props.theme.divider};\n  background: ${(props) => props.theme.background};\n  transition: ${(props) => props.theme.backgroundTransition};\n  font-size: 14px;\n  color: ${(props) => props.theme.textSecondary};\n  font-weight: 500;\n  z-index: 1;\n\n  :first-child {\n    padding-left: 0;\n  }\n\n  :last-child {\n    padding-right: 0;\n  }\n`;\n\nexport default observer(Table);\n"],"sourceRoot":""}