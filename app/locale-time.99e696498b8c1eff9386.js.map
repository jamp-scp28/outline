{"version":3,"sources":["webpack:///./app/components/LocaleTime.tsx","webpack:///./app/hooks/useUserLocale.ts"],"names":["callbacks","setInterval","forEach","cb","LocaleTime","addSuffix","children","dateTime","shorten","format","relative","tooltipDelay","userLocale","useUserLocale","formatLocaleLong","en_US","fr_FR","formatLocale","React","setMinutesMounted","callback","current","eachMinute","fn","push","filter","state","call","locale","dateLocale","relativeContent","formatDistanceToNow","Date","parse","replace","tooltipContent","formatDate","content","tooltip","delay","placement","auth","useStores","user","language"],"mappings":"w6CAMA,IAAIA,EAA4B,GAIhCC,aAAY,WACVD,EAAUE,SAAQ,SAACC,GAAD,OAAQA,SACzB,KA+EYC,UA5DqB,SAA9BA,WAA+B,GAQ/B,QAPJC,EAOI,EAPJA,UACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACAC,EACI,EADJA,aAEMC,EAAqBC,eAAmB,GAKxCC,EAAgB,UAJC,CACrBC,MAAO,uBACPC,MAAO,6BAE+BJ,UAAlB,QAAiC,uBACjDK,EAAY,UAAGR,aAAH,EAAGA,EAASG,UAAZ,QAA2BE,EAC7C,iBAA+BI,WAAe,GAA9C,GAAUC,GAAV,WACMC,EAAWF,WAEjBA,aAAgB,WAId,OAHAE,EAASC,QArCb,SAASC,WAAWC,GAGlB,OAFAvB,EAAUwB,KAAKD,GAER,WACLvB,EAAYA,EAAUyB,QAAO,SAACtB,GAAD,OAAQA,IAAOoB,MAiCzBD,EAAW,WAC5BH,GAAkB,SAACO,GAAD,QAAaA,QAE1B,WACiB,MAAlBN,EAASC,UACX,UAAAD,EAASC,eAAT,SAAAM,KAAAP,OAGH,IAEH,IAAMQ,EAASC,YAAWjB,GACtBkB,EAAkBC,YAAoBC,KAAKC,MAAM1B,GAAW,CAC9DF,YACAuB,WAGEpB,IACFsB,EAAkBA,EACfI,QAAQ,QAAS,IACjBA,QAAQ,yBAA0B,YAClCA,QAAQ,SAAU,QAGvB,IAAMC,EAAiBC,YAAWJ,KAAKC,MAAM1B,GAAWO,EAAkB,CACxEc,WAEIS,GACS,IAAb3B,EACIoB,EACAM,YAAWJ,KAAKC,MAAM1B,GAAWU,EAAc,CAC7CW,WAGR,OACE,gBAAC,IAAD,CAASU,QAASH,EAAgBI,MAAO5B,EAAc6B,UAAU,UAC/D,wBAAMjC,SAAUA,GAAWD,GAAY+B,M,kCCtF7C,8DAEe,SAASxB,gBACtB,IAAQ4B,EAASC,cAATD,KAER,GAAKA,EAAKE,MAASF,EAAKE,KAAKC,SAI7B,OAAOH,EAAKE,KAAKC","file":"locale-time.99e696498b8c1eff9386.js","sourcesContent":["import { format as formatDate, formatDistanceToNow } from \"date-fns\";\nimport * as React from \"react\";\nimport Tooltip from \"~/components/Tooltip\";\nimport useUserLocale from \"~/hooks/useUserLocale\";\nimport { dateLocale, locales } from \"~/utils/i18n\";\n\nlet callbacks: (() => void)[] = [];\n\n// This is a shared timer that fires every minute, used for\n// updating all Time components across the page all at once.\nsetInterval(() => {\n  callbacks.forEach((cb) => cb());\n}, 1000 * 60);\n\nfunction eachMinute(fn: () => void) {\n  callbacks.push(fn);\n\n  return () => {\n    callbacks = callbacks.filter((cb) => cb !== fn);\n  };\n}\n\ntype Props = {\n  dateTime: string;\n  tooltipDelay?: number;\n  addSuffix?: boolean;\n  shorten?: boolean;\n  relative?: boolean;\n  format?: Partial<Record<keyof typeof locales, string>>;\n};\n\nconst LocaleTime: React.FC<Props> = ({\n  addSuffix,\n  children,\n  dateTime,\n  shorten,\n  format,\n  relative,\n  tooltipDelay,\n}) => {\n  const userLocale: string = useUserLocale() || \"\";\n  const dateFormatLong = {\n    en_US: \"MMMM do, yyyy h:mm a\",\n    fr_FR: \"'Le 'd MMMM yyyy 'Ã ' H:mm\",\n  };\n  const formatLocaleLong = dateFormatLong[userLocale] ?? \"MMMM do, yyyy h:mm a\";\n  const formatLocale = format?.[userLocale] ?? formatLocaleLong;\n  const [_, setMinutesMounted] = React.useState(0); // eslint-disable-line @typescript-eslint/no-unused-vars\n  const callback = React.useRef<() => void>();\n\n  React.useEffect(() => {\n    callback.current = eachMinute(() => {\n      setMinutesMounted((state) => ++state);\n    });\n    return () => {\n      if (callback.current) {\n        callback.current?.();\n      }\n    };\n  }, []);\n\n  const locale = dateLocale(userLocale);\n  let relativeContent = formatDistanceToNow(Date.parse(dateTime), {\n    addSuffix,\n    locale,\n  });\n\n  if (shorten) {\n    relativeContent = relativeContent\n      .replace(\"about\", \"\")\n      .replace(\"less than a minute ago\", \"just now\")\n      .replace(\"minute\", \"min\");\n  }\n\n  const tooltipContent = formatDate(Date.parse(dateTime), formatLocaleLong, {\n    locale,\n  });\n  const content =\n    relative !== false\n      ? relativeContent\n      : formatDate(Date.parse(dateTime), formatLocale, {\n          locale,\n        });\n\n  return (\n    <Tooltip tooltip={tooltipContent} delay={tooltipDelay} placement=\"bottom\">\n      <time dateTime={dateTime}>{children || content}</time>\n    </Tooltip>\n  );\n};\n\nexport default LocaleTime;\n","import useStores from \"./useStores\";\n\nexport default function useUserLocale() {\n  const { auth } = useStores();\n\n  if (!auth.user || !auth.user.language) {\n    return undefined;\n  }\n\n  return auth.user.language;\n}\n"],"sourceRoot":""}