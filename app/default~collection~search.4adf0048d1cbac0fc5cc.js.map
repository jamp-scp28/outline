{"version":3,"sources":["webpack:///./app/scenes/Search/components/RecentSearches.tsx","webpack:///./app/scenes/Search/components/SearchInput.tsx","webpack:///./app/scenes/Search/components/StatusFilter.tsx","webpack:///./app/scenes/Search/components/UserFilter.tsx","webpack:///./app/scenes/Search/Search.tsx","webpack:///./app/scenes/Search/index.ts"],"names":["Heading","styled","h2","props","theme","textSecondary","List","ol","ListItem","li","textTertiary","RemoveButton","NudeButton","text","RecentSearch","Link","hover","secondaryBackground","observer","RecentSearches","searches","useStores","t","useTranslation","isPreloaded","React","recent","length","fetchPage","content","map","searchQuery","key","id","to","searchPath","query","Tooltip","tooltip","delay","aria-label","onClick","ev","preventDefault","delete","color","Fade","SearchInput","ref","defaultValue","rest","useTheme","focusInput","current","focus","len","setSelectionRange","timeoutId","setTimeout","clearTimeout","Wrapper","align","StyledIcon","size","StyledInput","spellCheck","type","autoFocus","Flex","input","sidebarBackground","backgroundTransition","placeholder","SearchIcon","StatusFilter","includeArchived","onSelect","options","label","note","FilterOptions","activeKey","undefined","defaultLabel","UserFilter","userId","users","limit","userOptions","all","user","name","selectedPrefix","Search","lastQuery","goBack","history","handleKeyDown","updateLocation","currentTarget","value","fetchResults","selectionEnd","selectionStart","shiftKey","compositeRef","querySelectorAll","handleQueryChange","params","URLSearchParams","location","search","offset","allowLoadMore","isLoading","handleTermChange","decodeURIComponentSafe","match","term","handleFilterChange","replace","pathname","queryString","stringify","parse","skipEmptyString","setCompositeRef","setSearchInputRef","searchInputRef","handleEscape","componentDidMount","this","componentDidUpdate","prevProps","get","dateFilter","collectionId","title","render","documents","notFound","results","searchResults","showEmpty","Scene","textTitle","RegisterKeyDown","trigger","handler","LoadingIndicator","Empty","ResultsWrapper","column","auto","onKeyDown","Filters","CollectionFilter","DateFilter","Centered","Text","Trans","ResultList","StyledArrowKeyNavigation","onEscape","compositeProps","result","document","data","DocumentListItem","highlight","context","showCollection","showTemplate","onEnter","loadMoreResults","observable","action","trim","DEFAULT_PAGINATION_LIMIT","includeDrafts","lastParams","add","uuidv4","createdAt","Date","toISOString","Logger","error","breakpoint","ArrowKeyNavigation","withTranslation","withStores","withRouter"],"mappings":"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","file":"default~collection~search.4adf0048d1cbac0fc5cc.js","sourcesContent":["import { observer } from \"mobx-react\";\nimport { CloseIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Fade from \"~/components/Fade\";\nimport NudeButton from \"~/components/NudeButton\";\nimport Tooltip from \"~/components/Tooltip\";\nimport useStores from \"~/hooks/useStores\";\nimport { hover } from \"~/styles\";\nimport { searchPath } from \"~/utils/routeHelpers\";\n\nfunction RecentSearches() {\n  const { searches } = useStores();\n  const { t } = useTranslation();\n  const [isPreloaded] = React.useState(searches.recent.length > 0);\n\n  React.useEffect(() => {\n    searches.fetchPage({});\n  }, [searches]);\n\n  const content = searches.recent.length ? (\n    <>\n      <Heading>{t(\"Recent searches\")}</Heading>\n      <List>\n        {searches.recent.map((searchQuery) => (\n          <ListItem key={searchQuery.id}>\n            <RecentSearch to={searchPath(searchQuery.query)}>\n              {searchQuery.query}\n              <Tooltip tooltip={t(\"Remove search\")} delay={150}>\n                <RemoveButton\n                  aria-label={t(\"Remove search\")}\n                  onClick={(ev) => {\n                    ev.preventDefault();\n                    searchQuery.delete();\n                  }}\n                >\n                  <CloseIcon color=\"currentColor\" />\n                </RemoveButton>\n              </Tooltip>\n            </RecentSearch>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  ) : null;\n\n  return isPreloaded ? content : <Fade>{content}</Fade>;\n}\n\nconst Heading = styled.h2`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  color: ${(props) => props.theme.textSecondary};\n  margin-bottom: 0;\n`;\n\nconst List = styled.ol`\n  padding: 0;\n  margin-top: 8px;\n`;\n\nconst ListItem = styled.li`\n  font-size: 14px;\n  padding: 0;\n  list-style: none;\n  position: relative;\n\n  &:before {\n    content: \"·\";\n    color: ${(props) => props.theme.textTertiary};\n    position: absolute;\n    left: -8px;\n  }\n`;\n\nconst RemoveButton = styled(NudeButton)`\n  opacity: 0;\n  color: ${(props) => props.theme.textTertiary};\n\n  &:hover {\n    color: ${(props) => props.theme.text};\n  }\n`;\n\nconst RecentSearch = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  color: ${(props) => props.theme.textSecondary};\n  padding: 1px 4px;\n  border-radius: 4px;\n\n  &: ${hover} {\n    color: ${(props) => props.theme.text};\n    background: ${(props) => props.theme.secondaryBackground};\n\n    ${RemoveButton} {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default observer(RecentSearches);\n","import { SearchIcon } from \"outline-icons\";\nimport * as React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport Flex from \"~/components/Flex\";\n\ntype Props = React.HTMLAttributes<HTMLInputElement> & {\n  defaultValue?: string;\n  placeholder?: string;\n};\n\nfunction SearchInput(\n  { defaultValue, ...rest }: Props,\n  ref: React.RefObject<HTMLInputElement>\n) {\n  const theme = useTheme();\n  const focusInput = React.useCallback(() => {\n    ref.current?.focus();\n  }, [ref]);\n\n  React.useEffect(() => {\n    // ensure that focus is placed at end of input\n    const len = (defaultValue || \"\").length;\n    ref.current?.setSelectionRange(len, len);\n    const timeoutId = setTimeout(() => {\n      focusInput();\n    }, 100); // arbitrary number\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [ref, defaultValue, focusInput]);\n\n  return (\n    <Wrapper align=\"center\">\n      <StyledIcon size={46} color={theme.textTertiary} onClick={focusInput} />\n      <StyledInput\n        {...rest}\n        defaultValue={defaultValue}\n        ref={ref}\n        spellCheck=\"false\"\n        type=\"search\"\n        autoFocus\n      />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Flex)`\n  position: relative;\n  margin-bottom: 8px;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 10px 10px 10px 60px;\n  font-size: 36px;\n  font-weight: 400;\n  outline: none;\n  border: 0;\n  background: ${(props) => props.theme.sidebarBackground};\n  transition: ${(props) => props.theme.backgroundTransition};\n  border-radius: 4px;\n\n  color: ${(props) => props.theme.text};\n\n  ::-webkit-search-cancel-button {\n    -webkit-appearance: none;\n  }\n  ::-webkit-input-placeholder {\n    color: ${(props) => props.theme.placeholder};\n  }\n  :-moz-placeholder {\n    color: ${(props) => props.theme.placeholder};\n  }\n  ::-moz-placeholder {\n    color: ${(props) => props.theme.placeholder};\n  }\n  :-ms-input-placeholder {\n    color: ${(props) => props.theme.placeholder};\n  }\n`;\n\nconst StyledIcon = styled(SearchIcon)`\n  position: absolute;\n  left: 8px;\n`;\n\nexport default React.forwardRef(SearchInput);\n","import * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport FilterOptions from \"~/components/FilterOptions\";\n\ntype Props = {\n  includeArchived?: boolean;\n  onSelect: (key: boolean) => void;\n};\n\nconst StatusFilter = ({ includeArchived, onSelect }: Props) => {\n  const { t } = useTranslation();\n  const options = React.useMemo(\n    () => [\n      {\n        key: \"\",\n        label: t(\"Active documents\"),\n        note: t(\"Documents in collections you are able to access\"),\n      },\n      {\n        key: \"true\",\n        label: t(\"All documents\"),\n        note: t(\"Include documents that are in the archive\"),\n      },\n    ],\n    [t]\n  );\n\n  return (\n    <FilterOptions\n      options={options}\n      activeKey={includeArchived ? \"true\" : undefined}\n      onSelect={(key) => onSelect(key === \"true\")}\n      defaultLabel={t(\"Active documents\")}\n    />\n  );\n};\n\nexport default StatusFilter;\n","import { observer } from \"mobx-react\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport FilterOptions from \"~/components/FilterOptions\";\nimport useStores from \"~/hooks/useStores\";\n\ntype Props = {\n  userId: string | undefined;\n  onSelect: (key: string | undefined) => void;\n};\n\nfunction UserFilter(props: Props) {\n  const { onSelect, userId } = props;\n  const { t } = useTranslation();\n  const { users } = useStores();\n\n  React.useEffect(() => {\n    users.fetchPage({\n      limit: 100,\n    });\n  }, [users]);\n\n  const options = React.useMemo(() => {\n    const userOptions = users.all.map((user) => ({\n      key: user.id,\n      label: user.name,\n    }));\n    return [\n      {\n        key: \"\",\n        label: t(\"Any author\"),\n      },\n      ...userOptions,\n    ];\n  }, [users.all, t]);\n\n  return (\n    <FilterOptions\n      options={options}\n      activeKey={userId}\n      onSelect={onSelect}\n      defaultLabel={t(\"Any author\")}\n      selectedPrefix={`${t(\"Author\")}:`}\n    />\n  );\n}\n\nexport default observer(UserFilter);\n","import { isEqual } from \"lodash\";\nimport { observable, action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport queryString from \"query-string\";\nimport * as React from \"react\";\nimport { WithTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { RouteComponentProps, StaticContext, withRouter } from \"react-router\";\nimport { Waypoint } from \"react-waypoint\";\nimport styled from \"styled-components\";\nimport breakpoint from \"styled-components-breakpoint\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { DateFilter as TDateFilter } from \"@shared/types\";\nimport { DEFAULT_PAGINATION_LIMIT } from \"~/stores/BaseStore\";\nimport { SearchParams } from \"~/stores/DocumentsStore\";\nimport RootStore from \"~/stores/RootStore\";\nimport ArrowKeyNavigation from \"~/components/ArrowKeyNavigation\";\nimport DocumentListItem from \"~/components/DocumentListItem\";\nimport Empty from \"~/components/Empty\";\nimport Fade from \"~/components/Fade\";\nimport Flex from \"~/components/Flex\";\nimport LoadingIndicator from \"~/components/LoadingIndicator\";\nimport RegisterKeyDown from \"~/components/RegisterKeyDown\";\nimport Scene from \"~/components/Scene\";\nimport Text from \"~/components/Text\";\nimport withStores from \"~/components/withStores\";\nimport Logger from \"~/utils/Logger\";\nimport { searchPath } from \"~/utils/routeHelpers\";\nimport { decodeURIComponentSafe } from \"~/utils/urls\";\nimport CollectionFilter from \"./components/CollectionFilter\";\nimport DateFilter from \"./components/DateFilter\";\nimport RecentSearches from \"./components/RecentSearches\";\nimport SearchInput from \"./components/SearchInput\";\nimport StatusFilter from \"./components/StatusFilter\";\nimport UserFilter from \"./components/UserFilter\";\n\ntype Props = RouteComponentProps<\n  { term: string },\n  StaticContext,\n  { search: string; fromMenu?: boolean }\n> &\n  WithTranslation &\n  RootStore & {\n    notFound?: boolean;\n  };\n\n@observer\nclass Search extends React.Component<Props> {\n  compositeRef: HTMLDivElement | null | undefined;\n  searchInputRef: HTMLInputElement | null | undefined;\n\n  lastQuery = \"\";\n\n  lastParams: SearchParams;\n\n  @observable\n  query: string = decodeURIComponentSafe(this.props.match.params.term || \"\");\n\n  @observable\n  params: URLSearchParams = new URLSearchParams(this.props.location.search);\n\n  @observable\n  offset = 0;\n\n  @observable\n  allowLoadMore = true;\n\n  @observable\n  isLoading = false;\n\n  componentDidMount() {\n    this.handleTermChange();\n\n    if (this.props.location.search) {\n      this.handleQueryChange();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.location.search !== this.props.location.search) {\n      this.handleQueryChange();\n    }\n\n    if (prevProps.match.params.term !== this.props.match.params.term) {\n      this.handleTermChange();\n    }\n  }\n\n  goBack = () => {\n    this.props.history.goBack();\n  };\n\n  handleKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === \"Enter\") {\n      this.updateLocation(ev.currentTarget.value);\n      this.fetchResults();\n      return;\n    }\n\n    if (ev.key === \"Escape\") {\n      ev.preventDefault();\n      return this.goBack();\n    }\n\n    if (ev.key === \"ArrowUp\") {\n      if (ev.currentTarget.value) {\n        const length = ev.currentTarget.value.length;\n        const selectionEnd = ev.currentTarget.selectionEnd || 0;\n        if (selectionEnd === 0) {\n          ev.currentTarget.selectionStart = 0;\n          ev.currentTarget.selectionEnd = length;\n          ev.preventDefault();\n        }\n      }\n    }\n\n    if (ev.key === \"ArrowDown\" && !ev.shiftKey) {\n      ev.preventDefault();\n\n      if (ev.currentTarget.value) {\n        const length = ev.currentTarget.value.length;\n        const selectionStart = ev.currentTarget.selectionStart || 0;\n        if (selectionStart < length) {\n          ev.currentTarget.selectionStart = length;\n          ev.currentTarget.selectionEnd = length;\n          return;\n        }\n      }\n\n      if (this.compositeRef) {\n        const linkItems = this.compositeRef.querySelectorAll(\n          \"[href]\"\n        ) as NodeListOf<HTMLAnchorElement>;\n        linkItems[0]?.focus();\n      }\n    }\n  };\n\n  handleQueryChange = () => {\n    this.params = new URLSearchParams(this.props.location.search);\n    this.offset = 0;\n    this.allowLoadMore = true;\n    // To prevent \"no results\" showing before debounce kicks in\n    this.isLoading = true;\n    this.fetchResults();\n  };\n\n  handleTermChange = () => {\n    const query = decodeURIComponentSafe(this.props.match.params.term || \"\");\n    this.query = query ? query : \"\";\n    this.offset = 0;\n    this.allowLoadMore = true;\n    // To prevent \"no results\" showing before debounce kicks in\n    this.isLoading = true;\n    this.fetchResults();\n  };\n\n  handleFilterChange = (search: {\n    collectionId?: string | undefined;\n    userId?: string | undefined;\n    dateFilter?: TDateFilter;\n    includeArchived?: boolean | undefined;\n  }) => {\n    this.props.history.replace({\n      pathname: this.props.location.pathname,\n      search: queryString.stringify(\n        { ...queryString.parse(this.props.location.search), ...search },\n        {\n          skipEmptyString: true,\n        }\n      ),\n    });\n  };\n\n  get includeArchived() {\n    return this.params.get(\"includeArchived\") === \"true\";\n  }\n\n  get collectionId() {\n    const id = this.params.get(\"collectionId\");\n    return id ? id : undefined;\n  }\n\n  get userId() {\n    const id = this.params.get(\"userId\");\n    return id ? id : undefined;\n  }\n\n  get dateFilter() {\n    const id = this.params.get(\"dateFilter\");\n    return id ? (id as TDateFilter) : undefined;\n  }\n\n  get isFiltered() {\n    return (\n      this.dateFilter ||\n      this.userId ||\n      this.collectionId ||\n      this.includeArchived\n    );\n  }\n\n  get title() {\n    const query = this.query;\n    const title = this.props.t(\"Search\");\n    if (query) {\n      return `${query} – ${title}`;\n    }\n    return title;\n  }\n\n  @action\n  loadMoreResults = async () => {\n    // Don't paginate if there aren't more results or we’re in the middle of fetching\n    if (!this.allowLoadMore || this.isLoading) {\n      return;\n    }\n\n    // Fetch more results\n    await this.fetchResults();\n  };\n\n  @action\n  fetchResults = async () => {\n    if (this.query.trim()) {\n      const params = {\n        offset: this.offset,\n        limit: DEFAULT_PAGINATION_LIMIT,\n        dateFilter: this.dateFilter,\n        includeArchived: this.includeArchived,\n        includeDrafts: true,\n        collectionId: this.collectionId,\n        userId: this.userId,\n      };\n\n      // we just requested this thing – no need to try again\n      if (this.lastQuery === this.query && isEqual(params, this.lastParams)) {\n        this.isLoading = false;\n        return;\n      }\n\n      this.isLoading = true;\n      this.lastQuery = this.query;\n      this.lastParams = params;\n\n      try {\n        const results = await this.props.documents.search(this.query, params);\n\n        // Add to the searches store so this search can immediately appear in\n        // the recent searches list without a flash of load\n        this.props.searches.add({\n          id: uuidv4(),\n          query: this.query,\n          createdAt: new Date().toISOString(),\n        });\n\n        if (results.length === 0 || results.length < DEFAULT_PAGINATION_LIMIT) {\n          this.allowLoadMore = false;\n        } else {\n          this.offset += DEFAULT_PAGINATION_LIMIT;\n        }\n      } catch (error) {\n        Logger.error(\"Search query failed\", error);\n        this.lastQuery = \"\";\n      } finally {\n        this.isLoading = false;\n      }\n    } else {\n      this.isLoading = false;\n      this.lastQuery = this.query;\n    }\n  };\n\n  updateLocation = (query: string) => {\n    this.props.history.replace({\n      pathname: searchPath(query),\n      search: this.props.location.search,\n    });\n  };\n\n  setCompositeRef = (ref: HTMLDivElement | null) => {\n    this.compositeRef = ref;\n  };\n\n  setSearchInputRef = (ref: HTMLInputElement | null) => {\n    this.searchInputRef = ref;\n  };\n\n  handleEscape = () => {\n    this.searchInputRef?.focus();\n  };\n\n  render() {\n    const { documents, notFound, t } = this.props;\n    const results = documents.searchResults(this.query);\n    const showEmpty = !this.isLoading && this.query && results?.length === 0;\n\n    return (\n      <Scene textTitle={this.title}>\n        <RegisterKeyDown trigger=\"Escape\" handler={this.goBack} />\n        {this.isLoading && <LoadingIndicator />}\n        {notFound && (\n          <div>\n            <h1>{t(\"Not Found\")}</h1>\n            <Empty>\n              {t(\"We were unable to find the page you’re looking for.\")}\n            </Empty>\n          </div>\n        )}\n        <ResultsWrapper column auto>\n          <SearchInput\n            ref={this.setSearchInputRef}\n            placeholder={`${t(\"Search\")}…`}\n            onKeyDown={this.handleKeyDown}\n            defaultValue={this.query}\n          />\n\n          {this.query ? (\n            <Filters>\n              <StatusFilter\n                includeArchived={this.includeArchived}\n                onSelect={(includeArchived) =>\n                  this.handleFilterChange({\n                    includeArchived,\n                  })\n                }\n              />\n              <CollectionFilter\n                collectionId={this.collectionId}\n                onSelect={(collectionId) =>\n                  this.handleFilterChange({\n                    collectionId,\n                  })\n                }\n              />\n              <UserFilter\n                userId={this.userId}\n                onSelect={(userId) =>\n                  this.handleFilterChange({\n                    userId,\n                  })\n                }\n              />\n              <DateFilter\n                dateFilter={this.dateFilter}\n                onSelect={(dateFilter) =>\n                  this.handleFilterChange({\n                    dateFilter,\n                  })\n                }\n              />\n            </Filters>\n          ) : (\n            <RecentSearches />\n          )}\n          {showEmpty && (\n            <Fade>\n              <Centered column>\n                <Text type=\"secondary\">\n                  <Trans>No documents found for your search filters.</Trans>\n                </Text>\n              </Centered>\n            </Fade>\n          )}\n          <ResultList column>\n            <StyledArrowKeyNavigation\n              ref={this.setCompositeRef}\n              onEscape={this.handleEscape}\n              aria-label={t(\"Search Results\")}\n            >\n              {(compositeProps) =>\n                results?.map((result) => {\n                  const document = documents.data.get(result.document.id);\n                  if (!document) {\n                    return null;\n                  }\n                  return (\n                    <DocumentListItem\n                      key={document.id}\n                      document={document}\n                      highlight={this.query}\n                      context={result.context}\n                      showCollection\n                      showTemplate\n                      {...compositeProps}\n                    />\n                  );\n                })\n              }\n            </StyledArrowKeyNavigation>\n            {this.allowLoadMore && (\n              <Waypoint key={this.offset} onEnter={this.loadMoreResults} />\n            )}\n          </ResultList>\n        </ResultsWrapper>\n      </Scene>\n    );\n  }\n}\n\nconst Centered = styled(Flex)`\n  text-align: center;\n  margin: 30vh auto 0;\n  max-width: 380px;\n  transform: translateY(-50%);\n`;\n\nconst ResultsWrapper = styled(Flex)`\n  ${breakpoint(\"tablet\")`\n    margin-top: 40px;\n  `};\n`;\n\nconst ResultList = styled(Flex)`\n  margin-bottom: 150px;\n`;\n\nconst StyledArrowKeyNavigation = styled(ArrowKeyNavigation)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Filters = styled(Flex)`\n  margin-bottom: 12px;\n  opacity: 0.85;\n  transition: opacity 100ms ease-in-out;\n  overflow-y: hidden;\n  overflow-x: auto;\n  padding: 8px 0;\n\n  ${breakpoint(\"tablet\")`\n    padding: 0;\n  `};\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport default withTranslation()(withStores(withRouter(Search)));\n","import Search from \"./Search\";\n\nexport default Search;\n"],"sourceRoot":""}