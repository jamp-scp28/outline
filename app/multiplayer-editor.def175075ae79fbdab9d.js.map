{"version":3,"sources":["webpack:///./app/hooks/useIdle.ts","webpack:///./app/multiplayer/MultiplayerExtension.ts","webpack:///./app/scenes/Document/components/MultiplayerEditor.tsx","webpack:///./app/hooks/useCurrentToken.ts","webpack:///./app/hooks/usePageVisibility.ts","webpack:///./app/hooks/useIsMounted.ts"],"names":["activityEvents","MultiplayerExtension","get","this","options","user","provider","doc","document","type","Y","on","setAwarenessField","assignUser","tr","clientIds","Array","from","store","clients","keys","local","changed","size","includes","clientID","setUserMapping","id","off","ySyncPlugin","yCursorPlugin","awareness","yUndoPlugin","keymap","undo","redo","Extension","MultiplayerEditor","ref","onSynced","props","documentId","history","useHistory","t","useTranslation","currentUser","useCurrentUser","useStores","presence","ui","token","useCurrentToken","auth","invariant","React","showCursorNames","setShowCursorNames","remoteProvider","setRemoteProvider","isLocalSynced","setLocalSynced","isRemoteSynced","setRemoteSynced","ydoc","showToast","useToasts","isIdle","useIdle","timeToIdle","setIsIdle","timeout","onActivity","current","clearTimeout","setTimeout","handleUserActivityEvent","forEach","eventName","window","addEventListener","removeEventListener","isVisible","usePageVisibility","visible","setVisible","useEventListener","hidden","isMounted","useIsMounted","debug","env","ENVIRONMENT","name","localProvider","IndexeddbPersistence","HocuspocusProvider","url","COLLABORATION_URL","syncScrollPosition","scrollY","innerHeight","finishObserving","observingUserId","setObservingUser","undefined","supportsPassiveListener","passive","replace","homePath","states","cursor","touch","scrollTo","top","behavior","_start","ev","Logger","message","setMultiplayerStatus","status","destroy","color","extensions","WebSocketStatus","Connected","disconnect","Disconnected","connect","onUnhandledError","event","showCache","Editor","defaultValue","readOnly","value","style","display","className"],"mappings":"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","file":"multiplayer-editor.def175075ae79fbdab9d.js","sourcesContent":["import * as React from \"react\";\n\nconst activityEvents = [\n  \"click\",\n  \"mousemove\",\n  \"keydown\",\n  \"DOMMouseScroll\",\n  \"mousewheel\",\n  \"mousedown\",\n  \"touchstart\",\n  \"touchmove\",\n  \"focus\",\n];\n\n/**\n * Hook to detect user idle state.\n *\n * @param {number} timeToIdle\n * @returns boolean if the user is idle\n */\nexport default function useIdle(timeToIdle: number = 3 * 60 * 1000) {\n  const [isIdle, setIsIdle] = React.useState(false);\n  const timeout = React.useRef<ReturnType<typeof setTimeout>>();\n\n  const onActivity = React.useCallback(() => {\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n\n    timeout.current = setTimeout(() => {\n      setIsIdle(true);\n    }, timeToIdle);\n  }, [timeToIdle]);\n\n  React.useEffect(() => {\n    const handleUserActivityEvent = () => {\n      setIsIdle(false);\n      onActivity();\n    };\n\n    activityEvents.forEach((eventName) =>\n      window.addEventListener(eventName, handleUserActivityEvent)\n    );\n    return () => {\n      activityEvents.forEach((eventName) =>\n        window.removeEventListener(eventName, handleUserActivityEvent)\n      );\n    };\n  }, [onActivity]);\n\n  return isIdle;\n}\n","import {\n  ySyncPlugin,\n  yCursorPlugin,\n  yUndoPlugin,\n  undo,\n  redo,\n} from \"@getoutline/y-prosemirror\";\nimport { keymap } from \"prosemirror-keymap\";\nimport * as Y from \"yjs\";\nimport { Extension } from \"~/editor\";\n\nexport default class MultiplayerExtension extends Extension {\n  get name() {\n    return \"multiplayer\";\n  }\n\n  get plugins() {\n    const { user, provider, document: doc } = this.options;\n    const type = doc.get(\"default\", Y.XmlFragment);\n\n    const assignUser = (tr: Y.Transaction) => {\n      const clientIds = Array.from(doc.store.clients.keys());\n\n      if (\n        tr.local &&\n        tr.changed.size > 0 &&\n        !clientIds.includes(doc.clientID)\n      ) {\n        const permanentUserData = new Y.PermanentUserData(doc);\n        permanentUserData.setUserMapping(doc, doc.clientID, user.id);\n        doc.off(\"afterTransaction\", assignUser);\n      }\n    };\n\n    // only once we have authenticated successfully do we initalize awareness.\n    // we could send this earlier, but getting authenticated faster is more important\n    provider.on(\"authenticated\", () => {\n      provider.setAwarenessField(\"user\", user);\n    });\n\n    // only once an actual change has been made do we add the userId <> clientId\n    // mapping, this avoids stored mappings for clients that never made a change\n    doc.on(\"afterTransaction\", assignUser);\n\n    return [\n      ySyncPlugin(type),\n      yCursorPlugin(provider.awareness),\n      yUndoPlugin(),\n      keymap({\n        \"Mod-z\": undo,\n        \"Mod-y\": redo,\n        \"Mod-Shift-z\": redo,\n      }),\n    ];\n  }\n}\n","import { HocuspocusProvider, WebSocketStatus } from \"@hocuspocus/provider\";\nimport { throttle } from \"lodash\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport { IndexeddbPersistence } from \"y-indexeddb\";\nimport * as Y from \"yjs\";\nimport Editor, { Props as EditorProps } from \"~/components/Editor\";\nimport env from \"~/env\";\nimport useCurrentToken from \"~/hooks/useCurrentToken\";\nimport useCurrentUser from \"~/hooks/useCurrentUser\";\nimport useIdle from \"~/hooks/useIdle\";\nimport useIsMounted from \"~/hooks/useIsMounted\";\nimport usePageVisibility from \"~/hooks/usePageVisibility\";\nimport useStores from \"~/hooks/useStores\";\nimport useToasts from \"~/hooks/useToasts\";\nimport MultiplayerExtension from \"~/multiplayer/MultiplayerExtension\";\nimport Logger from \"~/utils/Logger\";\nimport { supportsPassiveListener } from \"~/utils/browser\";\nimport { homePath } from \"~/utils/routeHelpers\";\n\ntype Props = EditorProps & {\n  id: string;\n  onSynced?: () => Promise<void>;\n};\n\nexport type ConnectionStatus =\n  | \"connecting\"\n  | \"connected\"\n  | \"disconnected\"\n  | void;\n\ntype AwarenessChangeEvent = {\n  states: { user: { id: string }; cursor: any; scrollY: number | undefined }[];\n};\n\ntype ConnectionStatusEvent = { status: ConnectionStatus };\n\ntype MessageEvent = { message: string };\n\nfunction MultiplayerEditor({ onSynced, ...props }: Props, ref: any) {\n  const documentId = props.id;\n  const history = useHistory();\n  const { t } = useTranslation();\n  const currentUser = useCurrentUser();\n  const { presence, ui } = useStores();\n  const token = useCurrentToken();\n  const [showCursorNames, setShowCursorNames] = React.useState(false);\n  const [\n    remoteProvider,\n    setRemoteProvider,\n  ] = React.useState<HocuspocusProvider | null>(null);\n  const [isLocalSynced, setLocalSynced] = React.useState(false);\n  const [isRemoteSynced, setRemoteSynced] = React.useState(false);\n  const [ydoc] = React.useState(() => new Y.Doc());\n  const { showToast } = useToasts();\n  const isIdle = useIdle();\n  const isVisible = usePageVisibility();\n  const isMounted = useIsMounted();\n\n  // Provider initialization must be within useLayoutEffect rather than useState\n  // or useMemo as both of these are ran twice in React StrictMode resulting in\n  // an orphaned websocket connection.\n  // see: https://github.com/facebook/react/issues/20090#issuecomment-715926549\n  React.useLayoutEffect(() => {\n    const debug = env.ENVIRONMENT === \"development\";\n    const name = `document.${documentId}`;\n    const localProvider = new IndexeddbPersistence(name, ydoc);\n    const provider = new HocuspocusProvider({\n      url: `${env.COLLABORATION_URL}/collaboration`,\n      name,\n      document: ydoc,\n      token,\n    });\n\n    const syncScrollPosition = throttle(() => {\n      provider.setAwarenessField(\n        \"scrollY\",\n        window.scrollY / window.innerHeight\n      );\n    }, 250);\n\n    const finishObserving = () => {\n      if (ui.observingUserId) {\n        ui.setObservingUser(undefined);\n      }\n    };\n\n    window.addEventListener(\"click\", finishObserving);\n    window.addEventListener(\"wheel\", finishObserving);\n    window.addEventListener(\n      \"scroll\",\n      syncScrollPosition,\n      supportsPassiveListener ? { passive: true } : false\n    );\n\n    provider.on(\"authenticationFailed\", () => {\n      showToast(\n        t(\n          \"Sorry, it looks like you don’t have permission to access the document\"\n        )\n      );\n      history.replace(homePath());\n    });\n\n    provider.on(\"awarenessChange\", ({ states }: AwarenessChangeEvent) => {\n      states.forEach(({ user, cursor, scrollY }) => {\n        if (user) {\n          presence.touch(documentId, user.id, !!cursor);\n\n          if (scrollY !== undefined && user.id === ui.observingUserId) {\n            window.scrollTo({\n              top: scrollY * window.innerHeight,\n              behavior: \"smooth\",\n            });\n          }\n        }\n      });\n    });\n\n    const showCursorNames = () => {\n      setShowCursorNames(true);\n      setTimeout(() => {\n        if (isMounted()) {\n          setShowCursorNames(false);\n        }\n      }, 2000);\n      provider.off(\"awarenessChange\", showCursorNames);\n    };\n\n    provider.on(\"awarenessChange\", showCursorNames);\n    localProvider.on(\"synced\", () =>\n      // only set local storage to \"synced\" if it's loaded a non-empty doc\n      setLocalSynced(!!ydoc.get(\"default\")._start)\n    );\n    provider.on(\"synced\", () => {\n      presence.touch(documentId, currentUser.id, false);\n      setRemoteSynced(true);\n    });\n\n    if (debug) {\n      provider.on(\"message\", (ev: MessageEvent) =>\n        Logger.debug(\"collaboration\", \"incoming\", {\n          message: ev.message,\n        })\n      );\n      provider.on(\"outgoingMessage\", (ev: MessageEvent) =>\n        Logger.debug(\"collaboration\", \"outgoing\", {\n          message: ev.message,\n        })\n      );\n      localProvider.on(\"synced\", () =>\n        Logger.debug(\"collaboration\", \"local synced\")\n      );\n    }\n\n    provider.on(\"status\", (ev: ConnectionStatusEvent) =>\n      ui.setMultiplayerStatus(ev.status)\n    );\n\n    setRemoteProvider(provider);\n\n    return () => {\n      window.removeEventListener(\"click\", finishObserving);\n      window.removeEventListener(\"wheel\", finishObserving);\n      window.removeEventListener(\"scroll\", syncScrollPosition);\n      provider?.destroy();\n      localProvider?.destroy();\n      setRemoteProvider(null);\n      ui.setMultiplayerStatus(undefined);\n    };\n  }, [\n    history,\n    showToast,\n    t,\n    documentId,\n    ui,\n    presence,\n    token,\n    ydoc,\n    currentUser.id,\n    isMounted,\n  ]);\n\n  const user = React.useMemo(() => {\n    return {\n      id: currentUser.id,\n      name: currentUser.name,\n      color: currentUser.color,\n    };\n  }, [currentUser.id, currentUser.color, currentUser.name]);\n\n  const extensions = React.useMemo(() => {\n    if (!remoteProvider) {\n      return props.extensions;\n    }\n\n    return [\n      ...(props.extensions || []),\n      new MultiplayerExtension({\n        user,\n        provider: remoteProvider,\n        document: ydoc,\n      }),\n    ];\n  }, [remoteProvider, user, ydoc, props.extensions]);\n\n  React.useEffect(() => {\n    if (isLocalSynced && isRemoteSynced) {\n      onSynced?.();\n    }\n  }, [onSynced, isLocalSynced, isRemoteSynced]);\n\n  // Disconnect the realtime connection while idle. `isIdle` also checks for\n  // page visibility and will immediately disconnect when a tab is hidden.\n  React.useEffect(() => {\n    if (!remoteProvider) {\n      return;\n    }\n\n    if (\n      isIdle &&\n      !isVisible &&\n      remoteProvider.status === WebSocketStatus.Connected\n    ) {\n      remoteProvider.disconnect();\n    }\n\n    if (\n      (!isIdle || isVisible) &&\n      remoteProvider.status === WebSocketStatus.Disconnected\n    ) {\n      remoteProvider.connect();\n    }\n  }, [remoteProvider, isIdle, isVisible]);\n\n  // Certain emoji combinations trigger this error in YJS, while waiting for a fix\n  // we must prevent the user from continuing to edit as their changes will not\n  // be persisted. See: https://github.com/yjs/yjs/issues/303\n  React.useEffect(() => {\n    function onUnhandledError(event: ErrorEvent) {\n      if (event.message.includes(\"URIError: URI malformed\")) {\n        showToast(\n          t(\n            \"Sorry, the last change could not be persisted – please reload the page\"\n          ),\n          {\n            type: \"error\",\n            timeout: 0,\n          }\n        );\n      }\n    }\n\n    window.addEventListener(\"error\", onUnhandledError);\n    return () => window.removeEventListener(\"error\", onUnhandledError);\n  }, [showToast, t]);\n\n  if (!remoteProvider) {\n    return null;\n  }\n\n  // while the collaborative document is loading, we render a version of the\n  // document from the last text cache in read-only mode if we have it.\n  const showCache = !isLocalSynced && !isRemoteSynced;\n\n  return (\n    <>\n      {showCache && (\n        <Editor\n          defaultValue={props.defaultValue}\n          extensions={props.extensions}\n          readOnly\n          ref={ref}\n        />\n      )}\n      <Editor\n        {...props}\n        value={undefined}\n        defaultValue={undefined}\n        extensions={extensions}\n        ref={showCache ? undefined : ref}\n        style={\n          showCache\n            ? {\n                display: \"none\",\n              }\n            : undefined\n        }\n        className={showCursorNames ? \"show-cursor-names\" : undefined}\n      />\n    </>\n  );\n}\n\nexport default React.forwardRef<typeof MultiplayerEditor, Props>(\n  MultiplayerEditor\n);\n","import invariant from \"invariant\";\nimport useStores from \"./useStores\";\n\nexport default function useCurrentToken() {\n  const { auth } = useStores();\n  invariant(auth.token, \"token is required\");\n  return auth.token;\n}\n","import * as React from \"react\";\nimport useEventListener from \"./useEventListener\";\n\n/**\n * Hook to return page visibility state.\n *\n * @returns boolean if the page is visible\n */\nexport default function usePageVisibility(): boolean {\n  const [visible, setVisible] = React.useState(true);\n\n  useEventListener(\n    \"visibilitychange\",\n    () => setVisible(!document.hidden),\n    document\n  );\n\n  return visible;\n}\n","import * as React from \"react\";\n\n/**\n * Hook to check if component is still mounted\n *\n * @returns {boolean} true if the component is mounted, false otherwise\n */\nexport default function useIsMounted() {\n  const isMounted = React.useRef(false);\n\n  React.useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return React.useCallback(() => isMounted.current, []);\n}\n"],"sourceRoot":""}