{"version":3,"sources":["webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/prosemirror-dropcursor/dist/index.es.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/prosemirror-markdown/dist/index.es.js","webpack:///./node_modules/lodash/some.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/lodash/_baseSome.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js"],"names":["assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isObject","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","resetScanCache","__index__","__text_cache__","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","isOptionsObj","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","isSpace","hr","state","startLine","endLine","silent","marker","cnt","ch","token","bMarks","tShift","max","eMarks","sCount","blkIndent","src","charCodeAt","line","markup","String","fromCharCode","castSlice","hasUnicode","stringToArray","createCaseFirst","methodName","string","strSymbols","undefined","chr","charAt","trailing","Any","Cc","Cf","P","Z","normalizeReference","reference","_endLine","destEndPos","destEndLineNo","href","i","l","label","labelEnd","oldParentType","res","terminate","terminatorRules","title","lines","nextLine","lineMax","md","block","ruler","getRules","parentType","isEmpty","getLines","trim","helpers","parseLinkDestination","ok","normalizeLink","validateLink","parseLinkTitle","env","references","encode","decode","format","parse","Url","protocol","slashes","auth","port","hostname","hash","pathname","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","validParts","notHost","bit","unshift","qm","urlParse","u","parseLinkLabel","disableNested","level","found","prevPos","posMax","oldPos","inline","skipToken","unescapeAll","code","blockquote","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","tokenize","upperFirst","capitalize","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","escaped","entity","replaceEntityPattern","parseInt","escapeHtml","arrayReplaceAt","newElements","isWhiteSpace","isMdAsciiPunct","isPunctChar","toUpperCase","heading","tmp","skipSpacesBack","skipCharsBack","content","children","utils","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","toASCII","er","normalizeLinkText","toUnicode","defaultChars","MarkdownIt","presetName","core","renderer","linkify","configure","presets","components","rules","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","State","process","tokens","render","parseInline","inlineMode","renderInline","Token","StateInline","outTokens","tokens_meta","pending","pendingLevel","cache","delimiters","_prev_delimiters","backticks","backticksScanned","pushPending","type","tag","nesting","token_meta","pop","scanDelims","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","root","nodeType","freeGlobal","global","window","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","error","RangeError","array","fn","mapDomain","parts","ucs2decode","value","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","input","out","basic","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","splice","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","lheading","skipChars","skipSpaces","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","dropCursor","view","editorView","DropCursorView","this$1","width","color","class","cursorPos","element","timeout","handlers","handler","e","dom","addEventListener","destroy","ref","removeEventListener","update","prevState","doc","size","setCursor","updateOverlay","parentNode","removeChild","rect","$pos","resolve","parent","inlineContent","before","nodeBefore","after","nodeAfter","nodeRect","nodeDOM","nodeSize","getBoundingClientRect","top","bottom","left","right","coords","coordsAtPos","parentLeft","parentTop","offsetParent","appendChild","document","createElement","className","style","cssText","body","getComputedStyle","position","pageXOffset","pageYOffset","rect$1","scrollLeft","scrollTop","height","scheduleRemoval","clearTimeout","setTimeout","dragover","event","editable","posAtCoords","clientX","clientY","node","inside","nodeAt","disableDropCursor","spec","disabled","target","dragging","dragend","drop","dragleave","contains","relatedTarget","text_collapse","curr","last","EMAIL_RE","AUTOLINK_RE","autolink","fullUrl","attrs","info","nodes","paragraph","group","parseDOM","toDOM","horizontal_rule","defining","code_block","marks","params","preserveWhitespace","getAttrs","getAttribute","ordered_list","order","tight","hasAttribute","bullet_list","list_item","image","alt","draggable","hard_break","selectable","em","strong","inclusive","MarkdownParseState","tokenHandlers","stack","topNodeType","none","Function","noCloseToken","withoutTrailingNewline","noOp","elt","addText","merged","maybeMerge","a","b","isText","sameSet","withText","openMark","mark","addToSet","closeMark","removeFromSet","parseTokens","toks","tok","addNode","createAndFill","openNode","closeNode","MarkdownParser","tokenizer","create","loop","nodeType$1","markType","ignore","JSON","stringify","softbreak","listIsTight","hidden","_","attrGet","fence","hardbreak","code_inline","MarkdownSerializer","serialize","MarkdownSerializerState","renderContent","wrapBlock","write","textContent","ensureNewLine","closeBlock","repeat","renderList","bullet","maxW","childCount","space","nStr","esc","child","open","close","mixable","expelEnclosingWhitespace","_state","isPlainURL","_mark","backticksFor","escape","side","ticks","isInSet","delim","closed","inTightList","tightLists","flushClose","atBlank","delimMin","firstDelim","f","old","text$1","startOfLine","active","progress","leading","some","lead","inner$1","trail","inner","noEsc","outer","other","eq","keep","min","markString","isTight","prevTight","quote","wrap","getEnclosingWhitespace","arraySome","baseIteratee","baseSome","isIterateeCall","collection","predicate","guard","func","baseEach","newline","pmax","ws","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","at","opt","beforeName","ruleName","afterName","chainName","backtick","matchStart","matchEnd","openerLength","closerLength","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","markTightParagraphs","NEWLINES_RE","NULL_RE","_rules","_rules2","postProcess","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","html_block","lineText","ESCAPED","StateCore","hasEmptyLines","skipEmptyLines","default_rules","slf","renderAttrs","highlighted","tmpAttrs","tmpToken","langName","langAttrs","attrIndex","renderInlineAsText","renderToken","html_inline","nextToken","needLf","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","link_pairs","getLine","escapedSplit","isEscaped","lastPos","current","substring","table","columns","columnCount","aligns","tableLines","tbodyLines","firstCh","secondCh","decodeCache","exclude","getDecodeCache","seq","b1","b2","b3","b4","componentChars","startDelim","endDelim","loneMarkers","strikethrough","scanned","labelStart","isLinkClose","currentToken","ln","htmlLinkLevel","urlText","links","blockTokens","Core","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","openQuote","closeQuote","OUTER","single","smartquotes","blkIdx","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","isTerminatorChar","mem","haveEndMarker","isLetter","lc","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","isStrong","emphasis","parseReference"],"mappings":"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","file":"vendors~multiplayer-editor~shared-editor.1b17737d9178221c3d79.js","sourcesContent":["'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","import { Plugin } from 'prosemirror-state';\nimport { dropPoint } from 'prosemirror-transform';\n\n// :: (options: ?Object) → Plugin\n// Create a plugin that, when added to a ProseMirror instance,\n// causes a decoration to show up at the drop position when something\n// is dragged over the editor.\n//\n// Nodes may add a `disableDropCursor` property to their spec to\n// control the showing of a drop cursor inside them. This may be a\n// boolean or a function, which will be called with a view and a\n// position, and should return a boolean.\n//\n//   options::- These options are supported:\n//\n//     color:: ?string\n//     The color of the cursor. Defaults to `black`.\n//\n//     width:: ?number\n//     The precise width of the cursor in pixels. Defaults to 1.\n//\n//     class:: ?string\n//     A CSS class name to add to the cursor element.\nfunction dropCursor(options) {\n  if ( options === void 0 ) options = {};\n\n  return new Plugin({\n    view: function view(editorView) { return new DropCursorView(editorView, options) }\n  })\n}\n\nvar DropCursorView = function DropCursorView(editorView, options) {\n  var this$1 = this;\n\n  this.editorView = editorView;\n  this.width = options.width || 1;\n  this.color = options.color || \"black\";\n  this.class = options.class;\n  this.cursorPos = null;\n  this.element = null;\n  this.timeout = null;\n\n  this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(function (name) {\n    var handler = function (e) { return this$1[name](e); };\n    editorView.dom.addEventListener(name, handler);\n    return {name: name, handler: handler}\n  });\n};\n\nDropCursorView.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  this.handlers.forEach(function (ref) {\n      var name = ref.name;\n      var handler = ref.handler;\n\n      return this$1.editorView.dom.removeEventListener(name, handler);\n    });\n};\n\nDropCursorView.prototype.update = function update (editorView, prevState) {\n  if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n    if (this.cursorPos > editorView.state.doc.content.size) { this.setCursor(null); }\n    else { this.updateOverlay(); }\n  }\n};\n\nDropCursorView.prototype.setCursor = function setCursor (pos) {\n  if (pos == this.cursorPos) { return }\n  this.cursorPos = pos;\n  if (pos == null) {\n    this.element.parentNode.removeChild(this.element);\n    this.element = null;\n  } else {\n    this.updateOverlay();\n  }\n};\n\nDropCursorView.prototype.updateOverlay = function updateOverlay () {\n  var $pos = this.editorView.state.doc.resolve(this.cursorPos), rect;\n  if (!$pos.parent.inlineContent) {\n    var before = $pos.nodeBefore, after = $pos.nodeAfter;\n    if (before || after) {\n      var nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ?before.nodeSize : 0)).getBoundingClientRect();\n      var top = before ? nodeRect.bottom : nodeRect.top;\n      if (before && after)\n        { top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2; }\n      rect = {left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2};\n    }\n  }\n  if (!rect) {\n    var coords = this.editorView.coordsAtPos(this.cursorPos);\n    rect = {left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom};\n  }\n\n  var parent = this.editorView.dom.offsetParent;\n  if (!this.element) {\n    this.element = parent.appendChild(document.createElement(\"div\"));\n    if (this.class) { this.element.className = this.class; }\n    this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color;\n  }\n  var parentLeft, parentTop;\n  if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n    parentLeft = -pageXOffset;\n    parentTop = -pageYOffset;\n  } else {\n    var rect$1 = parent.getBoundingClientRect();\n    parentLeft = rect$1.left - parent.scrollLeft;\n    parentTop = rect$1.top - parent.scrollTop;\n  }\n  this.element.style.left = (rect.left - parentLeft) + \"px\";\n  this.element.style.top = (rect.top - parentTop) + \"px\";\n  this.element.style.width = (rect.right - rect.left) + \"px\";\n  this.element.style.height = (rect.bottom - rect.top) + \"px\";\n};\n\nDropCursorView.prototype.scheduleRemoval = function scheduleRemoval (timeout) {\n    var this$1 = this;\n\n  clearTimeout(this.timeout);\n  this.timeout = setTimeout(function () { return this$1.setCursor(null); }, timeout);\n};\n\nDropCursorView.prototype.dragover = function dragover (event) {\n  if (!this.editorView.editable) { return }\n  var pos = this.editorView.posAtCoords({left: event.clientX, top: event.clientY});\n\n  var node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside);\n  var disableDropCursor = node && node.type.spec.disableDropCursor;\n  var disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos) : disableDropCursor;\n\n  if (pos && !disabled) {\n    var target = pos.pos;\n    if (this.editorView.dragging && this.editorView.dragging.slice) {\n      target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice);\n      if (target == null) { return this.setCursor(null) }\n    }\n    this.setCursor(target);\n    this.scheduleRemoval(5000);\n  }\n};\n\nDropCursorView.prototype.dragend = function dragend () {\n  this.scheduleRemoval(20);\n};\n\nDropCursorView.prototype.drop = function drop () {\n  this.scheduleRemoval(20);\n};\n\nDropCursorView.prototype.dragleave = function dragleave (event) {\n  if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n    { this.setCursor(null); }\n};\n\nexport { dropCursor };\n//# sourceMappingURL=index.es.js.map\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","import { Schema, Mark } from 'prosemirror-model';\nimport markdownit from 'markdown-it';\n\n// ::Schema Document schema for the data model used by CommonMark.\nvar schema = new Schema({\n  nodes: {\n    doc: {\n      content: \"block+\"\n    },\n\n    paragraph: {\n      content: \"inline*\",\n      group: \"block\",\n      parseDOM: [{tag: \"p\"}],\n      toDOM: function toDOM() { return [\"p\", 0] }\n    },\n\n    blockquote: {\n      content: \"block+\",\n      group: \"block\",\n      parseDOM: [{tag: \"blockquote\"}],\n      toDOM: function toDOM() { return [\"blockquote\", 0] }\n    },\n\n    horizontal_rule: {\n      group: \"block\",\n      parseDOM: [{tag: \"hr\"}],\n      toDOM: function toDOM() { return [\"div\", [\"hr\"]] }\n    },\n\n    heading: {\n      attrs: {level: {default: 1}},\n      content: \"(text | image)*\",\n      group: \"block\",\n      defining: true,\n      parseDOM: [{tag: \"h1\", attrs: {level: 1}},\n                 {tag: \"h2\", attrs: {level: 2}},\n                 {tag: \"h3\", attrs: {level: 3}},\n                 {tag: \"h4\", attrs: {level: 4}},\n                 {tag: \"h5\", attrs: {level: 5}},\n                 {tag: \"h6\", attrs: {level: 6}}],\n      toDOM: function toDOM(node) { return [\"h\" + node.attrs.level, 0] }\n    },\n\n    code_block: {\n      content: \"text*\",\n      group: \"block\",\n      code: true,\n      defining: true,\n      marks: \"\",\n      attrs: {params: {default: \"\"}},\n      parseDOM: [{tag: \"pre\", preserveWhitespace: \"full\", getAttrs: function (node) { return (\n        {params: node.getAttribute(\"data-params\") || \"\"}\n      ); }}],\n      toDOM: function toDOM(node) { return [\"pre\", node.attrs.params ? {\"data-params\": node.attrs.params} : {}, [\"code\", 0]] }\n    },\n\n    ordered_list: {\n      content: \"list_item+\",\n      group: \"block\",\n      attrs: {order: {default: 1}, tight: {default: false}},\n      parseDOM: [{tag: \"ol\", getAttrs: function getAttrs(dom) {\n        return {order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1,\n                tight: dom.hasAttribute(\"data-tight\")}\n      }}],\n      toDOM: function toDOM(node) {\n        return [\"ol\", {start: node.attrs.order == 1 ? null : node.attrs.order,\n                       \"data-tight\": node.attrs.tight ? \"true\" : null}, 0]\n      }\n    },\n\n    bullet_list: {\n      content: \"list_item+\",\n      group: \"block\",\n      attrs: {tight: {default: false}},\n      parseDOM: [{tag: \"ul\", getAttrs: function (dom) { return ({tight: dom.hasAttribute(\"data-tight\")}); }}],\n      toDOM: function toDOM(node) { return [\"ul\", {\"data-tight\": node.attrs.tight ? \"true\" : null}, 0] }\n    },\n\n    list_item: {\n      content: \"paragraph block*\",\n      defining: true,\n      parseDOM: [{tag: \"li\"}],\n      toDOM: function toDOM() { return [\"li\", 0] }\n    },\n\n    text: {\n      group: \"inline\"\n    },\n\n    image: {\n      inline: true,\n      attrs: {\n        src: {},\n        alt: {default: null},\n        title: {default: null}\n      },\n      group: \"inline\",\n      draggable: true,\n      parseDOM: [{tag: \"img[src]\", getAttrs: function getAttrs(dom) {\n        return {\n          src: dom.getAttribute(\"src\"),\n          title: dom.getAttribute(\"title\"),\n          alt: dom.getAttribute(\"alt\")\n        }\n      }}],\n      toDOM: function toDOM(node) { return [\"img\", node.attrs] }\n    },\n\n    hard_break: {\n      inline: true,\n      group: \"inline\",\n      selectable: false,\n      parseDOM: [{tag: \"br\"}],\n      toDOM: function toDOM() { return [\"br\"] }\n    }\n  },\n\n  marks: {\n    em: {\n      parseDOM: [{tag: \"i\"}, {tag: \"em\"},\n                 {style: \"font-style\", getAttrs: function (value) { return value == \"italic\" && null; }}],\n      toDOM: function toDOM() { return [\"em\"] }\n    },\n\n    strong: {\n      parseDOM: [{tag: \"b\"}, {tag: \"strong\"},\n                 {style: \"font-weight\", getAttrs: function (value) { return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null; }}],\n      toDOM: function toDOM() { return [\"strong\"] }\n    },\n\n    link: {\n      attrs: {\n        href: {},\n        title: {default: null}\n      },\n      inclusive: false,\n      parseDOM: [{tag: \"a[href]\", getAttrs: function getAttrs(dom) {\n        return {href: dom.getAttribute(\"href\"), title: dom.getAttribute(\"title\")}\n      }}],\n      toDOM: function toDOM(node) { return [\"a\", node.attrs] }\n    },\n\n    code: {\n      parseDOM: [{tag: \"code\"}],\n      toDOM: function toDOM() { return [\"code\"] }\n    }\n  }\n});\n\nfunction maybeMerge(a, b) {\n  if (a.isText && b.isText && Mark.sameSet(a.marks, b.marks))\n    { return a.withText(a.text + b.text) }\n}\n\n// Object used to track the context of a running parse.\nvar MarkdownParseState = function MarkdownParseState(schema, tokenHandlers) {\n  this.schema = schema;\n  this.stack = [{type: schema.topNodeType, content: []}];\n  this.marks = Mark.none;\n  this.tokenHandlers = tokenHandlers;\n};\n\nMarkdownParseState.prototype.top = function top () {\n  return this.stack[this.stack.length - 1]\n};\n\nMarkdownParseState.prototype.push = function push (elt) {\n  if (this.stack.length) { this.top().content.push(elt); }\n};\n\n// : (string)\n// Adds the given text to the current position in the document,\n// using the current marks as styling.\nMarkdownParseState.prototype.addText = function addText (text) {\n  if (!text) { return }\n  var nodes = this.top().content, last = nodes[nodes.length - 1];\n  var node = this.schema.text(text, this.marks), merged;\n  if (last && (merged = maybeMerge(last, node))) { nodes[nodes.length - 1] = merged; }\n  else { nodes.push(node); }\n};\n\n// : (Mark)\n// Adds the given mark to the set of active marks.\nMarkdownParseState.prototype.openMark = function openMark (mark) {\n  this.marks = mark.addToSet(this.marks);\n};\n\n// : (Mark)\n// Removes the given mark from the set of active marks.\nMarkdownParseState.prototype.closeMark = function closeMark (mark) {\n  this.marks = mark.removeFromSet(this.marks);\n};\n\nMarkdownParseState.prototype.parseTokens = function parseTokens (toks) {\n  for (var i = 0; i < toks.length; i++) {\n    var tok = toks[i];\n    var handler = this.tokenHandlers[tok.type];\n    if (!handler)\n      { throw new Error(\"Token type `\" + tok.type + \"` not supported by Markdown parser\") }\n    handler(this, tok, toks, i);\n  }\n};\n\n// : (NodeType, ?Object, ?[Node]) → ?Node\n// Add a node at the current position.\nMarkdownParseState.prototype.addNode = function addNode (type, attrs, content) {\n  var node = type.createAndFill(attrs, content, this.marks);\n  if (!node) { return null }\n  this.push(node);\n  return node\n};\n\n// : (NodeType, ?Object)\n// Wrap subsequent content in a node of the given type.\nMarkdownParseState.prototype.openNode = function openNode (type, attrs) {\n  this.stack.push({type: type, attrs: attrs, content: []});\n};\n\n// : () → ?Node\n// Close and return the node that is currently on top of the stack.\nMarkdownParseState.prototype.closeNode = function closeNode () {\n  if (this.marks.length) { this.marks = Mark.none; }\n  var info = this.stack.pop();\n  return this.addNode(info.type, info.attrs, info.content)\n};\n\nfunction attrs(spec, token, tokens, i) {\n  if (spec.getAttrs) { return spec.getAttrs(token, tokens, i) }\n  // For backwards compatibility when `attrs` is a Function\n  else if (spec.attrs instanceof Function) { return spec.attrs(token) }\n  else { return spec.attrs }\n}\n\n// Code content is represented as a single token with a `content`\n// property in Markdown-it.\nfunction noCloseToken(spec, type) {\n  return spec.noCloseToken || type == \"code_inline\" || type == \"code_block\" || type == \"fence\"\n}\n\nfunction withoutTrailingNewline(str) {\n  return str[str.length - 1] == \"\\n\" ? str.slice(0, str.length - 1) : str\n}\n\nfunction noOp() {}\n\nfunction tokenHandlers(schema, tokens) {\n  var handlers = Object.create(null);\n  var loop = function ( type ) {\n    var spec = tokens[type];\n    if (spec.block) {\n      var nodeType = schema.nodeType(spec.block);\n      if (noCloseToken(spec, type)) {\n        handlers[type] = function (state, tok, tokens, i) {\n          state.openNode(nodeType, attrs(spec, tok, tokens, i));\n          state.addText(withoutTrailingNewline(tok.content));\n          state.closeNode();\n        };\n      } else {\n        handlers[type + \"_open\"] = function (state, tok, tokens, i) { return state.openNode(nodeType, attrs(spec, tok, tokens, i)); };\n        handlers[type + \"_close\"] = function (state) { return state.closeNode(); };\n      }\n    } else if (spec.node) {\n      var nodeType$1 = schema.nodeType(spec.node);\n      handlers[type] = function (state, tok, tokens, i) { return state.addNode(nodeType$1, attrs(spec, tok, tokens, i)); };\n    } else if (spec.mark) {\n      var markType = schema.marks[spec.mark];\n      if (noCloseToken(spec, type)) {\n        handlers[type] = function (state, tok, tokens, i) {\n          state.openMark(markType.create(attrs(spec, tok, tokens, i)));\n          state.addText(withoutTrailingNewline(tok.content));\n          state.closeMark(markType);\n        };\n      } else {\n        handlers[type + \"_open\"] = function (state, tok, tokens, i) { return state.openMark(markType.create(attrs(spec, tok, tokens, i))); };\n        handlers[type + \"_close\"] = function (state) { return state.closeMark(markType); };\n      }\n    } else if (spec.ignore) {\n      if (noCloseToken(spec, type)) {\n        handlers[type] = noOp;\n      } else {\n        handlers[type + \"_open\"] = noOp;\n        handlers[type + \"_close\"] = noOp;\n      }\n    } else {\n      throw new RangeError(\"Unrecognized parsing spec \" + JSON.stringify(spec))\n    }\n  };\n\n  for (var type in tokens) loop( type );\n\n  handlers.text = function (state, tok) { return state.addText(tok.content); };\n  handlers.inline = function (state, tok) { return state.parseTokens(tok.children); };\n  handlers.softbreak = handlers.softbreak || (function (state) { return state.addText(\"\\n\"); });\n\n  return handlers\n}\n\n// ::- A configuration of a Markdown parser. Such a parser uses\n// [markdown-it](https://github.com/markdown-it/markdown-it) to\n// tokenize a file, and then runs the custom rules it is given over\n// the tokens to create a ProseMirror document tree.\nvar MarkdownParser = function MarkdownParser(schema, tokenizer, tokens) {\n  // :: Object The value of the `tokens` object used to construct\n  // this parser. Can be useful to copy and modify to base other\n  // parsers on.\n  this.tokens = tokens;\n  this.schema = schema;\n  // :: This parser's markdown-it tokenizer.\n  this.tokenizer = tokenizer;\n  this.tokenHandlers = tokenHandlers(schema, tokens);\n};\n\n// :: (string) → Node\n// Parse a string as [CommonMark](http://commonmark.org/) markup,\n// and create a ProseMirror document as prescribed by this parser's\n// rules.\nMarkdownParser.prototype.parse = function parse (text) {\n  var state = new MarkdownParseState(this.schema, this.tokenHandlers), doc;\n  state.parseTokens(this.tokenizer.parse(text, {}));\n  do { doc = state.closeNode(); } while (state.stack.length)\n  return doc || this.schema.topNodeType.createAndFill()\n};\n\nfunction listIsTight(tokens, i) {\n  while (++i < tokens.length)\n    { if (tokens[i].type != \"list_item_open\") { return tokens[i].hidden } }\n  return false\n}\n\n// :: MarkdownParser\n// A parser parsing unextended [CommonMark](http://commonmark.org/),\n// without inline HTML, and producing a document in the basic schema.\nvar defaultMarkdownParser = new MarkdownParser(schema, markdownit(\"commonmark\", {html: false}), {\n  blockquote: {block: \"blockquote\"},\n  paragraph: {block: \"paragraph\"},\n  list_item: {block: \"list_item\"},\n  bullet_list: {block: \"bullet_list\", getAttrs: function (_, tokens, i) { return ({tight: listIsTight(tokens, i)}); }},\n  ordered_list: {block: \"ordered_list\", getAttrs: function (tok, tokens, i) { return ({\n    order: +tok.attrGet(\"start\") || 1,\n    tight: listIsTight(tokens, i)\n  }); }},\n  heading: {block: \"heading\", getAttrs: function (tok) { return ({level: +tok.tag.slice(1)}); }},\n  code_block: {block: \"code_block\", noCloseToken: true},\n  fence: {block: \"code_block\", getAttrs: function (tok) { return ({params: tok.info || \"\"}); }, noCloseToken: true},\n  hr: {node: \"horizontal_rule\"},\n  image: {node: \"image\", getAttrs: function (tok) { return ({\n    src: tok.attrGet(\"src\"),\n    title: tok.attrGet(\"title\") || null,\n    alt: tok.children[0] && tok.children[0].content || null\n  }); }},\n  hardbreak: {node: \"hard_break\"},\n\n  em: {mark: \"em\"},\n  strong: {mark: \"strong\"},\n  link: {mark: \"link\", getAttrs: function (tok) { return ({\n    href: tok.attrGet(\"href\"),\n    title: tok.attrGet(\"title\") || null\n  }); }},\n  code_inline: {mark: \"code\", noCloseToken: true}\n});\n\n// ::- A specification for serializing a ProseMirror document as\n// Markdown/CommonMark text.\nvar MarkdownSerializer = function MarkdownSerializer(nodes, marks) {\n  // :: Object<(MarkdownSerializerState, Node)> The node serializer\n  // functions for this serializer.\n  this.nodes = nodes;\n  // :: Object The mark serializer info.\n  this.marks = marks;\n};\n\n// :: (Node, ?Object) → string\n// Serialize the content of the given node to\n// [CommonMark](http://commonmark.org/).\nMarkdownSerializer.prototype.serialize = function serialize (content, options) {\n  var state = new MarkdownSerializerState(this.nodes, this.marks, options);\n  state.renderContent(content);\n  return state.out\n};\n\n// :: MarkdownSerializer\n// A serializer for the [basic schema](#schema).\nvar defaultMarkdownSerializer = new MarkdownSerializer({\n  blockquote: function blockquote(state, node) {\n    state.wrapBlock(\"> \", null, node, function () { return state.renderContent(node); });\n  },\n  code_block: function code_block(state, node) {\n    state.write(\"```\" + (node.attrs.params || \"\") + \"\\n\");\n    state.text(node.textContent, false);\n    state.ensureNewLine();\n    state.write(\"```\");\n    state.closeBlock(node);\n  },\n  heading: function heading(state, node) {\n    state.write(state.repeat(\"#\", node.attrs.level) + \" \");\n    state.renderInline(node);\n    state.closeBlock(node);\n  },\n  horizontal_rule: function horizontal_rule(state, node) {\n    state.write(node.attrs.markup || \"---\");\n    state.closeBlock(node);\n  },\n  bullet_list: function bullet_list(state, node) {\n    state.renderList(node, \"  \", function () { return (node.attrs.bullet || \"*\") + \" \"; });\n  },\n  ordered_list: function ordered_list(state, node) {\n    var start = node.attrs.order || 1;\n    var maxW = String(start + node.childCount - 1).length;\n    var space = state.repeat(\" \", maxW + 2);\n    state.renderList(node, space, function (i) {\n      var nStr = String(start + i);\n      return state.repeat(\" \", maxW - nStr.length) + nStr + \". \"\n    });\n  },\n  list_item: function list_item(state, node) {\n    state.renderContent(node);\n  },\n  paragraph: function paragraph(state, node) {\n    state.renderInline(node);\n    state.closeBlock(node);\n  },\n\n  image: function image(state, node) {\n    state.write(\"![\" + state.esc(node.attrs.alt || \"\") + \"](\" + node.attrs.src +\n                (node.attrs.title ? ' \"' + node.attrs.title.replace(/\"/g, '\\\\\"') + '\"' : \"\") + \")\");\n  },\n  hard_break: function hard_break(state, node, parent, index) {\n    for (var i = index + 1; i < parent.childCount; i++)\n      { if (parent.child(i).type != node.type) {\n        state.write(\"\\\\\\n\");\n        return\n      } }\n  },\n  text: function text(state, node) {\n    state.text(node.text);\n  }\n}, {\n  em: {open: \"*\", close: \"*\", mixable: true, expelEnclosingWhitespace: true},\n  strong: {open: \"**\", close: \"**\", mixable: true, expelEnclosingWhitespace: true},\n  link: {\n    open: function open(_state, mark, parent, index) {\n      return isPlainURL(mark, parent, index, 1) ? \"<\" : \"[\"\n    },\n    close: function close(state, mark, parent, index) {\n      return isPlainURL(mark, parent, index, -1) ? \">\"\n        : \"](\" + mark.attrs.href + (mark.attrs.title ? ' \"' + mark.attrs.title.replace(/\"/g, '\\\\\"') + '\"' : \"\") + \")\"\n    }\n  },\n  code: {open: function open(_state, _mark, parent, index) { return backticksFor(parent.child(index), -1) },\n         close: function close(_state, _mark, parent, index) { return backticksFor(parent.child(index - 1), 1) },\n         escape: false}\n});\n\nfunction backticksFor(node, side) {\n  var ticks = /`+/g, m, len = 0;\n  if (node.isText) { while (m = ticks.exec(node.text)) { len = Math.max(len, m[0].length); } }\n  var result = len > 0 && side > 0 ? \" `\" : \"`\";\n  for (var i = 0; i < len; i++) { result += \"`\"; }\n  if (len > 0 && side < 0) { result += \" \"; }\n  return result\n}\n\nfunction isPlainURL(link, parent, index, side) {\n  if (link.attrs.title || !/^\\w+:/.test(link.attrs.href)) { return false }\n  var content = parent.child(index + (side < 0 ? -1 : 0));\n  if (!content.isText || content.text != link.attrs.href || content.marks[content.marks.length - 1] != link) { return false }\n  if (index == (side < 0 ? 1 : parent.childCount - 1)) { return true }\n  var next = parent.child(index + (side < 0 ? -2 : 1));\n  return !link.isInSet(next.marks)\n}\n\n// ::- This is an object used to track state and expose\n// methods related to markdown serialization. Instances are passed to\n// node and mark serialization methods (see `toMarkdown`).\nvar MarkdownSerializerState = function MarkdownSerializerState(nodes, marks, options) {\n  this.nodes = nodes;\n  this.marks = marks;\n  this.delim = this.out = \"\";\n  this.closed = false;\n  this.inTightList = false;\n  // :: Object\n  // The options passed to the serializer.\n  // tightLists:: ?bool\n  // Whether to render lists in a tight style. This can be overridden\n  // on a node level by specifying a tight attribute on the node.\n  // Defaults to false.\n  this.options = options || {};\n  if (typeof this.options.tightLists == \"undefined\")\n    { this.options.tightLists = false; }\n};\n\nMarkdownSerializerState.prototype.flushClose = function flushClose (size) {\n  if (this.closed) {\n    if (!this.atBlank()) { this.out += \"\\n\"; }\n    if (size == null) { size = 2; }\n    if (size > 1) {\n      var delimMin = this.delim;\n      var trim = /\\s+$/.exec(delimMin);\n      if (trim) { delimMin = delimMin.slice(0, delimMin.length - trim[0].length); }\n      for (var i = 1; i < size; i++)\n        { this.out += delimMin + \"\\n\"; }\n    }\n    this.closed = false;\n  }\n};\n\n// :: (string, ?string, Node, ())\n// Render a block, prefixing each line with `delim`, and the first\n// line in `firstDelim`. `node` should be the node that is closed at\n// the end of the block, and `f` is a function that renders the\n// content of the block.\nMarkdownSerializerState.prototype.wrapBlock = function wrapBlock (delim, firstDelim, node, f) {\n  var old = this.delim;\n  this.write(firstDelim || delim);\n  this.delim += delim;\n  f();\n  this.delim = old;\n  this.closeBlock(node);\n};\n\nMarkdownSerializerState.prototype.atBlank = function atBlank () {\n  return /(^|\\n)$/.test(this.out)\n};\n\n// :: ()\n// Ensure the current content ends with a newline.\nMarkdownSerializerState.prototype.ensureNewLine = function ensureNewLine () {\n  if (!this.atBlank()) { this.out += \"\\n\"; }\n};\n\n// :: (?string)\n// Prepare the state for writing output (closing closed paragraphs,\n// adding delimiters, and so on), and then optionally add content\n// (unescaped) to the output.\nMarkdownSerializerState.prototype.write = function write (content) {\n  this.flushClose();\n  if (this.delim && this.atBlank())\n    { this.out += this.delim; }\n  if (content) { this.out += content; }\n};\n\n// :: (Node)\n// Close the block for the given node.\nMarkdownSerializerState.prototype.closeBlock = function closeBlock (node) {\n  this.closed = node;\n};\n\n// :: (string, ?bool)\n// Add the given text to the document. When escape is not `false`,\n// it will be escaped.\nMarkdownSerializerState.prototype.text = function text (text$1, escape) {\n  var lines = text$1.split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    var startOfLine = this.atBlank() || this.closed;\n    this.write();\n    this.out += escape !== false ? this.esc(lines[i], startOfLine) : lines[i];\n    if (i != lines.length - 1) { this.out += \"\\n\"; }\n  }\n};\n\n// :: (Node)\n// Render the given node as a block.\nMarkdownSerializerState.prototype.render = function render (node, parent, index) {\n  if (typeof parent == \"number\") { throw new Error(\"!\") }\n  if (!this.nodes[node.type.name]) { throw new Error(\"Token type `\" + node.type.name + \"` not supported by Markdown renderer\") }\n  this.nodes[node.type.name](this, node, parent, index);\n};\n\n// :: (Node)\n// Render the contents of `parent` as block nodes.\nMarkdownSerializerState.prototype.renderContent = function renderContent (parent) {\n    var this$1 = this;\n\n  parent.forEach(function (node, _, i) { return this$1.render(node, parent, i); });\n};\n\n// :: (Node)\n// Render the contents of `parent` as inline content.\nMarkdownSerializerState.prototype.renderInline = function renderInline (parent) {\n    var this$1 = this;\n\n  var active = [], trailing = \"\";\n  var progress = function (node, _, index) {\n    var marks = node ? node.marks : [];\n\n    // Remove marks from `hard_break` that are the last node inside\n    // that mark to prevent parser edge cases with new lines just\n    // before closing marks.\n    // (FIXME it'd be nice if we had a schema-agnostic way to\n    // identify nodes that serialize as hard breaks)\n    if (node && node.type.name === \"hard_break\")\n      { marks = marks.filter(function (m) {\n        if (index + 1 == parent.childCount) { return false }\n        var next = parent.child(index + 1);\n        return m.isInSet(next.marks) && (!next.isText || /\\S/.test(next.text))\n      }); }\n\n    var leading = trailing;\n    trailing = \"\";\n    // If whitespace has to be expelled from the node, adjust\n    // leading and trailing accordingly.\n    if (node && node.isText && marks.some(function (mark) {\n      var info = this$1.marks[mark.type.name];\n      return info && info.expelEnclosingWhitespace\n    })) {\n      var ref = /^(\\s*)(.*?)(\\s*)$/m.exec(node.text);\n        var _$1 = ref[0];\n        var lead = ref[1];\n        var inner$1 = ref[2];\n        var trail = ref[3];\n      leading += lead;\n      trailing = trail;\n      if (lead || trail) {\n        node = inner$1 ? node.withText(inner$1) : null;\n        if (!node) { marks = active; }\n      }\n    }\n\n    var inner = marks.length && marks[marks.length - 1], noEsc = inner && this$1.marks[inner.type.name].escape === false;\n    var len = marks.length - (noEsc ? 1 : 0);\n\n    // Try to reorder 'mixable' marks, such as em and strong, which\n    // in Markdown may be opened and closed in different order, so\n    // that order of the marks for the token matches the order in\n    // active.\n    outer: for (var i = 0; i < len; i++) {\n      var mark = marks[i];\n      if (!this$1.marks[mark.type.name].mixable) { break }\n      for (var j = 0; j < active.length; j++) {\n        var other = active[j];\n        if (!this$1.marks[other.type.name].mixable) { break }\n        if (mark.eq(other)) {\n          if (i > j)\n            { marks = marks.slice(0, j).concat(mark).concat(marks.slice(j, i)).concat(marks.slice(i + 1, len)); }\n          else if (j > i)\n            { marks = marks.slice(0, i).concat(marks.slice(i + 1, j)).concat(mark).concat(marks.slice(j, len)); }\n          continue outer\n        }\n      }\n    }\n\n    // Find the prefix of the mark set that didn't change\n    var keep = 0;\n    while (keep < Math.min(active.length, len) && marks[keep].eq(active[keep])) { ++keep; }\n\n    // Close the marks that need to be closed\n    while (keep < active.length)\n      { this$1.text(this$1.markString(active.pop(), false, parent, index), false); }\n\n    // Output any previously expelled trailing whitespace outside the marks\n    if (leading) { this$1.text(leading); }\n\n    // Open the marks that need to be opened\n    if (node) {\n      while (active.length < len) {\n        var add = marks[active.length];\n        active.push(add);\n        this$1.text(this$1.markString(add, true, parent, index), false);\n      }\n\n      // Render the node. Special case code marks, since their content\n      // may not be escaped.\n      if (noEsc && node.isText)\n        { this$1.text(this$1.markString(inner, true, parent, index) + node.text +\n                  this$1.markString(inner, false, parent, index + 1), false); }\n      else\n        { this$1.render(node, parent, index); }\n    }\n  };\n  parent.forEach(progress);\n  progress(null, null, parent.childCount);\n};\n\n// :: (Node, string, (number) → string)\n// Render a node's content as a list. `delim` should be the extra\n// indentation added to all lines except the first in an item,\n// `firstDelim` is a function going from an item index to a\n// delimiter for the first line of the item.\nMarkdownSerializerState.prototype.renderList = function renderList (node, delim, firstDelim) {\n    var this$1 = this;\n\n  if (this.closed && this.closed.type == node.type)\n    { this.flushClose(3); }\n  else if (this.inTightList)\n    { this.flushClose(1); }\n\n  var isTight = typeof node.attrs.tight != \"undefined\" ? node.attrs.tight : this.options.tightLists;\n  var prevTight = this.inTightList;\n  this.inTightList = isTight;\n  node.forEach(function (child, _, i) {\n    if (i && isTight) { this$1.flushClose(1); }\n    this$1.wrapBlock(delim, firstDelim(i), node, function () { return this$1.render(child, node, i); });\n  });\n  this.inTightList = prevTight;\n};\n\n// :: (string, ?bool) → string\n// Escape the given string so that it can safely appear in Markdown\n// content. If `startOfLine` is true, also escape characters that\n// have special meaning only at the start of the line.\nMarkdownSerializerState.prototype.esc = function esc (str, startOfLine) {\n  str = str.replace(/[`*\\\\~\\[\\]_]/g, \"\\\\$&\");\n  if (startOfLine) { str = str.replace(/^[:#\\-*+>]/, \"\\\\$&\").replace(/^(\\s*\\d+)\\./, \"$1\\\\.\"); }\n  return str\n};\n\nMarkdownSerializerState.prototype.quote = function quote (str) {\n  var wrap = str.indexOf('\"') == -1 ? '\"\"' : str.indexOf(\"'\") == -1 ? \"''\" : \"()\";\n  return wrap[0] + str + wrap[1]\n};\n\n// :: (string, number) → string\n// Repeat the given string `n` times.\nMarkdownSerializerState.prototype.repeat = function repeat (str, n) {\n  var out = \"\";\n  for (var i = 0; i < n; i++) { out += str; }\n  return out\n};\n\n// : (Mark, bool, string?) → string\n// Get the markdown string for a given opening or closing mark.\nMarkdownSerializerState.prototype.markString = function markString (mark, open, parent, index) {\n  var info = this.marks[mark.type.name];\n  var value = open ? info.open : info.close;\n  return typeof value == \"string\" ? value : value(this, mark, parent, index)\n};\n\n// :: (string) → { leading: ?string, trailing: ?string }\n// Get leading and trailing whitespace from a string. Values of\n// leading or trailing property of the return object will be undefined\n// if there is no match.\nMarkdownSerializerState.prototype.getEnclosingWhitespace = function getEnclosingWhitespace (text) {\n  return {\n    leading: (text.match(/^(\\s+)/) || [])[0],\n    trailing: (text.match(/(\\s+)$/) || [])[0]\n  }\n};\n\nexport { MarkdownParser, MarkdownSerializer, MarkdownSerializerState, defaultMarkdownParser, defaultMarkdownSerializer, schema };\n//# sourceMappingURL=index.es.js.map\n","var arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"],"sourceRoot":""}